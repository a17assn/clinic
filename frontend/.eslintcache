[{"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\index.js":"1","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\App.js":"2","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Dashboard.js":"4","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\SMSTextMessaging.js":"5","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Payments.js":"6","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Appointments.js":"7","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccounts.js":"8","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\VisitChart.js":"9","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js":"10","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SMSTable.js":"11","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js":"12","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountForm.js":"13","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccount.js":"14","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccountsTable.js":"15","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\CreateAccountModal.js":"16","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SendCustomMessageModal.js":"17","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\AdultTeethChart.js":"18","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\ChildTeethChart.js":"19","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js":"20","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js":"21","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\PayInstallmentModal.js":"22","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js":"23","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Login.js":"24","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js":"25","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js":"26","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\index.js":"27","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userActions.js":"28","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userTypes.js":"29","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\store.js":"30","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\rootReducer.js":"31","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userReducer.js":"32","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\Layout.js":"33","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentActions.js":"34","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentReducer.js":"35","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentTypes.js":"36","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientActions.js":"37","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientTypes.js":"38","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientReducer.js":"39","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\DentalRecords.js":"40","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecord.js":"41","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsTable.js":"42","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js":"43","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\SiderNavigation.js":"44","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js":"45","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billActions.js":"46","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billTypes.js":"47","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billReducer.js":"48","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\userAccountSettings.js":"49","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccountSettings.js":"50","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\TreatmentsTable.js":"51","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\DMFTPopover.js":"52","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdateContactForm.js":"53","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\AddTreatmentModal.js":"54","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\PatientCreateAppointmentModal.js":"55","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Reception.js":"56","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\TreatmentsPopoverDrawer.js":"57"},{"size":545,"mtime":1611361866750,"results":"58","hashOfConfig":"59"},{"size":2079,"mtime":1611358968069,"results":"60","hashOfConfig":"59"},{"size":4948,"mtime":1563090724000,"results":"61","hashOfConfig":"59"},{"size":3288,"mtime":1611358985265,"results":"62","hashOfConfig":"59"},{"size":360,"mtime":1607641742499,"results":"63","hashOfConfig":"59"},{"size":8856,"mtime":1611268681377,"results":"64","hashOfConfig":"59"},{"size":1910,"mtime":1610840310797,"results":"65","hashOfConfig":"59"},{"size":675,"mtime":1611358640149,"results":"66","hashOfConfig":"59"},{"size":6705,"mtime":1610977470648,"results":"67","hashOfConfig":"59"},{"size":5781,"mtime":1611360770182,"results":"68","hashOfConfig":"59"},{"size":17471,"mtime":1609855390902,"results":"69","hashOfConfig":"59"},{"size":3100,"mtime":1609855390903,"results":"70","hashOfConfig":"59"},{"size":4953,"mtime":1609855390903,"results":"71","hashOfConfig":"59"},{"size":2328,"mtime":1611358609796,"results":"72","hashOfConfig":"59"},{"size":5528,"mtime":1609855390902,"results":"73","hashOfConfig":"59"},{"size":5740,"mtime":1610977276411,"results":"74","hashOfConfig":"59"},{"size":1587,"mtime":1609855390903,"results":"75","hashOfConfig":"59"},{"size":49955,"mtime":1611360817514,"results":"76","hashOfConfig":"59"},{"size":36670,"mtime":1611360823981,"results":"77","hashOfConfig":"59"},{"size":3323,"mtime":1611360898621,"results":"78","hashOfConfig":"59"},{"size":1955,"mtime":1610723130865,"results":"79","hashOfConfig":"59"},{"size":2509,"mtime":1611361281259,"results":"80","hashOfConfig":"59"},{"size":6756,"mtime":1610060739181,"results":"81","hashOfConfig":"59"},{"size":3538,"mtime":1611358738107,"results":"82","hashOfConfig":"59"},{"size":450,"mtime":1609690890249,"results":"83","hashOfConfig":"59"},{"size":3938,"mtime":1610977049078,"results":"84","hashOfConfig":"59"},{"size":162,"mtime":1610234517274,"results":"85","hashOfConfig":"59"},{"size":5651,"mtime":1610051409264,"results":"86","hashOfConfig":"59"},{"size":1016,"mtime":1609718440458,"results":"87","hashOfConfig":"59"},{"size":302,"mtime":1609855576742,"results":"88","hashOfConfig":"59"},{"size":427,"mtime":1610234580600,"results":"89","hashOfConfig":"59"},{"size":2018,"mtime":1609718440424,"results":"90","hashOfConfig":"59"},{"size":3109,"mtime":1611361882241,"results":"91","hashOfConfig":"59"},{"size":2501,"mtime":1610565180926,"results":"92","hashOfConfig":"59"},{"size":1076,"mtime":1610234492959,"results":"93","hashOfConfig":"59"},{"size":532,"mtime":1609856457719,"results":"94","hashOfConfig":"59"},{"size":2487,"mtime":1610564637799,"results":"95","hashOfConfig":"59"},{"size":472,"mtime":1609879348976,"results":"96","hashOfConfig":"59"},{"size":998,"mtime":1609885206371,"results":"97","hashOfConfig":"59"},{"size":718,"mtime":1610384992294,"results":"98","hashOfConfig":"59"},{"size":16349,"mtime":1611361223533,"results":"99","hashOfConfig":"59"},{"size":12691,"mtime":1611360607891,"results":"100","hashOfConfig":"59"},{"size":4480,"mtime":1611359930388,"results":"101","hashOfConfig":"59"},{"size":1879,"mtime":1611361800136,"results":"102","hashOfConfig":"59"},{"size":3635,"mtime":1611360942583,"results":"103","hashOfConfig":"59"},{"size":2439,"mtime":1610749703427,"results":"104","hashOfConfig":"59"},{"size":427,"mtime":1610234533985,"results":"105","hashOfConfig":"59"},{"size":935,"mtime":1610234543785,"results":"106","hashOfConfig":"59"},{"size":2244,"mtime":1610238884395,"results":"107","hashOfConfig":"59"},{"size":2251,"mtime":1611359068201,"results":"108","hashOfConfig":"59"},{"size":12941,"mtime":1611361463693,"results":"109","hashOfConfig":"59"},{"size":1639,"mtime":1611361437249,"results":"110","hashOfConfig":"59"},{"size":1183,"mtime":1610840997983,"results":"111","hashOfConfig":"59"},{"size":9752,"mtime":1611361388474,"results":"112","hashOfConfig":"59"},{"size":2912,"mtime":1611361089130,"results":"113","hashOfConfig":"59"},{"size":1669,"mtime":1611360866612,"results":"114","hashOfConfig":"59"},{"size":2002,"mtime":1611361434488,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18zt6zb",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\index.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\App.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\serviceWorker.js",[],["238","239"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Dashboard.js",["240"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\SMSTextMessaging.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Payments.js",["241","242"],"import React, { useState, useEffect } from 'react';\nimport { Table, message, Row, Col, Radio, Input, DatePicker, Tag, Typography, Button, Layout } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nimport { getBILLS } from \"../redux\";\nimport { connect } from \"react-redux\";\n\nconst { RangePicker } = DatePicker;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\n\nfunction Payments(props) {\n\n   const [state, setState] = useState({\n      loading: true,\n      paymentTransactions: [],\n      search: '',\n      selectedFilterBy: '',\n      rangeDate: []\n   });\n\n\n\n   const [payment, setPayment] = useState();\n\n\n   useEffect(() => {\n      getPaymentsTable();\n\n   }, []);\n\n\n\n   const getPaymentsTable = async () => {\n\n      await props.getBILLS();\n      setPayment(props.payment);\n\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/payment/`,\n\n      );\n      setPayment(res.data);\n\n   }\n\n\n\n   console.log(props.payment, \"c\");\n\n   const handleSearch = (value) => {\n\n\n      setPayment(props.appointments.filter(({ patient }) => {\n         return patient.includes(value);\n      }));\n\n   }\n\n\n\n   const onRadioChange = (e) => {\n      const { value: filterBy } = e.target;\n      setState({ selectedFilterBy: filterBy });\n      if (filterBy === 'day')\n         setState({ rangeDate: [moment(), moment()] });\n      else if (filterBy === 'week')\n         setState({ rangeDate: [moment().startOf('week'), moment().endOf('week')] });\n      else if (filterBy === 'month')\n         setState({ rangeDate: [moment().startOf('month'), moment().endOf('month')] });\n      else if (filterBy === 'year')\n         setState({ rangeDate: [moment().startOf('year'), moment().endOf('year')] });\n      // getPaymentTransactions(state.search, state.rangeDate);\n   }\n\n   const onRangePickerChange = (dates, dateStrings) => {\n      setState({ selectedFilterBy: '' });\n      setState({ rangeDate: dates });\n      // getPaymentTransactions(state.search, state.rangeDate);\n   }\n\n   const handlePrint = () => {\n\n      const body = [];\n      let total = 0;\n      state.paymentTransactions.forEach(({ date_paid, amount_paid, payment_type, from, received_by }) => {\n         total += amount_paid;\n         body.push({\n            date_paid: moment(date_paid).format('MMMM DD, YYYY'),\n            amount_paid: amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            payment_type,\n            from,\n            received_by\n         });\n      });\n\n      const doc = new jsPDF({\n         format: [612, 792]\n      });\n      const totalPagesExp = \"{total_pages_count_string}\";\n\n      // Header\n      const pageSize = doc.internal.pageSize;\n      const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n      const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n\n      doc.setFontSize(16);\n      // doc.setFontStyle('bold');\n      doc.text('Andres Dental Clinic', pageWidth - 68, 10);\n      doc.setFontSize(10);\n      doc.setTextColor(53, 53, 53);\n      // doc.setFontStyle('normal');\n      doc.text('One.O.5ive Department Store', pageWidth - 60, 14);\n      doc.text('J. P. Rizal Street, Barangay 18', pageWidth - 62, 18);\n      doc.text('Laoag City, 2900 Ilocos Norte', pageWidth - 60, 22);\n      doc.text('09212451903', pageWidth - 35, 26);\n      doc.setFontSize(14);\n      doc.setTextColor(0, 0, 0);\n      doc.text('Transaction Log', 15, 32);\n      const [startDate, endDate] = state.rangeDate;\n      doc.setFontSize(10);\n\n      if (startDate && endDate) {\n         doc.setTextColor(53, 53, 53);\n         doc.text(`(${moment(startDate).format('MMMM DD, YYYY')} - ${moment(endDate).format('MMMM DD, YYYY')})`, 54, 32);\n         doc.setTextColor(0, 0, 0);\n      }\n\n      doc.autoTable({\n         columns: [\n            { header: 'Date Paid', dataKey: 'date_paid' },\n            { header: 'Amount Paid', dataKey: 'amount_paid' },\n            { header: 'Payment Type', dataKey: 'payment_type' },\n            { header: 'From', dataKey: 'from' },\n            { header: 'Received By', dataKey: 'received_by' },\n         ],\n         body,\n         didDrawPage: (data) => {\n            // Footer\n            var str = \"Page \" + doc.internal.getNumberOfPages()\n            // Total page number plugin only available in jspdf v1.0+\n            if (typeof doc.putTotalPages === 'function') {\n               str = str + \" of \" + totalPagesExp;\n            }\n            // doc.setFontStyle('normal');\n\n            // jsPDF 1.4+ uses getWidth, <1.4 uses .width\n            doc.text(str, data.settings.margin.left, pageHeight - 10);\n            doc.text(`Generated on ${moment(Date.now()).format('MMMM DD, YYYY hh:mmA')}`, pageWidth - 73, pageHeight - 10);\n\n         },\n         startY: 34,\n         showHead: 'firstPage',\n      });\n\n      doc.line(15, doc.autoTable.previous.finalY + 3, pageWidth - 15, doc.autoTable.previous.finalY + 3); // horizontal line  \n      // doc.setFontStyle('bold');\n      doc.text('TOTAL:', 15, doc.autoTable.previous.finalY + 8);\n      doc.text(`${total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 48, doc.autoTable.previous.finalY + 8);\n      if (typeof doc.putTotalPages === 'function')\n         doc.putTotalPages(totalPagesExp);\n\n      doc.autoPrint();\n      window.open(doc.output('bloburl'), '_blank');\n   }\n\n\n\n   const columns = [\n      {\n         title: <Text strong>Date Paid</Text>,\n         dataIndex: 'date_paid',\n         render: (text, record) => {\n            const display = moment(record.date_paid).format('MMMM DD, YYYY') === moment(Date.now()).format('MMMM DD, YYYY') ? <Tag color=\"geekblue\">Today</Tag>\n               : moment(record.date_paid).format('MMMM DD, YYYY');\n            return display;\n         }\n      },\n      {\n         title: <Text strong>Amount Paid</Text>,\n         dataIndex: 'amount_paid',\n         render: (text, record) => {\n            return ' $ ' + record.amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n         }\n      },\n      // {\n      //    title: <Text strong>Payment Type</Text>,\n      //    dataIndex: 'payment_type',\n      //    render: (text, record) => {\n      //       return record.payment_type.substring(0, 1).toUpperCase() + record.payment_type.substring(1, record.payment_type.length);\n      //    }\n      // },\n      {\n         title: <Text strong>From</Text>,\n         dataIndex: 'from',\n         render: (text, record) => {\n            return record.from;\n         }\n      },\n      {\n         title: <Text strong>Received By</Text>,\n         dataIndex: 'received_by',\n         render: (text, record) => {\n            return record.received_by;\n         }\n      }\n   ];\n\n   return (\n      <Layout style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4} style={{ margin: 0 }}>سجل المعاملات</Title>\n         <Row align=\"middle\" gutter={8}>\n            <Col style={{ marginBottom: 8 }} span={24}>\n               <Search\n                  style={{ width: '100%', zIndex: -999 }}\n                  placeholder=\"search payment log by patient name\"\n                  enterButton\n                  // onSearch={(value) => getPaymentTransactions(value, state.rangeDate)}\n                  // onChange={handleSearchChange}\n                  onChange={(e) => handleSearch(e.target.value)}\n\n               />\n\n            </Col>\n            <Col span={12} align=\"right\">\n               <Radio.Group value={state.selectedFilterBy} onChange={onRadioChange}>\n                  <Radio.Button value=\"day\">All Today</Radio.Button>\n                  <Radio.Button value=\"week\">All Week</Radio.Button>\n                  <Radio.Button value=\"month\">All Month</Radio.Button>\n                  <Radio.Button value=\"year\">All Year</Radio.Button>\n               </Radio.Group>\n            </Col>\n\n            <Col style={{ marginBottom: 8 }} span={12}>\n               <RangePicker allowClear={true} value={state.rangeDate} format=\"MMMM DD, YYYY\" onChange={onRangePickerChange} style={{ width: '100%' }} />\n            </Col>\n\n         </Row>\n         <Row>\n            <Col align=\"right\">\n               <Button onClick={handlePrint} type=\"primary\"> Print Transaction Log</Button>\n            </Col>\n         </Row>\n         <Table\n            dataSource={payment}\n            size=\"medium\"\n            columns={columns}\n            scroll={{ x: 500 }}\n            rowKey={(record) => record.id}\n\n            pagination={\n               {\n                  position: 'both',\n                  defaultCurrent: 1,\n                  pageSize: 10,\n                \n               }\n            }\n         />\n      </Layout>\n   );\n\n\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      payment: state.bill.bills,\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getBILLS }\n)(Payments);\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Appointments.js",["243","244"],"import React, { useState, useEffect } from 'react';\nimport { Tabs, Typography, message } from 'antd';\nimport AppointmentsCalendar from '../components/appointments/ApppointmentsCalendar';\nimport AppointmentsTable from '../components/appointments/AppointmentsTable';\nimport { Layout } from 'antd';\nimport { getABNTs } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\n\n\n\n\nfunction Appointments(props) {\n\n   const [appointment, setAppointment] = useState();\n\n\n   useEffect(() => {\n      getAppointmentsTable();\n\n   }, []);\n\n\n\n\n\n   const getAppointmentsTable = async () => {\n      await props.getABNTs();\n      setAppointment(props.appointments);\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/appointments/`,\n\n      );\n      setAppointment(res.data);\n\n   }\n\n   console.log(appointment);\n   console.log(props.appointments, \"c\");\n\n   const handleSearch = (value) => {\n\n\n      setAppointment(props.appointments.filter(({ patient }) => {\n         return patient.includes(value);\n      }));\n\n   }\n\n\n\n   return (\n      <Content style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4}>الحجوزات</Title>\n\n\n\n         <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Table View\" key=\"1\">\n               <AppointmentsTable appointments={appointment} updateInput={handleSearch} />\n            </TabPane>\n            <TabPane tab=\"Calendar View\" key=\"2\">\n               <AppointmentsCalendar appointments={appointment} getAppointments={getAppointmentsTable} />\n            </TabPane>\n         </Tabs>\n      </Content>\n   );\n\n}\n\n\n\nconst mapStateToProps = state => {\n   return {\n      appointments: state.Abointments.assignmentes,\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getABNTs }\n)(Appointments);\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccounts.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\VisitChart.js",["245"],"import React from 'react';\nimport { DatePicker, Select, Badge, Row, Col, Typography } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\n\n\nconst { RangePicker } = DatePicker;\nconst { Title } = Typography;\n\nconst getMonthName = (monthNumber) => {\n   switch (monthNumber) {\n      case 1:\n         return \"January\";\n      case 2:\n         return \"February\";\n      case 3:\n         return \"March\";\n      case 4:\n         return \"April\";\n      case 5:\n         return \"May\";\n      case 6:\n         return \"June\";\n      case 7:\n         return \"July\";\n      case 8:\n         return \"August\";\n      case 9:\n         return \"September\";\n      case 10:\n         return \"October\";\n      case 11:\n         return \"November\";\n      case 12:\n         return \"December\";\n      default:\n         break;\n   }\n}\n\nconst getDayName = (dayNumber) => {\n   switch (dayNumber) {\n      case 0:\n         return \"Monday\";\n      case 1:\n         return \"Tuesday\";\n      case 2:\n         return \"Wednesday\";\n      case 3:\n         return \"Thursday\";\n      case 4:\n         return \"Friday\";\n      case 5:\n         return \"Saturday\";\n      case 6:\n         return \"Sunday\";\n      default:\n         break;\n   }\n}\n\n\nclass VisitChart extends React.Component {\n\n\n   state = {\n      filterBy: 'month',\n      rangeDate: [moment().startOf('year'), moment().endOf('year')],\n      visitsTrend: [],\n      visitsRanking: []\n   };\n\n   componentDidMount() {\n      this.getVisits();\n   }\n\n   getVisits() {\n      // axios.get('dashboard/visits', {\n      //    params: {\n      //       startDate: moment(this.state.rangeDate[0]).format('YYYY-MM-DD'),\n      //       endDate: moment(this.state.rangeDate[1]).format('YYYY-MM-DD'),\n      //       filterBy: this.state.filterBy\n      //    }\n      // })\n      // .then((response) => {\n      // if (response.status === 200)\n      // this.setState({ visitsTrend: response.data.visits, visitsRanking: response.data.visitsRanked });\n      // })\n      // .catch((err) => {\n      //    console.log(err);\n      // });\n   }\n\n   handleSelectChange = async (value) => {\n      this.setState({ filterBy: value });\n      this.getVisits();\n   }\n\n   handleRangeDateChange = async (dates) => {\n      if (dates.length === 0)\n         this.setState({\n            rangeDate: [moment().startOf('year'), moment().endOf('year')]\n         });\n      else\n         this.setState({\n            rangeDate: dates\n         });\n      this.getVisits();\n   }\n\n   render() {\n\n\n      const data = [...this.state.visitsTrend].map((data) => {\n         if (this.state.filterBy === 'month')\n            return {\n               \"name\": getMonthName(data.name),\n               \"Number of Visits\": data[\"Number of Visits\"]\n            };\n         return {\n            \"name\": getDayName(data.name),\n            \"Number of Visits\": data[\"Number of Visits\"]\n         };\n      });\n      console.log('Visits Trend raw', this.state.visitsTrend)\n      console.log(data);\n\n      let previousPosition;\n      let visitsRanking = [...this.state.visitsRanking].map((obj, index, arr) => {\n         if (index !== 0) {\n            if (obj.totalVisits === arr[index - 1].totalVisits) {\n               return {\n                  ...obj,\n                  position: previousPosition\n               }\n            }\n            previousPosition += 1;\n            return {\n               ...obj,\n               position: previousPosition\n            }\n         }\n         previousPosition = 1;\n         return {\n            ...obj,\n            position: previousPosition\n         };\n      });\n\n      const cols = {\n         numberofvisits: {\n            tickInterval: 20\n         }\n      };\n\n      return (\n         <div style={{ padding: '12px 0px 24px 0px' }}>\n            <Row gutter={32}>\n               <Col span={18}>\n                  <Title level={4} style={{ marginLeft: 30, marginTop: 0, fontWeight: 'normal', fontSize: 14 }}>Visits Trend</Title>\n                  <Row>\n                     <Col span={24} align=\"right\">\n                        <Select style={{ marginRight: 12 }} defaultValue=\"month\" onChange={this.handleSelectChange} >\n                           <Select.Option value=\"month\">Month</Select.Option>\n                           <Select.Option value=\"day\">Day</Select.Option>\n                        </Select>\n                        <RangePicker style={{ marginBottom: 8 }} format=\"MMMM DD, YYYY\" defaultPickerValue={[moment().startOf('year'), moment().endOf('year')]} value={this.state.rangeDate} onChange={this.handleRangeDateChange} />\n                     </Col>\n                  </Row>\n                  {/* <Title style={{textAlign: 'center', fontWeight: 'normal', fontSize: 18}}>January 1, 2019 ~ December 31, 2019</Title> */}\n                  <Chart height={400} data={data} scale={cols} forceFit>\n                     <Axis name=\"name\" />\n                     <Axis name=\"Number of Visits\" />\n                     <Tooltip\n                        crosshairs={{\n                           type: \"y\"\n                        }}\n                     />\n                     <Geom type=\"interval\" position=\"name*Number of Visits\" />\n                  </Chart>\n               </Col>\n               <Col span={6}>\n                  <Title level={1} style={{ marginTop: 0, marginBottom: 24, fontWeight: 'normal', fontSize: 14 }}>Visits Ranking</Title>\n\n                  {\n                     visitsRanking.map((obj, index) => {\n                        if (index < 3)\n                           return (\n                              <Row style={{ marginBottom: 12 }}>\n                                 <Col span={24}>\n                                    <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#314659', color: '#f5f5f5' }} />\n                                    {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                                 </Col>\n                              </Row>\n                           );\n                        return (\n                           <Row style={{ marginBottom: 12 }}>\n                              <Col span={24}>\n                                 <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#f5f5f5', color: '#595959' }} />\n                                 {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                              </Col>\n                           </Row>\n                        );\n                     })\n                  }\n\n               </Col>\n            </Row>\n\n         </div>\n      );\n   }\n}\n\nexport default VisitChart;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SMSTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js",["246","247"],"import React,{useState} from 'react';\nimport { Form, Input, Row, Col, Button, message } from 'antd';\nimport axios from 'axios';\n\n\nfunction UpdateAccountCredentialsForm(props) {\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields(async (err, values) => {\n         if (err)\n            return\n         await props.onUpdate(values);\n         props.form.setFieldsValue({ password: '' });\n         props.form.setFieldsValue({ confirm_password: '' });\n\n      });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      }\n      else if (form.getFieldValue('password') && !value) {\n         callback('Please confirm your password');\n      }\n      else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      // const form = props.form;\n      // if (value) {\n      // //   form.validateFields(['confirm_password'], { force: true });\n      // }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  if (!response.data.isValid && response.data.username !== props.account.username)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n   \n      const { account } = props;\n\n      return (\n         <React.Fragment>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Username\" initialValue={account.username || ''} name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"New Password\" name=\"username\" rules={[{ required: true, message: 'password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Confirm New Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n         </React.Fragment>\n      );\n   \n}\n\nexport default UpdateAccountCredentialsForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountForm.js",["248","249","250","251"],"import React,{useState} from 'react';\nimport { message, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nconst { Option } = Select;\n\n\n   function UpdateAccountForm(props) {\n\n      const [state, setState] = useState({\n         selectedRole: ''\n      });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onUpdate(values);\n      });\n   }\n\n   const validateEmailFormat = (email) => {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n   }\n\n   const validateEmail = async (rule, value, callback) => {\n      const form = props.form;\n      if (validateEmailFormat(value)) {\n         if (value) {\n            await axios.post(`users/${value}/validateEmail`)\n               .then((response) => {\n                  if (response.status === 200) {\n                     if (!response.data.isValid && response.data.email !== props.account.emailaddress)\n                        callback('Email Address already used!');\n                     else\n                        callback();\n                  }\n               })\n               .catch((err) => {\n                  console.log(err);\n                  message.error('Internal server error!');\n               });\n         }\n      }\n      else if (!validateEmailFormat(value) && value !== '') {\n         callback('Invalid Email Address format')\n      }\n      callback();\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n      const { account } = props;\n\n      const roleSelect = account.role === 'patient' ? (\n         <Select disabled>\n            <Option value=\"dentalaide\">Dental Aide</Option>\n            <Option value=\"dentist\">Dentist</Option>\n         </Select>\n      ) : (\n            <Select onChange={handleSelectRoleChange}>\n               <Option value=\"dentalaide\">Dental Aide</Option>\n               <Option value=\"dentist\">Dentist</Option>\n            </Select>\n         );\n      return (\n         <React.Fragment>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Name\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'Name is required.' }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" initialValue={account.birthday || ''} name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     {\n                        account.role === 'patient' ? (\n                           <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address is required.' }, { validator: validateEmail }]}>\n\n                              <Input />\n\n                           </Form.Item>\n                        )\n                           : (\n                              <Form.Item label=\"Role\" initialValue={account.role || ''} name=\"role\" rules={[{ required: true, message: 'Role is required.' }]}>\n                                \n                                    roleSelect\n                                \n                              </Form.Item>\n                           )\n                     }\n                  </Col>\n\n                  {(account.role === 'dentist' && state.selectedRole !== 'dentalaide') || state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n                           \n                              <Input />\n                          \n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n\n         </React.Fragment>\n      );\n   \n}\n\n\nexport default UpdateAccountForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccount.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccountsTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\CreateAccountModal.js",["252"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, DatePicker, Select, Button, message } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\n\n\nfunction CreateAccountModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      confirmDirty: false,\n      visible: false,\n      selectedRole: ''\n   });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onCreate(values);\n         hideModal();\n      });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n   const handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      setState({ confirmDirty: state.confirmDirty || !!value });\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      } else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && state.confirmDirty) {\n         form.validateFields(['confirm_password'], { force: true });\n      }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  console.log(response.data.isValid);\n                  if (!response.data.isValid)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n\n   return (\n      <>\n         <Button type=\"primary\" onClick={showModal}>\n            <UsergroupAddOutlined />\n                  Create New User Account\n               </Button>\n         <Modal\n            visible={state.visible}\n            title=\"Create a New User Account\"\n            okText=\"Create\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row>\n                  <Col span={24}>\n                     <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Address is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                     <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Role is required.' }]} initialValue={'dentalaide'}>\n\n                        <Select onChange={handleSelectRoleChange}>\n                           <Option value=\"dentalaide\">Dental Aide</Option>\n                           <Option value=\"dentist\">Dentist</Option>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Confirm Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: compareToFirstPassword }]} >\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n\n                  {state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n\n                           <Input />\n\n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\nexport default CreateAccountModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SendCustomMessageModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\AdultTeethChart.js",["253"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\ChildTeethChart.js",["254"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js",["255","256"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js",["257"],"import React, { useState } from 'react';\nimport { Divider, Timeline, Popover, Drawer, } from 'antd';\n\nfunction AppointmentsPopoverDrawer(props) {\n\n   const [state, setState] = useState({\n      visible: false, childrenDrawer: false, visiblePopover: false\n   });\n\n   console.log(props.appointments)\n\n   const showDrawer = () => {\n      setState({\n         visible: true,\n         visiblePopover: false\n      });\n   };\n\n   const onClose = () => {\n      setState({\n         visible: false,\n         visiblePopover: false\n      });\n   };\n\n   // const showChildrenDrawer = () => {\n\n   //    setState({\n   //       childrenDrawer: true,\n   //    });\n   // };\n\n   // const onChildrenDrawerClose = () => {\n   //    setState({\n   //       childrenDrawer: false,\n   //    });\n   // };\n\n   const handleVisiblePopoverChange = (visible) => {\n      setState({ visiblePopover: visible });\n   }\n\n\n   return (\n      <React.Fragment>\n\n         <Popover\n            title={props.title}\n            trigger=\"click\"\n            visible={state.visiblePopover}\n            onVisibleChange={handleVisiblePopoverChange}\n            content={<a onClick={showDrawer}>View Appointments</a>}\n         >\n            {props.children}\n         </Popover>\n\n         <Drawer\n            title=\"Appointments for this date\"\n            width=\"450px\"\n            closable={true}\n            onClose={onClose}\n            visible={state.visible}\n         >\n            <Timeline>\n               {\n                  props.appointments.map((appointment) => {\n\n\n                     return (\n                        <Timeline.Item key={appointment.id}>\n                           {appointment.patient} @ {appointment.time} <Divider type=\"vertical\" /> {appointment.reason}\n                        </Timeline.Item>\n                     );\n                  })\n               }\n            </Timeline>\n\n\n\n         </Drawer>\n      </React.Fragment>\n   );\n\n}\n\n\nexport default AppointmentsPopoverDrawer;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\PayInstallmentModal.js",["258","259","260"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Login.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js",["261","262"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\index.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\store.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\Layout.js",["263","264","265"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\DentalRecords.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecord.js",["266","267","268","269"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsTable.js",["270","271","272","273"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js",["274","275","276"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\SiderNavigation.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js",["277"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\userAccountSettings.js",["278"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccountSettings.js",["279"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\TreatmentsTable.js",["280"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\DMFTPopover.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdateContactForm.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\AddTreatmentModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\PatientCreateAppointmentModal.js",["281","282"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Reception.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\TreatmentsPopoverDrawer.js",[],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":14,"column":18,"nodeType":"289","messageId":"290","endLine":14,"endColumn":26},{"ruleId":"287","severity":1,"message":"291","line":2,"column":17,"nodeType":"289","messageId":"290","endLine":2,"endColumn":24},{"ruleId":"292","severity":1,"message":"293","line":34,"column":7,"nodeType":"294","endLine":34,"endColumn":9,"suggestions":"295"},{"ruleId":"287","severity":1,"message":"291","line":2,"column":28,"nodeType":"289","messageId":"290","endLine":2,"endColumn":35},{"ruleId":"292","severity":1,"message":"296","line":25,"column":7,"nodeType":"294","endLine":25,"endColumn":9,"suggestions":"297"},{"ruleId":"287","severity":1,"message":"298","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"299","line":1,"column":15,"nodeType":"289","messageId":"290","endLine":1,"endColumn":23},{"ruleId":"287","severity":1,"message":"300","line":20,"column":10,"nodeType":"289","messageId":"290","endLine":20,"endColumn":32},{"ruleId":"301","severity":1,"message":"302","line":25,"column":26,"nodeType":"303","messageId":"304","endLine":25,"endColumn":27,"suggestions":"305"},{"ruleId":"301","severity":1,"message":"302","line":25,"column":51,"nodeType":"303","messageId":"304","endLine":25,"endColumn":52,"suggestions":"306"},{"ruleId":"287","severity":1,"message":"307","line":30,"column":13,"nodeType":"289","messageId":"290","endLine":30,"endColumn":17},{"ruleId":"287","severity":1,"message":"308","line":60,"column":13,"nodeType":"289","messageId":"290","endLine":60,"endColumn":23},{"ruleId":"287","severity":1,"message":"309","line":40,"column":10,"nodeType":"289","messageId":"290","endLine":40,"endColumn":27},{"ruleId":"292","severity":1,"message":"310","line":30,"column":7,"nodeType":"294","endLine":30,"endColumn":19,"suggestions":"311"},{"ruleId":"292","severity":1,"message":"310","line":28,"column":8,"nodeType":"294","endLine":28,"endColumn":20,"suggestions":"312"},{"ruleId":"287","severity":1,"message":"299","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":25},{"ruleId":"287","severity":1,"message":"313","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":52,"column":22,"nodeType":"316","endLine":52,"endColumn":46},{"ruleId":"287","severity":1,"message":"313","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":15},{"ruleId":"287","severity":1,"message":"317","line":8,"column":11,"nodeType":"289","messageId":"290","endLine":8,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":46,"column":10,"nodeType":"316","endLine":46,"endColumn":102},{"ruleId":"287","severity":1,"message":"313","line":2,"column":16,"nodeType":"289","messageId":"290","endLine":2,"endColumn":21},{"ruleId":"287","severity":1,"message":"317","line":11,"column":11,"nodeType":"289","messageId":"290","endLine":11,"endColumn":16},{"ruleId":"292","severity":1,"message":"318","line":27,"column":6,"nodeType":"294","endLine":27,"endColumn":8,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":47,"column":15,"nodeType":"316","endLine":47,"endColumn":95},{"ruleId":"314","severity":1,"message":"315","line":86,"column":21,"nodeType":"316","endLine":86,"endColumn":55},{"ruleId":"287","severity":1,"message":"322","line":4,"column":56,"nodeType":"289","messageId":"290","endLine":4,"endColumn":68},{"ruleId":"292","severity":1,"message":"318","line":36,"column":6,"nodeType":"294","endLine":36,"endColumn":8,"suggestions":"323"},{"ruleId":"287","severity":1,"message":"324","line":54,"column":9,"nodeType":"289","messageId":"290","endLine":54,"endColumn":21},{"ruleId":"287","severity":1,"message":"325","line":91,"column":9,"nodeType":"289","messageId":"290","endLine":91,"endColumn":22},{"ruleId":"287","severity":1,"message":"326","line":2,"column":93,"nodeType":"289","messageId":"290","endLine":2,"endColumn":103},{"ruleId":"287","severity":1,"message":"327","line":2,"column":105,"nodeType":"289","messageId":"290","endLine":2,"endColumn":110},{"ruleId":"287","severity":1,"message":"288","line":18,"column":18,"nodeType":"289","messageId":"290","endLine":18,"endColumn":26},{"ruleId":"287","severity":1,"message":"328","line":73,"column":10,"nodeType":"289","messageId":"290","endLine":73,"endColumn":31},{"ruleId":"287","severity":1,"message":"329","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"291","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":17},{"ruleId":"287","severity":1,"message":"326","line":2,"column":42,"nodeType":"289","messageId":"290","endLine":2,"endColumn":52},{"ruleId":"292","severity":1,"message":"330","line":22,"column":7,"nodeType":"294","endLine":22,"endColumn":9,"suggestions":"331"},{"ruleId":"287","severity":1,"message":"332","line":21,"column":10,"nodeType":"289","messageId":"290","endLine":21,"endColumn":24},{"ruleId":"287","severity":1,"message":"288","line":12,"column":18,"nodeType":"289","messageId":"290","endLine":12,"endColumn":26},{"ruleId":"292","severity":1,"message":"333","line":46,"column":7,"nodeType":"294","endLine":46,"endColumn":9,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":67,"column":63,"nodeType":"337","messageId":"338","endLine":67,"endColumn":65},{"ruleId":"335","severity":1,"message":"336","line":67,"column":85,"nodeType":"337","messageId":"338","endLine":67,"endColumn":87},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","'message' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPaymentsTable'. Either include it or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect has a missing dependency: 'getAppointmentsTable'. Either include it or remove the dependency array.",["342"],"'axios' is defined but never used.","'useState' is defined but never used.","'compareToFirstPassword' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["343","344"],["345","346"],"'form' is assigned a value but never used.","'roleSelect' is assigned a value but never used.","'handleConfirmBlur' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getChildTeethChart'. Either include it or remove the dependency array.",["347"],["348"],"'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["349"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'notification' is defined but never used.",["350"],"'handleCreate' is assigned a value but never used.","'getMyBalances' is assigned a value but never used.","'DatePicker' is defined but never used.","'Radio' is defined but never used.","'handleNoContactNumber' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["351"],"'getUserAccount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTreatments'. Either include it or remove the dependency array.",["352"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"messageId":"357","fix":"358","desc":"359"},{"messageId":"360","fix":"361","desc":"362"},{"messageId":"357","fix":"363","desc":"359"},{"messageId":"360","fix":"364","desc":"362"},{"desc":"365","fix":"366"},{"desc":"365","fix":"367"},{"desc":"368","fix":"369"},{"desc":"368","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},"Update the dependencies array to be: [getPaymentsTable]",{"range":"375","text":"376"},"Update the dependencies array to be: [getAppointmentsTable]",{"range":"377","text":"378"},"removeEscape",{"range":"379","text":"380"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"381","text":"382"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"383","text":"380"},{"range":"384","text":"382"},"Update the dependencies array to be: [getChildTeethChart, props.user]",{"range":"385","text":"386"},{"range":"387","text":"386"},"Update the dependencies array to be: [props]",{"range":"388","text":"389"},{"range":"390","text":"389"},"Update the dependencies array to be: [fetchData]",{"range":"391","text":"392"},"Update the dependencies array to be: [getTreatments]",{"range":"393","text":"394"},[744,746],"[getPaymentsTable]",[633,635],"[getAppointmentsTable]",[592,593],"",[592,592],"\\",[617,618],[617,617],[617,629],"[getChildTeethChart, props.user]",[648,660],[677,679],"[props]",[1108,1110],[510,512],"[fetchData]",[1232,1234],"[getTreatments]"]