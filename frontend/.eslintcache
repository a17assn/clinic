[{"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\index.js":"1","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\App.js":"2","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Login.js":"4","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\SMSTextMessaging.js":"5","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Reception.js":"6","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\DentalRecords.js":"7","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Appointments.js":"8","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\UserAccountSettings.js":"9","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Dashboard.js":"10","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\UserAccounts.js":"11","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Payments.js":"12","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\hocs\\Layout.js":"13","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\store.js":"14","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\rootReducer.js":"15","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\hocs\\SiderNavigation.js":"16","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\VisitChart.js":"17","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UserAccount.js":"18","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UserAccountsTable.js":"19","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\index.js":"20","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billReducer.js":"21","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientReducer.js":"22","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userReducer.js":"23","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentReducer.js":"24","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js":"25","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UpdateAccountForm.js":"26","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\CreateAccountModal.js":"27","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billActions.js":"28","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientTypes.js":"29","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billTypes.js":"30","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentTypes.js":"31","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userTypes.js":"32","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userActions.js":"33","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientActions.js":"34","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentActions.js":"35","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\AppointmentsTable.js":"36","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js":"37","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js":"38","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DentalRecord.js":"39","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js":"40","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js":"41","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\sms\\SMSTable.js":"42","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js":"43","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js":"44","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\AdultTeethChart.js":"45","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\UpdateContactForm.js":"46","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\PatientCreateAppointmentModal.js":"47","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js":"48","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\ChildTeethChart.js":"49","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\treatment\\TreatmentsTable.js":"50","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\sms\\SendCustomMessageModal.js":"51","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\DMFTPopover.js":"52","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\treatment\\AddTreatmentModal.js":"53","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\payments\\PayInstallmentModal.js":"54","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js":"55","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\TreatmentsPopoverDrawer.js":"56"},{"size":545,"mtime":1611444393936,"results":"57","hashOfConfig":"58"},{"size":1951,"mtime":1611446274304,"results":"59","hashOfConfig":"58"},{"size":4948,"mtime":1563090724000,"results":"60","hashOfConfig":"58"},{"size":3538,"mtime":1611358738107,"results":"61","hashOfConfig":"58"},{"size":360,"mtime":1607641742499,"results":"62","hashOfConfig":"58"},{"size":1669,"mtime":1611360866612,"results":"63","hashOfConfig":"58"},{"size":718,"mtime":1610384992294,"results":"64","hashOfConfig":"58"},{"size":1910,"mtime":1610840310797,"results":"65","hashOfConfig":"58"},{"size":2251,"mtime":1611359068201,"results":"66","hashOfConfig":"58"},{"size":3288,"mtime":1611358985265,"results":"67","hashOfConfig":"58"},{"size":675,"mtime":1611358640149,"results":"68","hashOfConfig":"58"},{"size":8856,"mtime":1611268681377,"results":"69","hashOfConfig":"58"},{"size":3125,"mtime":1611445706463,"results":"70","hashOfConfig":"58"},{"size":302,"mtime":1609855576742,"results":"71","hashOfConfig":"58"},{"size":427,"mtime":1610234580600,"results":"72","hashOfConfig":"58"},{"size":1879,"mtime":1611361800136,"results":"73","hashOfConfig":"58"},{"size":6705,"mtime":1610977470648,"results":"74","hashOfConfig":"58"},{"size":2328,"mtime":1611358609796,"results":"75","hashOfConfig":"58"},{"size":5528,"mtime":1609855390902,"results":"76","hashOfConfig":"58"},{"size":162,"mtime":1610234517274,"results":"77","hashOfConfig":"58"},{"size":935,"mtime":1610234543785,"results":"78","hashOfConfig":"58"},{"size":998,"mtime":1609885206371,"results":"79","hashOfConfig":"58"},{"size":2019,"mtime":1611446238923,"results":"80","hashOfConfig":"58"},{"size":1076,"mtime":1610234492959,"results":"81","hashOfConfig":"58"},{"size":3100,"mtime":1609855390903,"results":"82","hashOfConfig":"58"},{"size":4953,"mtime":1609855390903,"results":"83","hashOfConfig":"58"},{"size":5740,"mtime":1610977276411,"results":"84","hashOfConfig":"58"},{"size":2439,"mtime":1610749703427,"results":"85","hashOfConfig":"58"},{"size":472,"mtime":1609879348976,"results":"86","hashOfConfig":"58"},{"size":427,"mtime":1610234533985,"results":"87","hashOfConfig":"58"},{"size":532,"mtime":1609856457719,"results":"88","hashOfConfig":"58"},{"size":1016,"mtime":1609718440458,"results":"89","hashOfConfig":"58"},{"size":5651,"mtime":1611446249694,"results":"90","hashOfConfig":"58"},{"size":2487,"mtime":1610564637799,"results":"91","hashOfConfig":"58"},{"size":2501,"mtime":1610565180926,"results":"92","hashOfConfig":"58"},{"size":12691,"mtime":1611360607891,"results":"93","hashOfConfig":"58"},{"size":5781,"mtime":1611360770182,"results":"94","hashOfConfig":"58"},{"size":3635,"mtime":1611360942583,"results":"95","hashOfConfig":"58"},{"size":16349,"mtime":1611361223533,"results":"96","hashOfConfig":"58"},{"size":4480,"mtime":1611359930388,"results":"97","hashOfConfig":"58"},{"size":3323,"mtime":1611360898621,"results":"98","hashOfConfig":"58"},{"size":17471,"mtime":1609855390902,"results":"99","hashOfConfig":"58"},{"size":1955,"mtime":1610723130865,"results":"100","hashOfConfig":"58"},{"size":450,"mtime":1609690890249,"results":"101","hashOfConfig":"58"},{"size":49955,"mtime":1611360817514,"results":"102","hashOfConfig":"58"},{"size":1183,"mtime":1610840997983,"results":"103","hashOfConfig":"58"},{"size":2912,"mtime":1611361089130,"results":"104","hashOfConfig":"58"},{"size":3938,"mtime":1610977049078,"results":"105","hashOfConfig":"58"},{"size":36670,"mtime":1611360823981,"results":"106","hashOfConfig":"58"},{"size":12941,"mtime":1611361463693,"results":"107","hashOfConfig":"58"},{"size":1587,"mtime":1609855390903,"results":"108","hashOfConfig":"58"},{"size":1639,"mtime":1611361437249,"results":"109","hashOfConfig":"58"},{"size":9752,"mtime":1611361388474,"results":"110","hashOfConfig":"58"},{"size":2509,"mtime":1611361281259,"results":"111","hashOfConfig":"58"},{"size":6756,"mtime":1610060739181,"results":"112","hashOfConfig":"58"},{"size":2002,"mtime":1611361434488,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1diafsx",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"116"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"116"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\index.js",[],["248","249"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\App.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Login.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\SMSTextMessaging.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Reception.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\DentalRecords.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Appointments.js",["250","251"],"import React, { useState, useEffect } from 'react';\nimport { Tabs, Typography, message } from 'antd';\nimport AppointmentsCalendar from '../components/appointments/ApppointmentsCalendar';\nimport AppointmentsTable from '../components/appointments/AppointmentsTable';\nimport { Layout } from 'antd';\nimport { getABNTs } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\n\n\n\n\nfunction Appointments(props) {\n\n   const [appointment, setAppointment] = useState();\n\n\n   useEffect(() => {\n      getAppointmentsTable();\n\n   }, []);\n\n\n\n\n\n   const getAppointmentsTable = async () => {\n      await props.getABNTs();\n      setAppointment(props.appointments);\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/appointments/`,\n\n      );\n      setAppointment(res.data);\n\n   }\n\n   console.log(appointment);\n   console.log(props.appointments, \"c\");\n\n   const handleSearch = (value) => {\n\n\n      setAppointment(props.appointments.filter(({ patient }) => {\n         return patient.includes(value);\n      }));\n\n   }\n\n\n\n   return (\n      <Content style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4}>الحجوزات</Title>\n\n\n\n         <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Table View\" key=\"1\">\n               <AppointmentsTable appointments={appointment} updateInput={handleSearch} />\n            </TabPane>\n            <TabPane tab=\"Calendar View\" key=\"2\">\n               <AppointmentsCalendar appointments={appointment} getAppointments={getAppointmentsTable} />\n            </TabPane>\n         </Tabs>\n      </Content>\n   );\n\n}\n\n\n\nconst mapStateToProps = state => {\n   return {\n      appointments: state.Abointments.assignmentes,\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getABNTs }\n)(Appointments);\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\UserAccountSettings.js",["252"],"import React, { useState } from 'react';\nimport { Layout, Tabs, Typography, message } from 'antd';\nimport UpdateAccountForm from '../components/user/UpdateAccountForm';\nimport UpdateAccountCredentialsForm from '../components/user/UpdateAccountCredentialsForm';\nimport axios from 'axios';\n\nconst { Title } = Typography;\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nfunction UserAccountSettings(props) {\n   const [state, setState] = useState({\n      account: {}\n   });\n\n\n   // componentDidMount() {\n   //    getUserAccount(props.user.id);\n   // }\n\n   // const getUserAccount = (id) => {\n   //    axios.get(`users/${id}`)\n   //       .then((response) => {\n   //          if (response.status === 200)\n   //             setState({ account: response.data.user });\n   //       })\n   //       .catch((err) => {\n   //          console.log(err);\n   //          message.error('Something went wrong! Please, try again.');\n   //       });\n   // }\n\n\n   const handleUpdate = (values) => {\n\n      const hide = message.loading('Updating Account...', 0);\n      if (values.birthday)\n         values.birthday = values.birthday.format('YYYY-MM-DD');\n      values.role = state.account.role;\n\n      axios.patch(`users/${state.account.id}/update`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('Account Updated Successfully');\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n\n   }\n\n   console.log(state.account);\n   return (\n      <Content style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4}>ACCOUNT SETTINGS</Title>\n         <Tabs tabPosition=\"top\" defaultActiveKey=\"1\">\n            <TabPane tab=\"Personal Info\" key=\"1\">\n               <UpdateAccountForm onUpdate={handleUpdate} account={state.account} />\n            </TabPane>\n            <TabPane tab=\"Account Credentials\" key=\"2\">\n               <UpdateAccountCredentialsForm onUpdate={handleUpdate} account={state.account} />\n            </TabPane>\n         </Tabs>\n      </Content>\n   );\n}\n\n\nexport default UserAccountSettings;\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Dashboard.js",["253"],"import React, { useState } from 'react';\nimport { Tabs, Card, Row, Col, Layout, Typography } from 'antd';\nimport VisitChart from '../components/VisitChart';\n// import { LineChartOutlined } from '@ant-design/icons';\n\nconst { Title, Text } = Typography;\nconst { Content } = Layout;\n\n\nconst { TabPane } = Tabs;\n\nfunction Dashboard(props) {\n\n   const [state, setState] = useState({\n      today_total_gross_income: NaN,\n      today_total_receivable: NaN,\n      all_total_gross_income: NaN,\n      all_total_receivable: NaN,\n      loading: true\n   });\n\n\n   // componentDidMount() {\n   //    axios.get('dashboard/incomereceivable')\n   //       .then((response) => {\n   //          if (response.status === 200) {\n   //             this.setState(response.data);\n   //             setTimeout(() => {\n   //                this.setState({ loading: false });\n   //             }, 300);\n   //          }\n   //       })\n   //       .catch((err) => {\n   //          console.log(err);\n   //       });\n   // }\n\n\n   // if (this.state.loading)\n   //    return (\n   //       <Content style={{ background: '#FFF', margin: '24px 24px 24px 36px', padding: 21 }}>\n   //          <Skeleton loading={this.state.loading} paragraph={{ rows: 14 }} active />\n   //       </Content>\n   //    );\n\n   return (\n      <Content style={{ margin: '24px 24px 24px 36px' }}>\n\n         <Row gutter={24} style={{ marginBottom: 24 }}>\n            <Col span={6}>\n               <Card bordered={false}>\n                  <Text type=\"secondary\">Today's Total Gross Income</Text>\n\n                  <Title style={{ fontWeight: 'normal', margin: 0 }} level={2}> {state.today_total_gross_income.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Title>\n               </Card>\n            </Col>\n            <Col span={6}>\n               <Card bordered={false}>\n                  <Text type=\"secondary\">Today's Total Receivable</Text>\n                  <Title style={{ fontWeight: 'normal', margin: 0 }} level={2}> {state.today_total_receivable.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Title>\n               </Card>\n            </Col>\n            <Col span={6}>\n               <Card bordered={false}>\n                  <Text type=\"secondary\">Total Gross Income</Text>\n                  <Title style={{ fontWeight: 'normal', margin: 0 }} level={2}>{state.all_total_gross_income.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Title>\n               </Card>\n            </Col>\n            <Col span={6}>\n               <Card bordered={false}>\n                  <Text type=\"secondary\">Total Receivable</Text>\n                  <Title style={{ fontWeight: 'normal', margin: 0 }} level={2}> {state.all_total_receivable.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Title>\n               </Card>\n            </Col>\n\n         </Row>\n\n\n\n         <Row className=\"card-container\" style={{ padding: 24, background: '#fff' }}>\n\n            <Col span={24}>\n\n               <Tabs defaultActiveKey=\"1\" >\n\n                  <TabPane style={{ paddingLeft: 0, paddingRight: 100, margin: 0 }} tab={<Text style={{ fontSize: 18 }}> الزيارات</Text>} key=\"1\">\n                     <VisitChart />\n                  </TabPane>\n               </Tabs>\n            </Col>\n\n         </Row>\n\n      </Content>\n   );\n}\n\n\n\nexport default Dashboard;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\UserAccounts.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\pages\\Payments.js",["254","255"],"import React, { useState, useEffect } from 'react';\nimport { Table, message, Row, Col, Radio, Input, DatePicker, Tag, Typography, Button, Layout } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nimport { getBILLS } from \"../redux\";\nimport { connect } from \"react-redux\";\n\nconst { RangePicker } = DatePicker;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\n\nfunction Payments(props) {\n\n   const [state, setState] = useState({\n      loading: true,\n      paymentTransactions: [],\n      search: '',\n      selectedFilterBy: '',\n      rangeDate: []\n   });\n\n\n\n   const [payment, setPayment] = useState();\n\n\n   useEffect(() => {\n      getPaymentsTable();\n\n   }, []);\n\n\n\n   const getPaymentsTable = async () => {\n\n      await props.getBILLS();\n      setPayment(props.payment);\n\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/payment/`,\n\n      );\n      setPayment(res.data);\n\n   }\n\n\n\n   console.log(props.payment, \"c\");\n\n   const handleSearch = (value) => {\n\n\n      setPayment(props.appointments.filter(({ patient }) => {\n         return patient.includes(value);\n      }));\n\n   }\n\n\n\n   const onRadioChange = (e) => {\n      const { value: filterBy } = e.target;\n      setState({ selectedFilterBy: filterBy });\n      if (filterBy === 'day')\n         setState({ rangeDate: [moment(), moment()] });\n      else if (filterBy === 'week')\n         setState({ rangeDate: [moment().startOf('week'), moment().endOf('week')] });\n      else if (filterBy === 'month')\n         setState({ rangeDate: [moment().startOf('month'), moment().endOf('month')] });\n      else if (filterBy === 'year')\n         setState({ rangeDate: [moment().startOf('year'), moment().endOf('year')] });\n      // getPaymentTransactions(state.search, state.rangeDate);\n   }\n\n   const onRangePickerChange = (dates, dateStrings) => {\n      setState({ selectedFilterBy: '' });\n      setState({ rangeDate: dates });\n      // getPaymentTransactions(state.search, state.rangeDate);\n   }\n\n   const handlePrint = () => {\n\n      const body = [];\n      let total = 0;\n      state.paymentTransactions.forEach(({ date_paid, amount_paid, payment_type, from, received_by }) => {\n         total += amount_paid;\n         body.push({\n            date_paid: moment(date_paid).format('MMMM DD, YYYY'),\n            amount_paid: amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            payment_type,\n            from,\n            received_by\n         });\n      });\n\n      const doc = new jsPDF({\n         format: [612, 792]\n      });\n      const totalPagesExp = \"{total_pages_count_string}\";\n\n      // Header\n      const pageSize = doc.internal.pageSize;\n      const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n      const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n\n      doc.setFontSize(16);\n      // doc.setFontStyle('bold');\n      doc.text('Andres Dental Clinic', pageWidth - 68, 10);\n      doc.setFontSize(10);\n      doc.setTextColor(53, 53, 53);\n      // doc.setFontStyle('normal');\n      doc.text('One.O.5ive Department Store', pageWidth - 60, 14);\n      doc.text('J. P. Rizal Street, Barangay 18', pageWidth - 62, 18);\n      doc.text('Laoag City, 2900 Ilocos Norte', pageWidth - 60, 22);\n      doc.text('09212451903', pageWidth - 35, 26);\n      doc.setFontSize(14);\n      doc.setTextColor(0, 0, 0);\n      doc.text('Transaction Log', 15, 32);\n      const [startDate, endDate] = state.rangeDate;\n      doc.setFontSize(10);\n\n      if (startDate && endDate) {\n         doc.setTextColor(53, 53, 53);\n         doc.text(`(${moment(startDate).format('MMMM DD, YYYY')} - ${moment(endDate).format('MMMM DD, YYYY')})`, 54, 32);\n         doc.setTextColor(0, 0, 0);\n      }\n\n      doc.autoTable({\n         columns: [\n            { header: 'Date Paid', dataKey: 'date_paid' },\n            { header: 'Amount Paid', dataKey: 'amount_paid' },\n            { header: 'Payment Type', dataKey: 'payment_type' },\n            { header: 'From', dataKey: 'from' },\n            { header: 'Received By', dataKey: 'received_by' },\n         ],\n         body,\n         didDrawPage: (data) => {\n            // Footer\n            var str = \"Page \" + doc.internal.getNumberOfPages()\n            // Total page number plugin only available in jspdf v1.0+\n            if (typeof doc.putTotalPages === 'function') {\n               str = str + \" of \" + totalPagesExp;\n            }\n            // doc.setFontStyle('normal');\n\n            // jsPDF 1.4+ uses getWidth, <1.4 uses .width\n            doc.text(str, data.settings.margin.left, pageHeight - 10);\n            doc.text(`Generated on ${moment(Date.now()).format('MMMM DD, YYYY hh:mmA')}`, pageWidth - 73, pageHeight - 10);\n\n         },\n         startY: 34,\n         showHead: 'firstPage',\n      });\n\n      doc.line(15, doc.autoTable.previous.finalY + 3, pageWidth - 15, doc.autoTable.previous.finalY + 3); // horizontal line  \n      // doc.setFontStyle('bold');\n      doc.text('TOTAL:', 15, doc.autoTable.previous.finalY + 8);\n      doc.text(`${total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 48, doc.autoTable.previous.finalY + 8);\n      if (typeof doc.putTotalPages === 'function')\n         doc.putTotalPages(totalPagesExp);\n\n      doc.autoPrint();\n      window.open(doc.output('bloburl'), '_blank');\n   }\n\n\n\n   const columns = [\n      {\n         title: <Text strong>Date Paid</Text>,\n         dataIndex: 'date_paid',\n         render: (text, record) => {\n            const display = moment(record.date_paid).format('MMMM DD, YYYY') === moment(Date.now()).format('MMMM DD, YYYY') ? <Tag color=\"geekblue\">Today</Tag>\n               : moment(record.date_paid).format('MMMM DD, YYYY');\n            return display;\n         }\n      },\n      {\n         title: <Text strong>Amount Paid</Text>,\n         dataIndex: 'amount_paid',\n         render: (text, record) => {\n            return ' $ ' + record.amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n         }\n      },\n      // {\n      //    title: <Text strong>Payment Type</Text>,\n      //    dataIndex: 'payment_type',\n      //    render: (text, record) => {\n      //       return record.payment_type.substring(0, 1).toUpperCase() + record.payment_type.substring(1, record.payment_type.length);\n      //    }\n      // },\n      {\n         title: <Text strong>From</Text>,\n         dataIndex: 'from',\n         render: (text, record) => {\n            return record.from;\n         }\n      },\n      {\n         title: <Text strong>Received By</Text>,\n         dataIndex: 'received_by',\n         render: (text, record) => {\n            return record.received_by;\n         }\n      }\n   ];\n\n   return (\n      <Layout style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4} style={{ margin: 0 }}>سجل المعاملات</Title>\n         <Row align=\"middle\" gutter={8}>\n            <Col style={{ marginBottom: 8 }} span={24}>\n               <Search\n                  style={{ width: '100%', zIndex: -999 }}\n                  placeholder=\"search payment log by patient name\"\n                  enterButton\n                  // onSearch={(value) => getPaymentTransactions(value, state.rangeDate)}\n                  // onChange={handleSearchChange}\n                  onChange={(e) => handleSearch(e.target.value)}\n\n               />\n\n            </Col>\n            <Col span={12} align=\"right\">\n               <Radio.Group value={state.selectedFilterBy} onChange={onRadioChange}>\n                  <Radio.Button value=\"day\">All Today</Radio.Button>\n                  <Radio.Button value=\"week\">All Week</Radio.Button>\n                  <Radio.Button value=\"month\">All Month</Radio.Button>\n                  <Radio.Button value=\"year\">All Year</Radio.Button>\n               </Radio.Group>\n            </Col>\n\n            <Col style={{ marginBottom: 8 }} span={12}>\n               <RangePicker allowClear={true} value={state.rangeDate} format=\"MMMM DD, YYYY\" onChange={onRangePickerChange} style={{ width: '100%' }} />\n            </Col>\n\n         </Row>\n         <Row>\n            <Col align=\"right\">\n               <Button onClick={handlePrint} type=\"primary\"> Print Transaction Log</Button>\n            </Col>\n         </Row>\n         <Table\n            dataSource={payment}\n            size=\"medium\"\n            columns={columns}\n            scroll={{ x: 500 }}\n            rowKey={(record) => record.id}\n\n            pagination={\n               {\n                  position: 'both',\n                  defaultCurrent: 1,\n                  pageSize: 10,\n                \n               }\n            }\n         />\n      </Layout>\n   );\n\n\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      payment: state.bill.bills,\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getBILLS }\n)(Payments);\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\hocs\\Layout.js",["256","257","258","259"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\store.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\hocs\\SiderNavigation.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\VisitChart.js",["260"],"import React from 'react';\nimport { DatePicker, Select, Badge, Row, Col, Typography } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\n\n\nconst { RangePicker } = DatePicker;\nconst { Title } = Typography;\n\nconst getMonthName = (monthNumber) => {\n   switch (monthNumber) {\n      case 1:\n         return \"January\";\n      case 2:\n         return \"February\";\n      case 3:\n         return \"March\";\n      case 4:\n         return \"April\";\n      case 5:\n         return \"May\";\n      case 6:\n         return \"June\";\n      case 7:\n         return \"July\";\n      case 8:\n         return \"August\";\n      case 9:\n         return \"September\";\n      case 10:\n         return \"October\";\n      case 11:\n         return \"November\";\n      case 12:\n         return \"December\";\n      default:\n         break;\n   }\n}\n\nconst getDayName = (dayNumber) => {\n   switch (dayNumber) {\n      case 0:\n         return \"Monday\";\n      case 1:\n         return \"Tuesday\";\n      case 2:\n         return \"Wednesday\";\n      case 3:\n         return \"Thursday\";\n      case 4:\n         return \"Friday\";\n      case 5:\n         return \"Saturday\";\n      case 6:\n         return \"Sunday\";\n      default:\n         break;\n   }\n}\n\n\nclass VisitChart extends React.Component {\n\n\n   state = {\n      filterBy: 'month',\n      rangeDate: [moment().startOf('year'), moment().endOf('year')],\n      visitsTrend: [],\n      visitsRanking: []\n   };\n\n   componentDidMount() {\n      this.getVisits();\n   }\n\n   getVisits() {\n      // axios.get('dashboard/visits', {\n      //    params: {\n      //       startDate: moment(this.state.rangeDate[0]).format('YYYY-MM-DD'),\n      //       endDate: moment(this.state.rangeDate[1]).format('YYYY-MM-DD'),\n      //       filterBy: this.state.filterBy\n      //    }\n      // })\n      // .then((response) => {\n      // if (response.status === 200)\n      // this.setState({ visitsTrend: response.data.visits, visitsRanking: response.data.visitsRanked });\n      // })\n      // .catch((err) => {\n      //    console.log(err);\n      // });\n   }\n\n   handleSelectChange = async (value) => {\n      this.setState({ filterBy: value });\n      this.getVisits();\n   }\n\n   handleRangeDateChange = async (dates) => {\n      if (dates.length === 0)\n         this.setState({\n            rangeDate: [moment().startOf('year'), moment().endOf('year')]\n         });\n      else\n         this.setState({\n            rangeDate: dates\n         });\n      this.getVisits();\n   }\n\n   render() {\n\n\n      const data = [...this.state.visitsTrend].map((data) => {\n         if (this.state.filterBy === 'month')\n            return {\n               \"name\": getMonthName(data.name),\n               \"Number of Visits\": data[\"Number of Visits\"]\n            };\n         return {\n            \"name\": getDayName(data.name),\n            \"Number of Visits\": data[\"Number of Visits\"]\n         };\n      });\n      console.log('Visits Trend raw', this.state.visitsTrend)\n      console.log(data);\n\n      let previousPosition;\n      let visitsRanking = [...this.state.visitsRanking].map((obj, index, arr) => {\n         if (index !== 0) {\n            if (obj.totalVisits === arr[index - 1].totalVisits) {\n               return {\n                  ...obj,\n                  position: previousPosition\n               }\n            }\n            previousPosition += 1;\n            return {\n               ...obj,\n               position: previousPosition\n            }\n         }\n         previousPosition = 1;\n         return {\n            ...obj,\n            position: previousPosition\n         };\n      });\n\n      const cols = {\n         numberofvisits: {\n            tickInterval: 20\n         }\n      };\n\n      return (\n         <div style={{ padding: '12px 0px 24px 0px' }}>\n            <Row gutter={32}>\n               <Col span={18}>\n                  <Title level={4} style={{ marginLeft: 30, marginTop: 0, fontWeight: 'normal', fontSize: 14 }}>Visits Trend</Title>\n                  <Row>\n                     <Col span={24} align=\"right\">\n                        <Select style={{ marginRight: 12 }} defaultValue=\"month\" onChange={this.handleSelectChange} >\n                           <Select.Option value=\"month\">Month</Select.Option>\n                           <Select.Option value=\"day\">Day</Select.Option>\n                        </Select>\n                        <RangePicker style={{ marginBottom: 8 }} format=\"MMMM DD, YYYY\" defaultPickerValue={[moment().startOf('year'), moment().endOf('year')]} value={this.state.rangeDate} onChange={this.handleRangeDateChange} />\n                     </Col>\n                  </Row>\n                  {/* <Title style={{textAlign: 'center', fontWeight: 'normal', fontSize: 18}}>January 1, 2019 ~ December 31, 2019</Title> */}\n                  <Chart height={400} data={data} scale={cols} forceFit>\n                     <Axis name=\"name\" />\n                     <Axis name=\"Number of Visits\" />\n                     <Tooltip\n                        crosshairs={{\n                           type: \"y\"\n                        }}\n                     />\n                     <Geom type=\"interval\" position=\"name*Number of Visits\" />\n                  </Chart>\n               </Col>\n               <Col span={6}>\n                  <Title level={1} style={{ marginTop: 0, marginBottom: 24, fontWeight: 'normal', fontSize: 14 }}>Visits Ranking</Title>\n\n                  {\n                     visitsRanking.map((obj, index) => {\n                        if (index < 3)\n                           return (\n                              <Row style={{ marginBottom: 12 }}>\n                                 <Col span={24}>\n                                    <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#314659', color: '#f5f5f5' }} />\n                                    {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                                 </Col>\n                              </Row>\n                           );\n                        return (\n                           <Row style={{ marginBottom: 12 }}>\n                              <Col span={24}>\n                                 <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#f5f5f5', color: '#595959' }} />\n                                 {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                              </Col>\n                           </Row>\n                        );\n                     })\n                  }\n\n               </Col>\n            </Row>\n\n         </div>\n      );\n   }\n}\n\nexport default VisitChart;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UserAccount.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UserAccountsTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\index.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js",["261","262"],"import React,{useState} from 'react';\nimport { Form, Input, Row, Col, Button, message } from 'antd';\nimport axios from 'axios';\n\n\nfunction UpdateAccountCredentialsForm(props) {\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields(async (err, values) => {\n         if (err)\n            return\n         await props.onUpdate(values);\n         props.form.setFieldsValue({ password: '' });\n         props.form.setFieldsValue({ confirm_password: '' });\n\n      });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      }\n      else if (form.getFieldValue('password') && !value) {\n         callback('Please confirm your password');\n      }\n      else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      // const form = props.form;\n      // if (value) {\n      // //   form.validateFields(['confirm_password'], { force: true });\n      // }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  if (!response.data.isValid && response.data.username !== props.account.username)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n   \n      const { account } = props;\n\n      return (\n         <>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Username\" initialValue={account.username || ''} name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"New Password\" name=\"username\" rules={[{ required: true, message: 'password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Confirm New Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n         </>\n      );\n   \n}\n\nexport default UpdateAccountCredentialsForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\UpdateAccountForm.js",["263","264","265","266"],"import React,{useState} from 'react';\nimport { message, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nconst { Option } = Select;\n\n\n   function UpdateAccountForm(props) {\n\n      const [state, setState] = useState({\n         selectedRole: ''\n      });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onUpdate(values);\n      });\n   }\n\n   const validateEmailFormat = (email) => {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n   }\n\n   const validateEmail = async (rule, value, callback) => {\n      const form = props.form;\n      if (validateEmailFormat(value)) {\n         if (value) {\n            await axios.post(`users/${value}/validateEmail`)\n               .then((response) => {\n                  if (response.status === 200) {\n                     if (!response.data.isValid && response.data.email !== props.account.emailaddress)\n                        callback('Email Address already used!');\n                     else\n                        callback();\n                  }\n               })\n               .catch((err) => {\n                  console.log(err);\n                  message.error('Internal server error!');\n               });\n         }\n      }\n      else if (!validateEmailFormat(value) && value !== '') {\n         callback('Invalid Email Address format')\n      }\n      callback();\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n      const { account } = props;\n\n      const roleSelect = account.role === 'patient' ? (\n         <Select disabled>\n            <Option value=\"dentalaide\">Dental Aide</Option>\n            <Option value=\"dentist\">Dentist</Option>\n         </Select>\n      ) : (\n            <Select onChange={handleSelectRoleChange}>\n               <Option value=\"dentalaide\">Dental Aide</Option>\n               <Option value=\"dentist\">Dentist</Option>\n            </Select>\n         );\n      return (\n         <>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Name\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'Name is required.' }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" initialValue={account.birthday || ''} name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     {\n                        account.role === 'patient' ? (\n                           <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address is required.' }, { validator: validateEmail }]}>\n\n                              <Input />\n\n                           </Form.Item>\n                        )\n                           : (\n                              <Form.Item label=\"Role\" initialValue={account.role || ''} name=\"role\" rules={[{ required: true, message: 'Role is required.' }]}>\n                                \n                                    roleSelect\n                                \n                              </Form.Item>\n                           )\n                     }\n                  </Col>\n\n                  {(account.role === 'dentist' && state.selectedRole !== 'dentalaide') || state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n                           \n                              <Input />\n                          \n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n\n         </>\n      );\n   \n}\n\n\nexport default UpdateAccountForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\user\\CreateAccountModal.js",["267"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, DatePicker, Select, Button, message } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\n\n\nfunction CreateAccountModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      confirmDirty: false,\n      visible: false,\n      selectedRole: ''\n   });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onCreate(values);\n         hideModal();\n      });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n   const handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      setState({ confirmDirty: state.confirmDirty || !!value });\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      } else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && state.confirmDirty) {\n         form.validateFields(['confirm_password'], { force: true });\n      }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  console.log(response.data.isValid);\n                  if (!response.data.isValid)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n\n   return (\n      <>\n         <Button type=\"primary\" onClick={showModal}>\n            <UsergroupAddOutlined />\n                  Create New User Account\n               </Button>\n         <Modal\n            visible={state.visible}\n            title=\"Create a New User Account\"\n            okText=\"Create\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row>\n                  <Col span={24}>\n                     <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Address is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                     <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Role is required.' }]} initialValue={'dentalaide'}>\n\n                        <Select onChange={handleSelectRoleChange}>\n                           <Option value=\"dentalaide\">Dental Aide</Option>\n                           <Option value=\"dentist\">Dentist</Option>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Confirm Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: compareToFirstPassword }]} >\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n\n                  {state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n\n                           <Input />\n\n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\nexport default CreateAccountModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\bill\\billTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\user\\userActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\patient\\patientActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\redux\\abointment\\abointmentActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\AppointmentsTable.js",["268","269","270","271"],"import React, { useState } from 'react';\nimport { Modal, message, Menu, Dropdown, Badge, Button, Table, Row, Col, Input, Typography, DatePicker, Radio, Divider } from 'antd';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\n\nimport axios from 'axios';\n\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nconst { confirm } = Modal;\nconst { Search } = Input;\nconst { Text } = Typography;\n\n\nfunction AppointmentsTable(props) {\n\n   const [state, setState] = useState({\n      search: '',\n      selectedFilterBy: '',\n      rangeDate: [],\n   });\n\n\n\n\n   // const handleAppointmentCreate = (values) => {\n\n   // values.date = values.date.format('YYYY-MM-DD HH:mm');\n   // const hide = message.loading('Creating New Appointment...', 0);\n\n   // props.createASNT(values);\n\n   // axios.post('appointments/create/', values)\n   //    .then((response) => {\n   //       if (response.status === 200) {\n   //          hide();\n   //          message.success('New Appointment Successfully Created');\n   //          props.getAppointments(state.search, state.rangeDate);\n   //       }\n   //    })\n   //    .catch((err) => {\n   //       console.log(err);\n   //       hide();\n   //       message.error('Something went wrong! Please, try again.');\n   //    });\n\n   // }\n\n   const handleDeclineCancelAppointment = (values, id) => {\n\n      const hide = message.loading(`${values.type === 'cancel' ? 'Cancelling' : 'Declining'} appointment...`, 0);\n      axios.delete(`appointments/${id}/delete`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success(`Appointment Successfully ${values.type === 'cancel' ? 'Cancelled' : 'Declined'} `);\n               // props.getAppointments(state.search, state.rangeDate);\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n\n   }\n\n\n\n\n\n   const handleNoContactNumber = (values) => {\n      confirm({\n         title: `Are you sure to ${values.type} this appointment?!`,\n         content: 'This patient does not have available contact number, therefore will not be notified through SMS.',\n         okText: 'Yes',\n         onOk: () => {\n            handleDeclineCancelAppointment(values);\n         },\n         onCancel() {\n         },\n      });\n   }\n\n\n\n\n   const handlePrint = () => {\n\n      const body = [];\n      let total = 0;\n      // state.paymentTransactions.forEach(({ date_paid, amount_paid, payment_type, from, received_by }) => {\n      props.appointments.forEach(({ date_paid, amount_paid, payment_type, from, received_by }) => {\n         total += amount_paid;\n         body.push({\n            date_paid: moment(date_paid).format('MMMM DD, YYYY'),\n            amount_paid: amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            payment_type,\n            from,\n            received_by\n         });\n      });\n\n      const doc = new jsPDF({\n         format: [612, 792]\n      });\n      const totalPagesExp = \"{total_pages_count_string}\";\n\n      // Header\n      const pageSize = doc.internal.pageSize;\n      const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n      const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n\n      doc.setFontSize(16);\n      // doc.setFontStyle('bold');\n      doc.text('Andres Dental Clinic', pageWidth - 68, 10);\n      doc.setFontSize(10);\n      doc.setTextColor(53, 53, 53);\n      // doc.setFontStyle('normal');\n      doc.text('One.O.5ive Department Store', pageWidth - 60, 14);\n      doc.text('J. P. Rizal Street, Barangay 18', pageWidth - 62, 18);\n      doc.text('Laoag City, 2900 Ilocos Norte', pageWidth - 60, 22);\n      doc.text('09212451903', pageWidth - 35, 26);\n      doc.setFontSize(14);\n      doc.setTextColor(0, 0, 0);\n      doc.text('Transaction Log', 15, 32);\n      const [startDate, endDate] = state.rangeDate;\n      doc.setFontSize(10);\n\n      if (startDate && endDate) {\n         doc.setTextColor(53, 53, 53);\n         doc.text(`(${moment(startDate).format('MMMM DD, YYYY')} - ${moment(endDate).format('MMMM DD, YYYY')})`, 54, 32);\n         doc.setTextColor(0, 0, 0);\n      }\n\n      doc.autoTable({\n         columns: [\n            { header: 'Date Paid', dataKey: 'date_paid' },\n            { header: 'Amount Paid', dataKey: 'amount_paid' },\n            { header: 'Payment Type', dataKey: 'payment_type' },\n            { header: 'From', dataKey: 'from' },\n            { header: 'Received By', dataKey: 'received_by' },\n         ],\n         body,\n         didDrawPage: (data) => {\n            // Footer\n            var str = \"Page \" + doc.internal.getNumberOfPages()\n            // Total page number plugin only available in jspdf v1.0+\n            if (typeof doc.putTotalPages === 'function') {\n               str = str + \" of \" + totalPagesExp;\n            }\n            // doc.setFontStyle('normal');\n\n            // jsPDF 1.4+ uses getWidth, <1.4 uses .width\n            doc.text(str, data.settings.margin.left, pageHeight - 10);\n            doc.text(`Generated on ${moment(Date.now()).format('MMMM DD, YYYY hh:mmA')}`, pageWidth - 73, pageHeight - 10);\n\n         },\n         startY: 34,\n         showHead: 'firstPage',\n      });\n\n      doc.line(15, doc.autoTable.previous.finalY + 3, pageWidth - 15, doc.autoTable.previous.finalY + 3); // horizontal line  \n      // doc.setFontStyle('bold');\n      doc.text('TOTAL:', 15, doc.autoTable.previous.finalY + 8);\n      doc.text(`${total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 48, doc.autoTable.previous.finalY + 8);\n      if (typeof doc.putTotalPages === 'function')\n         doc.putTotalPages(totalPagesExp);\n\n      doc.autoPrint();\n      window.open(doc.output('bloburl'), '_blank');\n   }\n\n\n\n   const columns = [\n      {\n         title: <Text strong>Patient Name</Text>,\n         dataIndex: 'name',\n         render: (text, record) => {\n            return record.patient;\n         }\n      },\n      {\n         title: <Text strong>Date and Time</Text>,\n         dataIndex: 'date',\n         render: (text, record) => {\n            const date = moment(record.date).format('MMMM DD, YYYY');\n            const time = moment(record.date).format('h:mm A');\n            return (\n               <>\n                  <Text>{date}</Text>\n                  <Divider type=\"vertical\" />\n                  <Text>{time}</Text>\n               </>\n            );\n         }\n      },\n      {\n         title: <Text strong>Reason</Text>,\n         dataIndex: 'reason',\n         render: (text, record) => {\n            return record.reason;\n         }\n      },\n      {\n         title: <Text strong>Status</Text>,\n         dataIndex: 'status',\n         filters: [{\n            text: 'Pending',\n            value: 'pending',\n         }, {\n            text: 'Confirmed',\n            value: 'confirmed',\n         }],\n\n         filterMultiple: false,\n         onFilter: (value, record) => {\n            return record.status.indexOf(value) === 0;\n         },\n\n         render: (text, record) => {\n            return record.status === 'confirmed' ? (<Badge status=\"success\" text={<Text style={{ color: '#73d13d' }}>Confirmed</Text>} />)\n               : record.status === 'pending' ? (\n                  <Badge status=\"processing\" text={<Text style={{ color: '#108ee9' }}>Pending</Text>} />\n               )\n\n\n                  : (<Badge status=\"error\" text={<Text style={{ color: '#ff7875' }}>Cancelled</Text>} />)\n         }\n      },\n      {\n         title: <Text strong>Actions</Text>,\n         dataIndex: 'actions',\n         render: (text, record) => {\n\n            const isAppointmentPast = moment(record.date).format('X') < moment(Date.now()).format('X');\n            const menu = record.status === 'pending' ? (\n               <Menu>\n                  <Menu.Item>\n\n                     {/* <a onClick={() => {\n                        handleConfirmAppoinment({\n                           id: record.id,\n                           date: record.date,\n                           name: record.name, contact_number:\n                              record.contact_number\n                        });\n                     }}  target=\"_blank\" rel=\"noopener noreferrer\" > */}\n                        Confirm Appointment\n                           {/*  </a> */}\n                  </Menu.Item>\n\n                  <Menu.Item>\n                     {/* {record.contact_number ? \n                     <DeclineCancelAppointmentModal onDeclineCancel={handleDeclineCancelAppointment}\n                        appointment={{ id: record.id, date: record.date, name: record.name, contact_number: record.contact_number }} type=\"decline\" />\n                        : <a\n                           onClick={() => handleNoContactNumber({ id: record.id, date: record.date, name: record.name, contact_number: record.contact_number, type: 'decline' })}\n                           target=\"_blank\" rel=\"noopener noreferrer\">\n                           Decline Appointment\n                                                </a>} */}\n                  </Menu.Item>\n\n               </Menu>\n            ) : (\n                  <Menu>\n                     <Menu.Item disabled>\n                        Confirm Appointment\n                     </Menu.Item>\n\n                     {\n                        isAppointmentPast ? (\n                           <Menu.Item disabled>\n                              Cancel Appointment\n                           </Menu.Item>\n                        ) : (\n                              <Menu.Item>\n                                 {/* {record.contact_number ? <DeclineCancelAppointmentModal\n                                    onDeclineCancel={handleDeclineCancelAppointment}\n                                    appointment={{ id: record.id, date: record.date, name: record.name, contact_number: record.contact_number }} type=\"cancel\" />\n                                    : <a\n                                       onClick={() => handleNoContactNumber({ id: record.id, date: record.date, name: record.name, contact_number: record.contact_number, type: 'cancel' })}\n                                       target=\"_blank\" rel=\"noopener noreferrer\">\n                                       Cancel Appointment\n                                                            </a>} */}\n                              </Menu.Item>\n                           )\n                     }\n                  </Menu>\n               );\n\n            const disabledDropdown = (record.status === 'cancelled'\n               || record.status === 'declined'\n               || (record.status === 'pending' && isAppointmentPast)\n               || (record.status === 'confirmed' && isAppointmentPast)\n            ) ? true : false;\n\n            return (\n               <Dropdown disabled={disabledDropdown} overlay={menu} trigger={['click']}>\n                  <Button>\n                     Actions\n                     </Button>\n               </Dropdown>\n            );\n         }\n      },\n      {\n         title: <Text strong>Actions</Text>,\n         dataIndex: 'actions',\n         render: (text, record) => {\n            return (\n\n               <Button onClick={handlePrint} type=\"primary\"> Print Transaction Log</Button>\n\n            );\n         }\n      }\n   ];\n\n   return (\n      <>\n\n         <Row align=\"middle\" gutter={8}>\n\n\n\n            <Col style={{ marginBottom: 8 }} span={24}>\n               <Search\n                  style={{ width: '100%', zIndex: -999 }}\n                  placeholder=\"search appointment by patient name\"\n                  enterButton\n                  onChange={(e) => props.updateInput(e.target.value)}\n               />\n\n            </Col>\n\n         </Row>\n\n         <Table\n\n\n            dataSource={props.appointments}\n\n            size=\"medium\"\n            columns={columns}\n            scroll={{ x: 300 }}\n            rowKey={(record) => record.id}\n\n            pagination={\n               {\n                  position: 'both',\n                  defaultCurrent: 1,\n                  pageSize: 10,\n                  // showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} appointments`,\n                  // onChange: (page, pageSize) => {\n                  //    props.getAppointments(state.search, state.rangeDate);\n                  // }\n               }\n            }\n\n         />\n\n\n      </>\n   );\n\n}\n\n// const mapStateToProps = state => {\n//    return {\n\n//       appointment: state.Abointments.assignmentes,\n//       // loading: state.Abointment.loading\n//    };\n// };\n\n\nexport default connect(\n   // mapStateToProps,\n   // { getABNTs,createABNT }\n)(AppointmentsTable);\n\n\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js",["272"],"import React, { useState, useEffect } from 'react';\nimport { Table, Button, Row, Col, Typography, Input, Tag } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { getPATN } from \"../../redux\";\n\nconst { Search } = Input;\n\nconst { Title, Paragraph, Text } = Typography;\n\nfunction DentalRecordsTable(props) {\n\n\n   const [patients, setPatients] = useState();\n\n   useEffect(() => {\n\n      fetchData();\n\n   }, []);\n\n   const fetchData = async () => {\n      await props.getPATN();\n      setPatients(props.patients);\n\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/patient/`,\n\n      );\n      setPatients(res.data);\n   }\n\n   const updateInput = async (value) => {\n      console.log(value);\n\n      const filtered = props.patients.filter(a => {\n         return a.name.includes(value);\n      });\n\n      console.log(filtered);\n      setPatients(filtered);\n   }\n\n\n\n   console.log(patients);\n\n\n\n\n   const columns = [\n      {\n         title: <Text strong>Name</Text>,\n         dataIndex: 'name',\n         defaultSortOrder: 'ascend',\n         sorter: (a, b) => a.name.toLowerCase().substring(0, 2) < b.name.toLowerCase().substring(0, 2),\n         render: (text, record) => {\n            return record.name;\n         }\n      },\n      {\n         title: <Text strong>Last Visit</Text>,\n         width: 200,\n         dataIndex: 'last_visit',\n         defaultSortOrder: 'ascend',\n         sorter: (a, b) => moment(a.last_visit).format('x') - moment(b.last_visit).format('x'),\n         render: (text, record) => {\n            const display = !record.last_visit ? (<Tag color=\"geekblue\">New Record</Tag>) : moment(record.last_visit).format('MMMM, DD YYYY');\n            return display;\n         }\n      },\n      {\n         title: <Text strong>Address</Text>,\n         dataIndex: 'address',\n         render: (text, record) => {\n            return record.address;\n         }\n      },\n      {\n         title: <Text strong>Code</Text>,\n         dataIndex: 'code',\n         render: (text, record) => {\n            return <Paragraph copyable={true} >{record.id}</Paragraph>;\n         }\n      },\n      {\n         title: <Text strong>Actions</Text>,\n         dataIndex: 'actions',\n         render: (text, record) => {\n            return (\n               <Link to={`/dentalrecords/${record.id}`}>\n                  <Button type=\"primary\">View Dental Record</Button>\n               </Link>\n            );\n         }\n      }\n   ];\n\n\n   return (\n      <>\n         <Title level={4} style={{ margin: 0 }}>DENTAL RECORDS</Title>\n\n         <Row align=\"middle\" gutter={8}>\n            <Col span={24}>\n               <Search\n                  style={{ width: '100%', margin: 10 }}\n                  placeholder=\"search dental record by patient name\"\n                  enterButton\n                  onChange={(e) => updateInput(e.target.value)}\n\n               />\n            </Col>\n         </Row>\n\n         <Table\n\n            dataSource={patients}\n\n            size=\"medium\"\n            columns={columns}\n            scroll={{ x: 300 }}\n            rowKey={(record) => record.id}\n\n            pagination={\n               {\n                  position: 'both',\n                  defaultCurrent: 1,\n                  pageSize: 10,\n                 \n               }\n            }\n\n         />\n      </>\n   );\n\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      patients: state.patient.patients,\n      // loading: state.Abointment.loading\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getPATN }\n)(DentalRecordsTable);\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DentalRecord.js",["273","274","275","276"],"import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import { Typography, Row, Col, Tag, Tabs, message, Select } from 'antd';\nimport { Alert, Button, Badge, Row, Tabs, Col, Select, notification, Typography, Table, Tag, message, Popconfirm } from 'antd';\n\nimport axios from 'axios';\nimport moment from 'moment';\nimport UpdateContactForm from './UpdateContactForm';\n\nimport DescriptionItem from './DescriptionItem';\nimport AdultTeethChart from '../dental/AdultTeethChart';\nimport ChildTeethChart from '../dental/ChildTeethChart';\n\nimport TreatmentsTable from '../treatment/TreatmentsTable';\nimport PatientCreateAppointmentModal from './PatientCreateAppointmentModal'\nimport UpdatePersonalInfoModal from './UpdatePersonalInfoModal';\nimport { connect } from \"react-redux\";\nimport { getPATNDetail } from \"../../redux\";\n\nconst { TabPane } = Tabs;\nconst { Text } = Typography;\nconst { Option } = Select;\n\n\n\nfunction DentalRecord(props) {\n\n\n\n  const [selectedOption, setSelectedOption] = useState(\"adult\");\n\n  useEffect(() => {\n\n    props.getPATNDetail(props.id);\n\n  }, []);\n\n\n\n\n  console.log(props.patient)\n  console.log(props)\n\n\n\n  const [state, setState] = useState({\n    dentalRecord: {},\n    balances: [],\n    myAppointments: [],\n    myAppointmentsLoading: false,\n    confirmedAppointments: []\n  });\n\n  const handleCreate = (values) => {\n    const hide = message.loading('Creating New Dental Record...', 0);\n    values.birthday = values.birthday.format('YYYY-MM-DD');\n    axios.post('patients/create', values)\n      .then((response) => {\n        if (response.status === 200) {\n          hide();\n          message.success('New Dental Record Created Successfully');\n          // getPatients();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        hide();\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  // componentDidMount() {\n  //    getDentalRecord(props.user.patient_id);\n  //    getMyBalances(props.user.patient_id);\n  //    getMyAppointments(props.user.patient_id);\n  //    getConfirmedAppointments();\n  // }\n\n  const getDentalRecord = (patientId) => {\n    axios.post(`/api/patients/${patientId}`)\n      .then((response) => {\n        if (response.status === 200)\n          setState({ dentalRecord: response.data.patient });\n      })\n      .catch((err) => {\n        console.log(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  const getMyBalances = (patientId) => {\n    axios.get(`/api/patients/${patientId}/myBalances`)\n      .then((response) => {\n        if (response.status === 200)\n          setState({ balances: response.data.balances });\n      })\n      .catch((err) => {\n        console.log(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  const getMyAppointments = (patientId) => {\n    setState({ myAppointmentsLoading: true });\n    axios.get(`/api/patients/${patientId}/myAppointments`)\n      .then((response) => {\n        if (response.status === 200) {\n          setState({ myAppointments: response.data.appointments });\n          setTimeout(() => {\n            setState({ myAppointmentsLoading: false });\n          }, 800);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  const getConfirmedAppointments = () => {\n    axios.get(`/api/appointments`)\n      .then((response) => {\n        if (response.status === 200) {\n          setState({ confirmedAppointments: response.data.appointments });\n\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n\n\n  const handleCancelAppointment = (appointmentId) => {\n    axios.post(`/api/patients/${appointmentId}/cancelAppointment`)\n      .then((response) => {\n        if (response.status === 200) {\n          getMyAppointments(props.user.patient_id)\n          getConfirmedAppointments();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  const handleContactNumberUpdate = (values) => {\n    const hide = message.loading('Updating Contact Number...', 0);\n    axios.post(`/api/patients/${props.user.patient_id}/updateContactNumber`, values)\n      .then((response) => {\n        if (response.status === 200) {\n          hide();\n          message.success('Contact Number Updated Successfully');\n          getDentalRecord(props.user.patient_id);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        hide();\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n\n  // const getRecord = (id) => {\n  //   setState({ loading: true });\n  //   axios.get(`patients/${id}`)\n  //     .then((response) => {\n  //       if (response.status === 200)\n  //         setState({ patient: response.data });\n  //     })\n  //     .then(() => {\n  //       setTimeout(() => {\n  //         setState({ loading: false });\n  //       }, 800)\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //       message.error('Something went wrong! Please, try again.');\n  //     });\n  // }\n\n  // const getRecordOnAddTreatment = (id) => {\n  // axios.get(`patients/${id}`)\n  //   .then((response) => {\n  //     if (response.status === 200)\n  //       setState({ patient: response.data });\n  //   })\n  //   .catch((err) => {\n  //     console.error(err);\n  //     message.error('Something went wrong! Please, try again.');\n  //   });\n\n  // }\n\n  // const handleUpdate = (id, values) => {\n  //   const hide = message.loading('Updating Personal Info...', 0);\n  //   values.birthday = values.birthday.format('YYYY-MM-DD');\n  //   axios.patch(`patients/${id}`, values)\n  //     .then((response) => {\n  //       if (response.status === 200) {\n  //         hide();\n  //         message.success('Personal Info Updated Successfully');\n  //         getRecord(id);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       hide();\n  //       message.error('Something went wrong! Please, try again.');\n  //     });\n  // }\n\n  const balancesColumns = [\n    {\n      title: <Text strong>Date Treated</Text>,\n      dataIndex: 'date_treated',\n      render: (text, record) => {\n        return moment(record.date_treated).format('MMMM DD, YYYY');\n      }\n    },\n    {\n      title: <Text strong>Description</Text>,\n      dataIndex: 'description',\n      render: (text, record) => {\n        return record.description;\n      }\n    },\n    {\n      title: <Text strong>Balance</Text>,\n      dataIndex: 'balance',\n      render: (text, record) => {\n        return <Tag color=\"red\">{'₱' + record.balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Tag>;\n      }\n    }\n  ];\n\n  const appointmentsColumns = [\n    {\n      title: <Text strong>Date and Time</Text>,\n      dataIndex: 'date',\n      render: (text, record) => {\n        return moment(record.date).format('MMMM DD, YYYY h:mm A');\n      }\n    },\n    {\n      title: <Text strong>Reason</Text>,\n      dataIndex: 'reason',\n      render: (text, record) => {\n        return record.reason;\n      }\n    },\n    {\n      title: <Text strong>Status</Text>,\n      dataIndex: 'status',\n      render: (text, record) => {\n        return record.status === 'confirmed' ? (<Badge status=\"success\" text={<Text style={{ color: '#73d13d' }}>Confirmed</Text>} />)\n          : record.status === 'pending' ? (\n            <Badge status=\"processing\" text={<Text style={{ color: '#108ee9' }}>Pending</Text>} />\n          )\n            : record.status === 'declined' ? (\n              (<Badge status=\"error\" text={<Text style={{ color: '#ff7875' }}>Declined</Text>} />)\n            )\n              : (<Badge status=\"error\" text={<Text style={{ color: '#ff7875' }}>Cancelled</Text>} />)\n      }\n    },\n    {\n      title: <Text strong>Action(s)</Text>,\n      dataIndex: 'actions',\n      render: (text, record) => {\n        const isAppointmentPast = moment(record.date).format('X') < moment(Date.now()).format('X');\n        const disabled = (record.status === 'cancelled'\n          || record.status === 'declined'\n          || (record.status === 'pending' && isAppointmentPast)\n          || (record.status === 'confirmed' && isAppointmentPast)\n        ) ? true : false;\n\n        const cancelDeclineButton = record.status === 'pending' ? (\n          <Popconfirm title=\"Are you sure?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => handleCancelAppointment(record.id)}>\n            <Button disabled={disabled} type=\"danger\">\n              Cancel Appointment Request\n                   </Button>\n          </Popconfirm>\n\n        ) : (\n            <Popconfirm title=\"Are you sure?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => handleCancelAppointment(record.id)}>\n              <Button disabled={disabled} type=\"danger\">\n                Cancel Appointment\n                </Button>\n            </Popconfirm>\n          );\n\n        if (record.status === 'declined' || record.status === 'cancelled')\n          return null;\n\n        return cancelDeclineButton;\n      }\n    }\n  ];\n  const lastVisit = moment(state.dentalRecord.last_visit).format('MMMM DD, YYYY');\n  const birthday = moment(state.dentalRecord.birthday).format('MMMM DD, YYYY');\n  const age = moment().diff(state.dentalRecord.birthday, 'years');\n\n  // const lastVisit = !props.patient.last_visit ? (<Tag color=\"geekblue\">New Record</Tag>) : moment(props.patient.last_visit).format('MMMM, DD YYYY');\n  // const birthday = moment(props.patient.birthday).format('MMMM DD, YYYY');\n  // const age = moment().diff(props.patient.birthday, 'years');\n\n  return (\n\n    <>\n\n      <Row type=\"flex\">\n        <Col span={8}><DescriptionItem title=\"الكود\" content={props.patient.id} /></Col>\n        <Col span={8}><DescriptionItem title=\"الاسم\" content={props.patient.name} /></Col>\n        <Col span={8}><DescriptionItem title=\"اخر زياره\" content={lastVisit} /></Col>\n        <Col span={8}><DescriptionItem title=\"تاريخ الميلاد\" content={birthday} /></Col>\n        <Col span={8}><DescriptionItem title=\"العمر\" content={age} /></Col>\n        <Col span={8}><DescriptionItem title=\"العنوان\" content={props.patient.address} /></Col>\n        <Col span={8}><DescriptionItem title=\"المهنه\" content={props.patient.occupation} /></Col>\n        <Col span={8}><DescriptionItem title=\"رقم الهاتف\" content={props.patient.phone} /></Col>\n      </Row>\n\n      <Tabs defaultActiveKey=\"1\">\n\n        <TabPane tab=\"العلاجات و / أو الإجراءات\" key=\"1\">\n          <TreatmentsTable patientId={props.patient.id} />\n          {/* <TreatmentsTable role={props.role} getPatient={() => getRecordOnAddTreatment(props.id)} patientId={props.patient.id} /> */}\n        </TabPane>\n\n\n\n        <TabPane tab=\"الاسنان\" key=\"2\">\n\n\n          <Row>\n\n            <Col align=\"center\" span={24}>\n\n              <Text strong>عنوان : </Text>\n              <br />\n              <Tag color=\"#ffc53d\">فاسد</Tag>\n              <Tag color=\"#ff4d4f\">مفقودة</Tag>\n              <Tag color=\"#40a9ff\">محشو</Tag>\n            </Col>\n\n\n            <Select\n              style={{ width: 120 }}\n              onChange={value => {\n                console.log(value);\n                setSelectedOption(value)\n              }}\n              defaultValue={selectedOption}\n\n            >\n\n\n              <Option value={\"adult\"}>\n                بالغ\n              </Option>\n\n              <Option value={\"child\"}>\n                طفل\n              </Option>\n            </Select>\n\n            {selectedOption === \"child\" ? (\n              <ChildTeethChart patientId={props.patient.id} />\n\n            ) : (\n                <AdultTeethChart patientId={props.patient.id} />\n\n              )}\n\n\n\n          </Row>\n        </TabPane>\n\n        <TabPane tab=\"كشف مريض\" key=\"3\" style={{ paddingLeft: 0, paddingRight: 100, margin: 0 }}>\n\n          <Alert style={{ marginBottom: 11 }} showIcon message=\"Note: You cannot edit or update any information on your Dental Record here except your contact number. In case of inaccurate information kindly contact us or visit us.\" />\n          {!state.dentalRecord.contact_number ? (\n            <Alert style={{ marginBottom: 11 }} showIcon closable message=\"You have no provided contact number. Please, kindly provide one to be able to receive sms notifications (appointment reminder, promos, etc.)\" type=\"warning\" />\n          ) : null}\n\n\n          <Row type=\"flex\">\n            <Col span={8}><DescriptionItem title=\"Code\" content={state.dentalRecord.code} /></Col>\n            <Col span={8}><DescriptionItem title=\"Name\" content={state.dentalRecord.name} /></Col>\n            <Col span={8}><DescriptionItem title=\"Last Visit\" content={lastVisit} /></Col>\n            <Col span={8}><DescriptionItem title=\"Birthday\" content={birthday} /></Col>\n            <Col span={8}><DescriptionItem title=\"Age\" content={age} /></Col>\n            <Col span={8}><DescriptionItem title=\"Address\" content={state.dentalRecord.address} /></Col>\n            <Col span={8}><DescriptionItem title=\"Occupation\" content={state.dentalRecord.occupation} /></Col>\n            <Col span={8}><DescriptionItem title=\"Civil Status\" content={state.dentalRecord.civil_status} /></Col>\n            <Col span={8}>\n              <UpdateContactForm onUpdateContactNumber={handleContactNumberUpdate} contactNumber={state.dentalRecord.contact_number} />\n            </Col>\n          </Row>\n        </TabPane>\n\n        <TabPane tab=\"حجز\" key=\"4\">\n\n          {!state.dentalRecord.contact_number ? (\n            <Alert style={{ marginBottom: 11 }} showIcon closable message=\"You have no provided contact number on your Dental Record. Please, kindly provide one to be able to receive sms notifications (appointment reminder, appointment status, etc.)\" type=\"warning\" />\n          ) : null}\n          <Alert\n            style={{ marginBottom: 11 }}\n            showIcon\n            closable\n            message={\n              (<><Text strong>Attention!</Text> Before you make an appoinment, kindly check the clinic's calendar for available time and day otherwise your appointment will be declined or ignored.</>)\n            }\n            type=\"warning\" />\n\n          <Row style={{ marginBottom: 12 }}>\n            <Col align=\"right\">\n              {/* <PatientCreateAppointmentModal onCreate={handleCreateAppointment} patientId={props.patient.id} /> */}\n              <PatientCreateAppointmentModal patientId={props.patient.id} />\n            </Col>\n          </Row>\n\n          <Table\n            scroll={{ x: 700 }}\n            locale={{ emptyText: 'No Appointments' }}\n            loading={state.myAppointmentsLoading}\n            dataSource={state.myAppointments}\n            size=\"medium\"\n            columns={appointmentsColumns}\n            rowKey={(record) => record.id}\n            pagination={\n              {\n                position: 'bottom',\n                defaultCurrent: 1,\n                pageSize: 8,\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} appointments`,\n                onChange: (page, pageSize) => {\n\n                }\n              }\n            }\n          />\n        </TabPane>\n\n        <TabPane tab=\"الفاتوره\" key=\"5\">\n\n          <Table\n            locale={{ emptyText: 'No Balances' }}\n            dataSource={state.balances}\n            size=\"medium\"\n            columns={balancesColumns}\n            rowKey={(record) => record.id}\n            pagination={\n              {\n                position: 'bottom',\n                showSizeChanger: true,\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} balances`,\n                defaultCurrent: 1,\n                pageSize: 8,\n                onChange: (page, pageSize) => {\n\n                }\n              }\n            }\n          />\n        </TabPane>\n        <TabPane tab=\"تعديل\" key=\"6\">\n          <UpdatePersonalInfoModal patientId={props.patient.id} />\n        </TabPane>\n      </Tabs>\n\n\n    </>\n  );\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n\n    patient: state.patient.patientsDetail,\n  };\n};\n\n\nexport default connect(\n  mapStateToProps,\n  { getPATNDetail }\n)(DentalRecord);\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js",["277","278","279"],"import React, { useState, useEffect } from 'react';\nimport { message, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\n// import moment from 'moment';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nimport { connect } from \"react-redux\";\nimport {  createABNT } from \"../../redux\";\n\nconst { Option } = Select;\n\n\n\nfunction CreateAppointmentModal(props, {  createABNT }) {\n\n \n\n   const [formData, setFormData] = useState({\n      reason: \"\",\n      patient: \"\",\n      doctor: \"\",\n   });\n\n   console.log(formData)\n\n   const { patient, reason, doctor } = formData;\n\n   console.log(formData)\n\n   const onChange = (e) =>\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   console.log(formData)\n\n\n\n\n   // useEffect(() => {\n   //    const fetchData = async () => {\n   //       try {\n   //          await getPATN();\n\n   //       } catch (err) { }\n   //    };\n\n   //    fetchData();\n   // }, []);\n\n   console.log(props.patient)\n\n\n\n   const onFinish = () => {\n      console.log(formData)\n\n      props.createABNT(formData);\n\n   };\n\n   console.log(onFinish())\n\n\n\n\n   // const disabledDateTime = () => {\n   //    return {\n   //       disabledHours: () => [0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23],\n   //    };\n   // }\n\n   const [form] = Form.useForm();\n\n\n   const options = props.patient.map(d => <Option key={d.id}>{d.name}</Option>)\n\n   return (\n      <>\n\n\n\n         <Form\n            layout=\"vertical\"\n\n            onFinish={onFinish}\n\n            form={form}\n         >\n\n            <Row gutter={8}>\n\n               {/* <Col span={24}>\n                     <Form.Item label=\"Date and Time\" name=\"date\" rules={[{ required: true, message: 'Date and Time is required.' }]} >\n\n\n                        <DatePicker\n                           name=\"date\"\n                           value={date}\n                           onChange={(e) => onChange(e)}\n                           disabledTime={disabledDateTime}\n                           disabledDate={(current) => current && current < moment() || moment(current).day() === 0}\n                           placeholder=\"Select date and time\" style={{ width: '100%' }}\n\n                           showTime={\n                              {\n                                 use12Hours: true, format: 'h:mm',\n                                 defaultValue: moment('8:00', 'h:mm')\n                              }\n                           }\n                           format=\"MMMM DD, YYYY h:mm A\"\n                        />\n\n                     </Form.Item>\n                  </Col> */}\n\n               <Col span={24}>\n                  <Form.Item label=\"اسم المريض\" rules={[{ required: true, message: 'Patient name is required' }]}>\n\n                     <Select\n                        name=\"patient\"\n                        allowClear\n                        showSearch\n                        placeholder=\"\"\n                        defaultActiveFirstOption={false}\n                        showArrow={false}\n                        filterOption={false}\n                        notFoundContent={null}\n                        value={patient}\n                        onChange={(e) => onChange(e)}\n                     >\n                        {options}\n                     </Select>\n\n\n                  </Form.Item>\n\n               </Col>\n\n\n               <Col span={24}>\n                  <Form.Item label=\"Reason\" rules={[{ required: true, message: 'Reason is required.' }]}\n                  >\n\n                     <Input\n                        name=\"reason\"\n                        value={reason}\n                        onChange={(e) => onChange(e)}\n                     />\n\n                  </Form.Item>\n               </Col>\n               <Col span={24}>\n                  <Form.Item label=\"doctor\" rules={[{ required: true, message: 'Reason is required.' }]}\n                  >\n\n                     <Input\n                        name=\"doctor\"\n                        value={doctor}\n                        onChange={(e) => onChange(e)}\n                     />\n\n                  </Form.Item>\n               </Col>\n\n            </Row>\n\n            <Button type=\"primary\" htmlType=\"submit\"><PlusCircleFilled />Create New Appointment</Button>\n\n\n         </Form>\n\n      </>\n   );\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      patient: state.patient.patients,\n\n   };\n};\n\n\n\nexport default connect(\n   mapStateToProps,\n   { createABNT }\n\n)(CreateAppointmentModal);\n\n\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js",["280","281"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\n\n\nfunction CreateDentalRecordModal(props) {\n   const [form] = Form.useForm();\n\n  \n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onCreate(values);\n      });\n   }\n\n  \n\n \n\n   const validateContactNumber = (rule, value, callback) => {\n\n      const myRegex = /^(09|\\+639)\\d{9}$/;\n\n      if (!value)\n         callback();\n      else if (isNaN(parseInt(value)) || (myRegex.exec(value) == null && (value.length < 11 || value.length > 11))) {\n         console.log(value.length);\n         callback('Invalid Contact Number');\n      }\n      else\n         callback();\n\n   }\n\n\n   return (\n      <>\n         \n        \n            <Form layout=\"vertical\" onSubmit={handleSubmit}\n               form={form}>\n               <Row>\n                  <Col span={24}>\n                     <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Name is required' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Address is required' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" name=\"birthday\" rules={[{ required: true, message: 'Birthday is required' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Occupation\" name=\"occupation\" >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                     <Form.Item label=\"Civil Status\" name=\"civil_status\">\n\n                        <Select>\n                           <Option value=\"single\">Single</Option>\n                           <Option value=\"married\">Married</Option>\n                           <Option value=\"widowed\">Widowed</Option>\n                           <Option value=\"separated\">Separated</Option>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col span={24}>\n                     <Form.Item label=\"Contact Number\" name=\"contact_number\" rules={[{ validator: validateContactNumber }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button type=\"primary\" htmlType=\"submit\">\n            <UsergroupAddOutlined />\n                  Create New Dental Record\n               </Button>\n            </Form>\n        \n      </>\n   );\n\n}\n\nexport default CreateDentalRecordModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\sms\\SMSTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js",["282"],"import React, { useState } from 'react';\nimport { Divider, Timeline, Popover, Drawer, } from 'antd';\n\nfunction AppointmentsPopoverDrawer(props) {\n\n   const [state, setState] = useState({\n      visible: false, childrenDrawer: false, visiblePopover: false\n   });\n\n   console.log(props.appointments)\n\n   const showDrawer = () => {\n      setState({\n         visible: true,\n         visiblePopover: false\n      });\n   };\n\n   const onClose = () => {\n      setState({\n         visible: false,\n         visiblePopover: false\n      });\n   };\n\n   // const showChildrenDrawer = () => {\n\n   //    setState({\n   //       childrenDrawer: true,\n   //    });\n   // };\n\n   // const onChildrenDrawerClose = () => {\n   //    setState({\n   //       childrenDrawer: false,\n   //    });\n   // };\n\n   const handleVisiblePopoverChange = (visible) => {\n      setState({ visiblePopover: visible });\n   }\n\n\n   return (\n      <React.Fragment>\n\n         <Popover\n            title={props.title}\n            trigger=\"click\"\n            visible={state.visiblePopover}\n            onVisibleChange={handleVisiblePopoverChange}\n            content={<a onClick={showDrawer}>View Appointments</a>}\n         >\n            {props.children}\n         </Popover>\n\n         <Drawer\n            title=\"Appointments for this date\"\n            width=\"450px\"\n            closable={true}\n            onClose={onClose}\n            visible={state.visible}\n         >\n            <Timeline>\n               {\n                  props.appointments.map((appointment) => {\n\n\n                     return (\n                        <Timeline.Item key={appointment.id}>\n                           {appointment.patient} @ {appointment.time} <Divider type=\"vertical\" /> {appointment.reason}\n                        </Timeline.Item>\n                     );\n                  })\n               }\n            </Timeline>\n\n\n\n         </Drawer>\n      </React.Fragment>\n   );\n\n}\n\n\nexport default AppointmentsPopoverDrawer;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\AdultTeethChart.js",["283"],"import React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport DMFTPopover from './DMFTPopover';\nimport axios from 'axios';\n\n\nconst AdultTeethChart = (props) => {\n\n\n   const [values, setValues] = useState('');\n\n\n   const getChildTeethChart = async () => {\n      const res = await axios.get(\n         `${process.env.REACT_APP_API_URL}/adultteeth/${props.patientId}/`,\n        \n      );\n      setValues(res.data);\n   }\n\n\n   useEffect(() => {\n      const fetchData = async () => {\n         try {\n            getChildTeethChart();\n         } catch (err) { }\n      };\n\n      fetchData();\n   }, [props.user]);\n\n   const statusColor = (value) => {\n      switch (value) {\n         case 'Decayed':\n            return '#ffc53d';\n         case 'Missing':\n            return '#ff4d4f';\n         case 'Filled':\n            return '#40a9ff';\n         default:\n            return '#fff';\n      }\n   }\n\n\n   const onToothStatusChange = (toothPosition, value) => {\n      axios.patch(`${process.env.REACT_APP_API_URL}/adultteeth/${props.patientId}/`, { [toothPosition]: value })\n         .then((response) => {\n            if (response.status === 200) {\n               getChildTeethChart();\n               return;\n            }\n         })\n         .catch((err) => {\n            console.error(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   return (\n      <div style={{ width: '500px', margin: '0 auto' }} className=\"tooth-chart\">\n         <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 450 700\" enableBackground=\"new 0 0 450 700\" xmlSpace=\"preserve\">\n            <g id=\"toothLabels\">\n               <text id=\"lbl32\" transform=\"matrix(1 0 0 1 110.9767 402.1409)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">32</text>\n               <text id=\"lbl31\" transform=\"matrix(1 0 0 1 110.7426 449.1693)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">31</text>\n               <text id=\"lbl30\" transform=\"matrix(1 0 0 1 120.0002 495.5433)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">30</text>\n               <text id=\"lbl29\" transform=\"matrix(1 0 0 1 135.0002 538.667)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">29</text>\n\n               {/* <text id=\"lbl28\" transform=\"matrix(0.9999 -1.456241e-02 1.456241e-02 0.9999 136.4086 573.5098)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">28</text> */}\n               <text id=\"lbl28\" transform=\"matrix(1 0 0 0.9999 160.4086 577.5098)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">28</text>\n\n               <text id=\"lbl27\" transform=\"matrix(1 0 0 1 172.3335 603.8164)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"17px\">27</text>\n               <text id=\"lbl26\" transform=\"matrix(1 0 0 1 190.3335 623.8164)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"18px\">26</text>\n               <text id=\"lbl25\" transform=\"matrix(1 0 0 1 220.6669 628.483)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"18px\">25</text>\n               <text id=\"lbl24\" transform=\"matrix(1 0 0 1 245.3335 628.1497)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"18px\">24</text>\n               <text id=\"lbl23\" transform=\"matrix(1 0 0 1 267.3335 619.1497)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"17px\">23</text>\n\n               <text id=\"lbl22\" transform=\"matrix(1 0 0 1 290.3335 602.483)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"18px\">22</text>\n               <text id=\"lbl21\" transform=\"matrix(1 0 0 1 305.6669 573.1497)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">21</text>\n               <text id=\"lbl20\" transform=\"matrix(1 0 0 1 321.6327 538.667)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">20</text>\n               <text id=\"lbl19\" transform=\"matrix(1 0 0 1 340.983 495.5432)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">19</text>\n               <text id=\"lbl18\" transform=\"matrix(1 0 0 1 345.1251 449.1686)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">18</text>\n               <text id=\"lbl17\" transform=\"matrix(1 0 0 1 340.0004 402.1405)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">17</text>\n\n               <text id=\"lbl16\" transform=\"matrix(1 0 0 1 340.8534 324.1021)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">16</text>\n               <text id=\"lbl15\" transform=\"matrix(1 0 0 1 338.3335 275.3333)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">15</text>\n               <text id=\"lbl14\" transform=\"matrix(1 0 0 1 330.3335 236)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">14</text>\n               <text id=\"lbl13\" transform=\"matrix(1 0 0 1 321.3335 200.6667)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">13</text>\n               <text id=\"lbl12\" transform=\"matrix(1 0 0 1 305 172)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">12</text>\n               <text id=\"lbl11\" transform=\"matrix(1 0 0 1 290 142.439)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">11</text>\n               <text id=\"lbl10\" transform=\"matrix(1 0 0 1 280 118.9722)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">10</text>\n\n               <text id=\"lbl9\" transform=\"matrix(1 0 0 1 240.8432 112.9722)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">9</text>\n               <text id=\"lbl8\" transform=\"matrix(1 0 0 1 215.1766 112.9722)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">8</text>\n               <text id=\"lbl7\" transform=\"matrix(1 0 0 1 175.5099 117.6388)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">7</text>\n               <text id=\"lbl6\" transform=\"matrix(1 0 0 1 155.6667 134.167)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">6</text>\n               <text id=\"lbl5\" transform=\"matrix(1 0 0 1 139.3605 164.8335)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">5</text>\n               <text id=\"lbl4\" transform=\"matrix(1 0 0 1 125.3927 195.6387)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">4</text>\n               <text id=\"lbl3\" transform=\"matrix(1 0 0 1 113.8631 234.4391)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">3</text>\n               <text id=\"lbl2\" transform=\"matrix(1 0 0 1 110.2504 275.9999)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">2</text>\n               <text id=\"lbl1\" transform=\"matrix(1 0 0 1 105.9767 324.769)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">1</text>\n\n            </g>\n            {/* <g id=\"dmftLabels\">\n               <text id=\"txtTooth32\" transform=\"matrix(1 0 0 1 5.0001 386.3778)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth31\" transform=\"matrix(1 0 0 1 0.9998 449.7374)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth30\" transform=\"matrix(1 0 0 1 9.6668 513.5912)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth29\" transform=\"matrix(1 0 0 1 36.3335 578.2579)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth28\" transform=\"matrix(1 0 0 1 74.3335 626.9246)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth27\" transform=\"matrix(1 0 0 1 109.0001 660.9246)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth26\" transform=\"matrix(1 0 0 1 145.6668 678.2579)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth25\" transform=\"matrix(1 0 0 1 191.6668 687.5912)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth24\" transform=\"matrix(1 0 0 1 233.0001 687.5915)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth23\" transform=\"matrix(1 0 0 1 283.0001 673.5915)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth22\" transform=\"matrix(1 0 0 1 329.6668 644.9248)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth21\" transform=\"matrix(1 0 0 1 359.6668 604.9248)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth20\" transform=\"matrix(1 0 0 1 390.3334 558.2581)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth19\" transform=\"matrix(1 0 0 1 412.6435 494.2493)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth18\" transform=\"matrix(1 0 0 1 416.1565 449.7382)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth17\" transform=\"matrix(1 0 0 1 409.9765 386.378)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth16\" transform=\"matrix(1 0 0 1 410.5356 325.845)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth15\" transform=\"matrix(1 0 0 1 414.0005 251.8453)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth14\" transform=\"matrix(1 0 0 1 408.7707 211.7113)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth13\" transform=\"matrix(1 0 0 1 386.7073 165.7383)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth12\" transform=\"matrix(1 0 0 1 360.5876 123.5825)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth11\" transform=\"matrix(1 0 0 1 344.0069 89.5916)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth10\" transform=\"matrix(1 0 0 1 301.0546 54.1648)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth9\" transform=\"matrix(1 0 0 1 229.2251 29.2916)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth8\" transform=\"matrix(1 0 0 1 172.7413 30.3285)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth7\" transform=\"matrix(1 0 0 1 114.3296 51.5455)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth6\" transform=\"matrix(1 0 0 1 72.0002 91.2056)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth5\" transform=\"matrix(1 0 0 1 48.5357 127.8719)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth4\" transform=\"matrix(1 0 0 1 27.2052 167.0134)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth3\" transform=\"matrix(1 0 0 1 8.7983 212.3336)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth2\" transform=\"matrix(1 0 0 1 3.25 260.1059)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n               <text id=\"txtTooth1\" transform=\"matrix(1 0 0 1 5.0001 338.4393)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n            </g>\n             */}\n            <g className=\"spots\">\n\n               {/* LOWER RIGHT QUADRANT  */}\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_32\" value={values.LR_32} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth32\" fill={statusColor(values.LR_32)} data-key={32} points=\"66.7,369.7 59,370.3 51,373.7 43.7,384.3 42.3,392 38.7,406 41,415.3 44.3,420.3 \n               47.3,424 51.7,424.3 57.7,424 62.3,422.7 66.7,422.7 71,424.3 76.3,422.7 80.7,419.3 84.7,412.3 85.3,405 87.3,391.7 85,380 \n               80.7,375 73.7,371.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_31\" value={values.LR_31} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth31\" fill={statusColor(values.LR_31)} data-key={31} points=\"76,425.7 80.3,427.7 83.3,433 85.3,447.7 84.3,458.7 79.7,472.3 73,475 50.3,479.7 \n               46.7,476.7 37.7,446.3 39.7,438.3 43.3,432 49,426.7 56,424.7 65,424.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_30\" value={values.LR_30} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth30\" fill={statusColor(values.LR_30)} data-key={30} points=\"78.7,476 85,481 90.3,488.3 96.3,499.3 97.7,511.3 93,522 86,526.3 67,533 \n               60.3,529.7 56.3,523.7 51.7,511 47.7,494.7 47.7,488.3 50.3,483.3 55,479.7 67,476.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_29\" value={values.LR_29} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth29\" fill={statusColor(values.LR_29)} data-key={29} points=\"93.3,525 99.3,527.3 108.3,536 114,546.7 115.7,559.3 114.3,567.3 106.3,573 \n               98.3,578.3 88,579 82,575 75,565 69.3,552.3 67.3,542 69.7,536 74.3,531.7 84.3,528.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_28\" value={values.LR_28} onChange={onToothStatusChange}>\n                  <path id=\"Tooth28\" fill={statusColor(values.LR_28)} data-key={28} d=\"M117.3,569.7l7.7,1.3l6.3,3.7l6.3,7.7l4,8.3L144,602l-1.3,6.7l-6.7,6.7l-7.7,3.3l-7.3-1l-7-3\n               l-7.3-7l-5-9l-2-10c0,0-0.7-7,0.3-7.3c1-0.3,5.3-6.7,5.3-6.7l9-5H117.3z\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_27\" value={values.LR_27} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth27\" fill={statusColor(values.LR_27)} data-key={27} points=\"155.7,611 160.3,615.3 165,624.7 161.7,634.3 156,641.3 149,644 140.7,644.3 \n               133.3,641.3 128.7,634.7 128.7,629 132.7,621.3 137.7,615 143.7,611 149.7,610 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_26\" value={values.LR_26} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth26\" fill={statusColor(values.LR_26)} data-key={26} points=\"178.3,627 186,629 187.7,633.7 188.7,644 189,657 189.3,662.7 186.3,663.7 176.7,663 \n               168,656.3 159.3,649.7 156.7,644 162,639.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LR_25\" value={values.LR_25} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth25\" fill={statusColor(values.LR_25)} data-key={25} points=\"214,637 218,642.7 223,654.3 225.7,664 225.3,666.3 219,668.3 206.7,668 196,665.7 \n               190.3,662.7 193,657.3 199.7,647.3 207,638 210.7,635.5 \t\" />\n               </DMFTPopover>\n\n               {/*LOWER LEFT QUADRANT*/}\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_24\" value={values.LL_24} onChange={onToothStatusChange}>\n                  <path id=\"Tooth24\" fill={statusColor(values.LL_24)} data-key={24} d=\"M235.3,637c0,0,3-2,4-2.3c1-0.3,4.3,0,4.3,0l5,4.3l5.3,7.3l3.3,6.7l2,7.3l-2,3l-7.7,2.7\n                l-10,0.3h-10l-2-6.7l2.7-7.3L235.3,637z\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_23\" value={values.LL_23} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth23\" fill={statusColor(values.LL_23)} data-key={23} points=\"269.3,624 273.3,624.7 275.3,627.3 279,628.7 281.7,631.3 285.3,634.7 289.3,638.3 \n               292,643.3 291.3,650 287,655 280.7,658.7 272,660 265,660.7 261.3,657.3 261.7,650 263.7,637 264.3,627 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_22\" value={values.LL_22} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth22\" fill={statusColor(values.LL_22)} data-key={22} points=\"286,629.3 286.7,633.3 291.3,638.7 295.3,642.3 302,644 311.7,643.3 318.3,637.7 \n               321,630 321.3,620.3 317,614.3 308,608 298.3,607 291,609.3 287,612.3 286.7,617.7 287.3,624.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_21\" value={values.LL_21} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth21\" fill={statusColor(values.LL_21)} data-key={21} points=\"331,565.7 335,565.7 341.3,568 349.3,574.3 352.3,578.3 352.7,583.7 350.7,593.7 \n               342.7,604 337.7,609 328,612.7 320,613.3 315,611 308.3,604.7 306.7,598 307.3,591.3 309,584.7 312.7,578.3 318.3,571.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_20\" value={values.LL_20} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth20\" fill={statusColor(values.LL_20)} data-key={20} points=\"334,561 338.7,566 346,570 354.7,573 360.7,571.7 368,568.3 383,545 385.3,532.7 \n               381.3,524.3 374,520.7 363.7,516.3 356.3,515.3 351.3,518.3 346.3,524 340.3,534.3 336,546.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_19\" value={values.LL_19} onChange={onToothStatusChange}>\n                  <path id=\"Tooth19\" fill={statusColor(values.LL_19)} data-key={19} d=\"M398,470l4.7,5.7l3,7.7l-0.3,11.7l-6,13.3l-6.3,10.3l-8.3,4.3l-7.3-1l-16.3-7c0,0-2.7-6-3-7.3\n               c-0.3-1.3-0.3-11-0.3-11l3.7-14.3l3.7-7l5.3-6.7l8-2l9.7-0.7L398,470z\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_18\" value={values.LL_18} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth18\" fill={statusColor(values.LL_18)} data-key={18} points=\"410,435 408.7,447.3 404.3,459 399.3,467.7 393.7,468 388,466 376.3,466.3 \n               369.7,466.3 365.7,460 364.7,444.7 366.3,434.3 369,424 378.3,417.3 386.7,415.7 391.7,415.3 396,418 399.7,418 404,421.7 \n               407.7,427.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"LL_17\" value={values.LL_17} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth17\" fill={statusColor(values.LL_17)} data-key={17} points=\"371.7,417 378.3,417.3 386.7,415.7 391.7,415.3 397.3,417.7 402.7,416.3 407.7,409.7 \n               406.7,395 401,377.7 397.3,373 390.7,367.3 380,365 373,366.7 367.3,369 364,374.3 360,389 363.3,401.3 367.7,412.3 \t\" />\n               </DMFTPopover>\n\n\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_16\" value={values.UL_16} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth16\" fill={statusColor(values.UL_16)} data-key={16} points=\"404.3,293.7 408.7,299.3 408.7,308 405.3,318.7 401,329.7 392.3,339.7 382.7,341 \n               369,339.7 359,335 354.7,327.7 354.3,316 358.3,304 363.7,294 368.7,294.7 378.7,296 389,296 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_15\" value={values.UL_15} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth15\" fill={statusColor(values.UL_15)} data-key={15} points=\"362.3,247.3 357.3,251 357,259.3 358.7,268 359.7,279.7 361.3,286.7 365,291.7 \n               371,294.3 392,295 404.3,293.7 410,280.7 412,263.3 407.3,246.7 401,240.3 396,239.7 389.3,243 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_14\" value={values.UL_14} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth14\" fill={statusColor(values.UL_14)} data-key={14} points=\"359.7,243.7 350.7,224 345.7,211.7 348.7,205 358.3,202.7 375.7,197 388.7,193 \n               393,196 399.3,207 401.3,222.7 400,234.3 394.7,240.7 381.7,244.7 371,246 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_13\" value={values.UL_13} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth13\" fill={statusColor(values.UL_13)} data-key={13} points=\"386,188.7 383.3,192.7 377.7,196 356.3,203.3 345.7,202.3 341.7,199.7 338.7,196.3 \n               335,188.7 332,177 333.7,169.7 338,164.7 346.3,161 353.7,156.7 360.3,150.3 364,151 370.7,156.3 376.3,164.3 380,170.3 \n               383.3,178.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_12\" value={values.UL_12} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth12\" fill={statusColor(values.UL_12)} data-key={12} points=\"358.7,134.3 360.3,145.7 357.3,152.7 352,157.3 346.3,161 336,164 329.7,163.3 \n               321.7,157.7 314.3,149 310.7,139.3 310,133.7 312.3,127 318.3,125.7 326,122 332.7,116 334.7,114.3 337.7,117.3 343.3,119.7 \n               348.7,122.7 354.3,127.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_11\" value={values.UL_11} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth11\" fill={statusColor(values.UL_11)} data-key={11} points=\"336,93.3 337.7,100 336,104.7 332.7,113.7 324.3,121.3 315.3,125.7 306.3,126 \n               297.3,120.3 294,112 295.7,102.7 299,95 303.3,90 309.3,88 316.3,87.3 322.7,87.3 328,88.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_10\" value={values.UL_10} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth10\" fill={statusColor(values.UL_10)} data-key={10} points=\"310.3,83.3 298,90.7 286,95 276.3,98.3 270.3,93.3 269,82.7 269,69.3 270,58.7 \n                274.7,54.7 282,53 287.7,54.7 297.3,60.3 304,64.3 308.7,68.7 312.3,74 313,81 \t\" />\n               </DMFTPopover>\n\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UL_9\" value={values.UL_9} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth9\" fill={statusColor(values.UL_9)} data-key={9} points=\"273.3,52 266.7,61.7 258.3,72.3 253.3,79.7 247.3,85 239,87.7 232.3,82 224.7,67 \n               222,58.3 219,50 220,44.3 224.3,40.3 230,38.7 237.3,38.7 253,39.3 258.7,41.3 264.3,43.7 268.3,45.7 \t\" />\n               </DMFTPopover>\n\n               { /* UPPER RIGHT QUADRANT*/}\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_8\" value={values.UR_8} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth8\" fill={statusColor(values.UR_8)} data-key={8} points=\"176.7,46.3 195,41 203.3,39.7 209.3,40.7 215.3,42.7 217,47 217.7,54.3 215,64.7 \n               212.3,75.7 208,83 201.7,85.7 195.7,86.7 189.7,83.3 183.7,74.7 175,62 171.7,54 172.7,49.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_7\" value={values.UR_7} onChange={onToothStatusChange}>\n                  <path id=\"Tooth7\" fill={statusColor(values.UR_7)} data-key={7} d=\"M167,55l6.7,6.3L174,68l0.3,8l1,10l-2,8.3l-4.7,4.3l-6.7,1.7l-8-4.3l-7.3-4.7l-9.3-4.7\n                l-6.3-5.3l-1-4.3l1.3-5c0,0,3.3-6,4.3-6s5.3-6,6.3-6s10.3-4.7,10.3-4.7L167,55z\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_6\" value={values.UR_6} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth6\" fill={statusColor(values.UR_6)} data-key={6} points=\"126.3,82 134.3,86.3 139.7,92.3 144.7,104.7 145.7,115.3 143.7,120.7 138,124.3 \n               131.3,125 121,125 114.7,119.3 110.3,112.3 108.3,104.7 108.7,94.7 110.7,88.7 116,84 \t\" />\n               </DMFTPopover>\n               <DMFTPopover toothPosition=\"UR_5\" value={values.UR_5} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth5\" fill={statusColor(values.UR_5)} data-key={5} points=\"109,116.7 116,122.3 122.7,125.3 127.7,131.3 128.3,141 122.7,153.7 114,161.7 \n               105.7,162.3 96.7,161 85.7,156 82,150 81,139.3 86.3,128 93,121.3 100.7,117.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_4\" value={values.UR_4} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth4\" fill={statusColor(values.UR_4)} data-key={4} points=\"82,155.3 102.3,163.3 108.7,172 109.3,182 104.7,192 100,199 94,203.7 85.3,201.7 \n               73.7,201 64.3,196.7 60.3,190.7 59,183.3 61.7,175.3 66.3,167.7 71.3,161.3 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_3\" value={values.UR_3} onChange={onToothStatusChange}>\n                  <path id=\"Tooth3\" fill={statusColor(values.UR_3)} data-key={3} d=\"M92.7,207.3l2,5.3l-1.7,8l-1.7,9l-4,8l-5,7.7l-11,4.7l-13.7,0.7l-10-7l-1.7-5L45,220l3-10.7\n               l5-7.3l4-3.3l4.7-2.7l5.3,3.7l6.7,1.3c0,0,7.3,1.3,9.3,1.3s6.3,0.7,6.3,0.7L92.7,207.3z\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_2\" value={values.UR_2} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth2\" fill={statusColor(values.UR_2)} data-key={2} points=\"79.7,288.3 71.7,291 55,293 40.3,291.3 36,287 33,273.7 36.3,260 42,248.7 44.7,244.7 \n               50.3,246.7 56,249 65.3,250.7 74,249.7 80.3,249.7 82.3,254 85.3,259.3 87,267.7 87.7,274.7 85.3,282.7 \t\" />\n               </DMFTPopover>\n               <DMFTPopover patientId={props.patientId} toothPosition=\"UR_1\" value={values.UR_1} onChange={onToothStatusChange}>\n                  <polygon id=\"Tooth1\" fill={statusColor(values.UR_1)} data-key={1} points=\"33,314.3 38,325.7 45.7,335.7 55.7,341.7 64.7,343 73.3,340 77.7,335.7 81.3,326.3 \n               82,314.3 81.3,302 80.7,292.7 73.7,292 51.3,293.7 38.7,293.7 34,298 31.7,302.3 32,311 \t\" />\n               </DMFTPopover>\n\n            </g>\n            <g id=\"adult-outlines\">\n               <g id=\"XMLID_210_\">\n                  <path id=\"XMLID_208_\" fill=\"#010101\" d=\"M372.6,180.5c0.2,1.4-2,2.3-2.9,1.2c-0.7-1.1,1.5-1.8,2.4-0.9L372.6,180.5z\" />\n                  <path id=\"XMLID_207_\" fill=\"#010101\" d=\"M71.4,392.6c-0.5,1.1-2,1.5-2.9,0.9c-0.3-1.6,2.6-2.4,3.2-0.9L71.4,392.6z\" />\n                  <path id=\"XMLID_199_\" fill=\"#010101\" d=\"M83.6,183.9c1.2,0.1,2.2,1.1,2.3,2.3c-1.2,1.3-3.7-1.1-2.4-2.3L83.6,183.9z\" />\n                  <path id=\"XMLID_192_\" fill=\"#010101\" d=\"M341.6,587.6c-0.3-0.9,1.1-1.3,2-1.1c0.7,1.1-0.3,2.8-1.6,2.8\n          C341.2,589.2,341,588,341.6,587.6L341.6,587.6z\" />\n                  <path id=\"XMLID_188_\" fill=\"#010101\" d=\"M87.8,552.3c-1.5,0-3,0-4.6,0c-0.4-0.6-0.5-1.3-0.4-2c1.4-0.4,2.8-0.5,4.2-0.3\n          c0.3,0.7,0.6,1.5,0.8,2.2L87.8,552.3z\" />\n                  <path id=\"XMLID_186_\" fill=\"#010101\" d=\"M63.1,269.9c2.1,0.4,3.5,2.9,2.7,4.9c-1.8-0.7-3-2.8-2.7-4.7L63.1,269.9z\" />\n                  <path id=\"XMLID_64_\" fill=\"#010101\" d=\"M407.7,456.5c5.4-9,6.6-22,0.9-30c-0.6-1.7-1.7-3.4-2.9-4.4c-0.9-0.7-1.8-1.4-2.6-2.1\n          c-0.4-0.4-0.8-0.7-1.2-1c2.4-1.1,4.5-3.1,5.6-5.4c2.5-5.1,1.8-11,0.8-16.6c-1.6-8.7-4.1-17.6-9.8-24.5c-5.6-6.9-15-11.3-23.5-8.9\n          c-9.2,2.6-14.9,12.4-15.5,21.9c-0.6,9.5,3,18.8,7.2,27.4c1,2.1,2.1,4.3,2.2,6.7c0,2.1-0.8,4.2-1.5,6.2c-3.5,9.5-4.8,19.7-4.1,29.8\n          c0.4,4.9,2.8,10.8,6.5,13.2c-0.6,0.6-1.2,1.5-1.8,2.1c-1.2,1.2-2.5,2.3-3.6,3.6c-5,4.6-6.7,12.7-7.1,19.9\n          c-0.5,8.9-0.8,18.9-7.3,24.9c-9.4,8.5-15.3,20.7-16.3,33.3c-0.4,4.8-0.9,10.9-5.5,12.3c-16.4,5.2-26.6,24.8-21.3,41.2\n          c-8.6-1-20.5,0.4-21.6,9c-0.4,3.3,1.1,6.5,0.9,9.8c-0.1,2.3-1.9,4.8-4,5.4c-1.4-1.1-2.7-2.2-4.5-2.8c-1.3-0.4-1.7-0.9-2.4-1.7\n          c0.1,0,0.2,0,0.3,0.1c-1.4-4.1-8-3.8-10.7-0.3c-2.7,3.4-2.7,8.2-2.9,12.5c-0.2,4.4-1,9.2-4.5,11.8c-2.2-4.9-4.5-10-8.7-13.3\n          S238,632,234,635.6c-5.2,4.7-2.9,13.6-6.3,19.8c-4.4-1.8-5.7-7.3-7-11.9c-1.3-4.6-4.6-9.9-9.4-9.1c-2.6,0.4-4.4,2.6-6.1,4.6\n          c-4.8,5.8-9.5,11.6-14.3,17.4c-4.6-9,3.5-22.7-4.5-29c-6.7-5.2-15.8,1.6-21.4,7.9c1-5.8,2.1-11.8,0.3-17.4\n          c-1.8-5.6-7.4-10.4-13.1-9.2c-5.6,1.2-8.2-6.7-8.1-12.4c0.1-4.8-0.7-11.1-4.4-13.2c-1.3-1.9-2.7-3.8-4-5.7c-1.7-2.5-3.2-4.2-6-5.6\n          c0,0-0.1,0-0.1,0c-3.4-2.8-7.7-4.4-12-4.4c3.2-16.9-5.5-35.3-20.6-43.5c4.2-10.4,2.9-22.8-3-32.3c-3.1-5.8-7.1-11.1-12.4-14.8\n          c3.8-12.1,5.3-24.8,4.6-37.5c-0.2-2.9-0.8-6.2-2.4-8.6c-0.4-1.2-1-2.3-1.9-3.1c-1.1-0.9-2.6-1.6-4.1-2.1c1.1-0.7,2.1-1.6,2.9-2.6\n          c3-3.6,4.3-8.2,5.4-12.7c2.4-9.5,4.5-19.9,0.6-28.9c-3.2-7.3-10.3-12.7-18.2-13.8s-16.2,2.2-21.3,8.3c-4.6,5.6-6.4,13.1-7.9,20.2\n          c-2.1,9.3-3.3,20.9,4.5,26.4c2,1.4,1.7,4.7,0.3,6.7s-3.6,3.5-5.1,5.5c-2.6,3.6-2.5,8.5-2,13c1.5,12.7,5.6,25.1,11.8,36.3\n          c-0.4,0.7-0.9,1.3-1.2,2c-0.8,1.5-1,3.2-1.1,4.8c-0.8,3.2-0.2,6.9,0.5,10.2c3,14.2,8.1,30.9,21.9,35.3c-5,5.4-2.4,14,0.5,20.8\n          c2.7,6.4,5.5,12.9,10.3,18c4.8,5,12.1,8.3,18.7,6.4c-4,19.4,13.3,40,33,40.1c-1.1,2.1-2.1,4.2-3.1,6.4c-0.2,0.4-0.1,0.8,0.1,1.1\n          c-2.2,6.2,0.8,14.6,7.4,16.3c7.7,2,18.2-2.8,22.3,3.9c5.4,9,15.4,15,25.9,15.7c-0.2-0.2-0.5-0.3-0.7-0.5c1,0.1,2,0.2,3,0.2\n          c1.5,0.1,2.8,0.2,4.1-0.6c6.6,5.3,15.8,7.3,24,5.3c2.2,0,4.3,0.2,6.5-0.2c2.3-0.4,4.4-1,6.3-2.3c8.3,3.6,18.2,3.2,26.2-1\n          c0.3-0.1,0.5-0.1,0.8-0.2c1.3-0.3,2.5-0.6,3.5-1.5c0.2-0.2,0.3-0.5,0.3-0.7c1.2-0.9,2.3-1.8,3.5-2.7c13.1,6.3,31.1-2.4,34.2-16.7\n          c7.4,3.6,17.1,1.8,22.7-4.2c5.6-6,6.8-15.8,2.7-22.9c19.4-1.8,35.2-21.6,32.6-40.9c21.2-5.9,36-29.1,32.3-50.8\n          c9.8-4.6,14.6-15.7,18.6-25.8c3.1-7.9,5.7-17.9-0.4-23.8C399.1,470.9,404,462.6,407.7,456.5z M40.6,410c-1-1.9-0.5-4.3,0-6.4\n          c1.1-4.4,2.2-8.8,3.3-13.2c1.5-5.8,3.3-12.1,8.1-15.6c1.4-1,2.9-1.7,4.5-2.2c7.1-2.5,15.4-1.7,21.5,2.7c6.1,4.4,9.5,12.5,7.6,19.7\n          c-1.5,6-0.9,12.3-2.8,18.2c-1.9,5.8-7.9,11.3-13.7,9.2c-7.2-2.5-16.2,4.1-22.4-0.4C43.1,419.3,42.8,414,40.6,410z M45.6,471.3\n          c-1.3-5-2.5-10.1-3.8-15.1c-1-3.8-1.9-7.7-1.8-11.6c0.3-6.5,3.9-12.8,9.5-16.3c5.5-3.5,12.8-4,18.8-1.5c2.1,0.9,4.5,0.8,6.7,0\n          c1.8,0.3,3.9,1,5.3,2c3.9,11.8,4.2,24.7,1,36.6c-0.6,2.2-1.4,4.6-3.2,6c-1.5,1.3-3.5,1.7-5.5,2.1c-6.8,1.5-13.7,3-20.5,4.5\n          C48.6,479,46.5,474.7,45.6,471.3z M63.2,530c-3.3-1.7-5.2-5.3-6.6-8.7c-4.3-9.8-7-20.3-8.1-31c0.1-1,0.2-2.1,0.7-3\n          c0.4-0.9,1.1-1.7,1.6-2.6c0.2-0.1,0.4-0.1,0.6-0.3c0.4-0.2,0.5-0.6,0.4-1c8-4.9,17.7-7.1,27-6.1c0,0,0,0,0,0\n          c7.9,4.7,12.8,13.2,16.4,21.4c0,0.1,0.1,0.2,0.2,0.2c0.9,3.1,1.4,6.2,1.3,9.4c-0.1,7.2-4.2,14.8-11.1,16.8\n          C78,527.3,70.2,533.6,63.2,530z M89.1,577.8c-6.7-1.7-10.3-8.7-13.2-15c-1.4-3-2.7-6.1-4.1-9.1c-1.7-3.8-3.4-7.8-2.7-11.9\n          c0.7-3.9,3.5-7.2,6.9-9.3c3.4-2.1,7.2-3.2,11-4.3c2.1-0.6,4.3-1.2,6.5-1.1c4,0.2,7.5,2.6,10.3,5.4c6.6,6.5,10.6,15.4,11.1,24.6\n          c0.1,2.6,0,5.2-1.1,7.5c-1.3,2.7-3.8,4.5-6.1,6.3C102.3,575.2,95.8,579.5,89.1,577.8z M120.8,616.5c-7.1-1.9-12.8-7.5-16.2-14\n          c-3-5.7-4.5-12.3-3-18.6c1.5-6.2,6.4-11.8,12.7-13c6.2-1.2,12.2,1.8,17.6,5.1c1.1,1.2,2.1,2.6,3.1,4.1c1.2,1.7,2.3,3.4,3.5,5\n          c3.6,8,6.2,17.3,1.6,24.6C136.4,615.9,127.9,618.4,120.8,616.5z M150.4,642.4c-5.6,2-12.3,1.4-16.7-2.6c-3-2.7-4.5-7-3.9-10.9\n          c0,0,0,0,0,0c1.3-2.7,2.6-5.4,4-8c3.6-4.3,7.6-8.8,13.1-9.8c7.7-1.5,15.6,5.5,16.1,13.3C163.7,632.3,157.9,639.8,150.4,642.4z\n           M184.5,662.6c-1.6-0.1-3.2-0.3-4.8-0.4c-5.9-3.9-11.8-7.7-17.6-11.6c-1.4-0.9-3-2-3.4-3.7c-0.6-2.6,1.7-4.8,3.8-6.4\n          c3.9-2.9,7.8-5.9,11.7-8.8c2.2-1.7,4.7-3.4,7.5-3c4.8,0.7,6,7.1,6,12c0,7.1,0,14.1,0.1,21.2c0.3,0.3,0.6,0.6,0.9,0.9\n          C187.4,663,185.8,662.7,184.5,662.6z M212.9,667.5C212.9,667.5,212.8,667.5,212.9,667.5c-7.3-0.3-14.5-2.1-21-5.4\n          c4.7-8,10.1-15.6,16.1-22.7c0.9-1,2-2.2,3.3-2.1c1.3,0,2.4,1.2,3.2,2.3c5.6,7.7,9.2,16.8,10.3,26.3c0.1,0,0.1,0.1,0.2,0.1\n          C221.2,667.9,217.1,667.3,212.9,667.5z M257.1,662.6c-0.3-0.1-0.6,0-0.9,0.2c-1,0.9-2.6,1-3.8,1.3c-0.4,0.1-0.8,0.3-1.3,0.4\n          l-12.4,1c-3.6,0.3-8.3-0.1-9.4-3.5c-0.6-1.7,0.1-3.6,0.7-5.3c1.7-4.7,3.5-9.5,5.2-14.2c1.3-3.6,4-7.9,7.7-6.9\n          c1.4,0.4,2.5,1.5,3.4,2.6C252.6,645.1,259.2,654,257.1,662.6z M366.7,407.2c-2.7-7.6-5.5-15.8-3.5-23.6c0.6-2.6,1.8-5.1,2.1-7.7\n          c0.4-3.1,2.8-5.8,5.7-7.2c2.8-1.4,6.1-1.8,9.3-1.8c5.7,0,11.8,1.4,15.8,5.4c5.1,5.2,5.6,13.2,7.5,20.3c0.9,3.4,2.2,6.7,2.8,10.2\n          s0.2,7.3-1.9,10.1c-2.1,2.8-6.3,4.2-9.3,2.3c-7-4.4-17.3,4.1-24-0.7C368.8,412.8,367.7,409.9,366.7,407.2z M368.9,463.2\n          c-1.7-1.9-2-4.6-2.2-7.2c-0.8-9.6-1.5-19.8,2.9-28.3s15.9-14.2,24-9c1.8,1.2,4,1.4,6.1,0.9c1.4,1.1,2.5,2.3,3.9,3.3\n          c1.5,1.1,3.2,2.9,3.4,4.8c0.1,0.4,0.3,0.7,0.6,0.8c3.2,9.3-0.5,21.4-4.7,31.2c-1.8,4.2-6.5,9.1-9.8,6\n          C386.9,460.1,374.5,469.6,368.9,463.2z M285,655.6c-4.7,3.2-10.7,3.7-16.3,4.2c-1.5,0.1-3.2,0.2-4.5-0.7c-1.9-1.4-1.7-4.2-1.3-6.5\n          c1.3-8.2,2.6-16.5,3.8-24.7c1.6-1.4,3.7-2.3,5.8-2.5c1.3,0.9,1.7,2.6,3.2,3.3c0.9,0.5,2,0.5,2.9,1c0.5,0.3,1.1,0.7,1.6,1.1\n          c1.7,4.1,7.2,6,9.6,9.9C292.6,645.7,289.7,652.4,285,655.6z M311.4,641.3c-7.7,3.9-18.2,0.5-22.1-7.2c-0.7-1.4-0.8-3.1-0.8-4.6\n          c0-2.8-0.1-5.5-0.1-8.3c-0.1-3.2,0-6.6,1.9-9.1c2.2-2.7,6-3.5,9.5-3.4c7.5,0.2,15.3,3.8,18.8,10.5\n          C322.5,626.9,319,637.4,311.4,641.3z M349.8,590.1c-3.7,7.8-8.6,15.5-16.2,19.6c-7.6,4.1-18.5,3.1-23.2-4.2\n          c-3-4.6-3-10.6-1.5-15.8c2.3-8.3,7.9-15.7,15.4-20c2.7-1.6,5.7-2.8,8.8-2.6c3.9,0.2,7.4,2.6,10.6,4.8c3.6,2.6,7.6,5.7,8.1,10.1\n          C352.1,584.8,351,587.5,349.8,590.1z M382.6,543c-1.9,4.3-4.8,8.1-7.3,12.1c-3.4,5.4-6.2,11.7-11.8,14.7c-6.2,3.2-13.8,1.4-19.9-2\n          c-3.5-2-6.9-4.7-8-8.6c-1.1-3.9,0.5-8.1,2-11.9c1.8-4.4,3.6-8.8,5.4-13.3c2.8-7,6.6-14.8,13.9-16.7c6.1-1.5,12.2,1.8,17.6,5\n          c3.1,1.9,6.4,3.9,8.2,7C385.1,533.4,384.5,538.7,382.6,543z M397.9,508c-2.4,4.8-5.1,10-10,12.1c-5.6,2.4-12,0-17.6-2.4\n          c-8-3.4-11.8-13.2-11-21.9c0.7-7.7,4.2-14.8,7.9-21.7c0.5-0.5,1-0.9,1.5-1.4c0.5-0.5,1.1-1,1.5-1.5c0.2-0.2,1.1-1.6,1.3-1.6\n          c0.3,0.1,0.5,0,0.7-0.1c1,0.2,2.1,0.2,3.2-0.2c8.8-2.8,19.7-1.8,25.3,5.5C407.9,484.2,403,497.5,397.9,508z\" />\n                  <path id=\"XMLID_183_\" fill=\"#010101\" d=\"M378.3,306.7c1.2,0.4,1.9,1.7,1.7,2.9c-1.9,0.2-3.7-1.6-3.6-3.4c0.5-0.6,1.6-0.3,1.8,0.4\n          L378.3,306.7z\" />\n                  <path id=\"XMLID_177_\" fill=\"#010101\" d=\"M358.7,536.6c0.7,2.3,2.4,4.2,4.7,5.2c3.3-3,6.9-6.1,11.4-6.2c-1.9,3.5-5.3,6.2-9.1,7.1\n          c-3.2,0.8-4.9,4.6-4.4,7.9c0.5,3.3,2.6,6.1,4.6,8.7c-1.2,1.5-3.5-0.3-4.4-2c-0.9-1.7-2.9-3.7-4.3-2.4c-1.2-2.8,1.5-5.7,1.7-8.7\n          c0.3-4.4-4.6-8.2-3.5-12.4c0.5-0.8,1.8-0.5,2.4,0.2S358.5,535.7,358.7,536.6z\" />\n                  <path id=\"XMLID_176_\" fill=\"#010101\" d=\"M63.1,270.1c-1.4-0.5-2.4-2.1-2.2-3.6c0.2-1.5,1.5-2.9,3-3.1c-0.2,2.2-0.5,4.4-0.9,6.7\n          L63.1,270.1z\" />\n                  <path id=\"XMLID_175_\" fill=\"#010101\" d=\"M320.6,597.9c-0.2-1-0.3-1.9-0.5-2.9c1.7-0.7,3.5,0.6,5.3,0.9c3.5,0.6,6.7-2.8,7.3-6.3\n          s-0.8-7-2.1-10.3c0.6-0.1,1.2-0.2,1.7-0.3c5.3,5.5,4,15.7-2.4,19.8c-0.6,0.4-1.3,0.8-2.1,0.8C325.4,599.9,323,596.8,320.6,597.9z\" />\n                  <path id=\"XMLID_174_\" fill=\"#010101\" d=\"M119.7,592.5c2.5-1.5,6.2-0.5,7.6,2.1C124.7,595.7,121.3,594.8,119.7,592.5z\" />\n                  <path id=\"XMLID_172_\" fill=\"#010101\" d=\"M389.2,304.3c1.4-0.6,2.6,1.8,1.7,3c-1,1.3-2.7,1.4-4.3,1.5c-0.6-1.8,0.9-3.9,2.8-4\n          L389.2,304.3z\" />\n                  <path id=\"XMLID_167_\" fill=\"#010101\" d=\"M97.4,545.2c-0.7,1.1-1.4,2.1-2.1,3.2c-0.8,0.8-2.3-0.3-2.3-1.4c0-1.1,0.9-2.1,1.7-2.9\n          c0.9-0.9,1.8-1.8,2.7-2.7C98.3,542.4,98.3,544.2,97.4,545.2L97.4,545.2z\" />\n                  <path id=\"XMLID_165_\" fill=\"#010101\" d=\"M58.9,456c-0.1-1.2-0.3-2.3-0.4-3.5c0.7-0.1,1.5-0.2,2.2-0.3c-0.4,1.4,0.2,2.9,0.8,4.3\n          c0.6,1.4,1.2,2.9,0.7,4.3c-0.5,1.4-2.6,2.1-3.5,0.9C58.4,459.7,58.5,457.8,58.9,456L58.9,456z\" />\n                  <path id=\"XMLID_163_\" fill=\"#010101\" d=\"M59,444.6c-0.2-1.4,1.6-2.4,2.9-1.8c1.2,0.6,1.6,2.4,1,3.6c-0.6,1.3-2,2-3.3,2.3\n          c-2,0.3-3.2-3.1-1.4-4.1L59,444.6z\" />\n                  <path id=\"XMLID_162_\" fill=\"#010101\" d=\"M378.1,510.6c0.5-3.6,0-7.3-1.3-10.7c1.9,1.7,4.9,1.8,7,0.3c2-1.5,2.8-4.5,1.7-6.8\n          c2.9,1,5.9,1.8,8.9,2.3c-6,3.6-12.5,8-13.6,14.8C379.9,510.6,379,510.6,378.1,510.6z\" />\n                  <path id=\"XMLID_161_\" fill=\"#010101\" d=\"M66.5,229c0.7,1.9,1.4,3.8,2.1,5.7c-0.7,0.2-1.4,0.3-2.1,0.5c-1-2.7-2.1-5.4-3.1-8.1\n          C64.3,226,65.9,227.6,66.5,229z\" />\n                  <path id=\"XMLID_157_\" fill=\"#010101\" d=\"M373.1,216.3c1.2-2.9,3.1-5.5,5.5-7.5c0.8,0,1.6,0,2.4,0\n          C379.5,212.4,377,216.7,373.1,216.3z\" />\n                  <path id=\"XMLID_154_\" fill=\"#010101\" d=\"M63.1,219.6c-0.2,2.4-1.4,4.6-3.4,6c-1.2-0.9-0.8-2.8-0.3-4.2c1-2.8,2-5.6,3.1-8.3\n          C64.3,214.7,64.6,217.8,63.1,219.6L63.1,219.6z\" />\n                  <path id=\"XMLID_150_\" fill=\"#010101\" d=\"M91.9,552.9c2.1,0.3,4.5,0.9,5.6,2.7c1.1,1.8-0.7,5-2.7,4c-1.9-2.4-3.9-4.8-5.8-7.2\n          C90,552.6,91,552.8,91.9,552.9z\" />\n                  <path id=\"XMLID_148_\" fill=\"#010101\" d=\"M111.7,137.3c-3.4,0.7-6.9,0.6-10.2-0.3c-1.3-1.3-1.6-3.5-0.6-5c1.3,2,3.7,3.3,6,3.2\n          c1,0,2.1-0.3,3.1-0.1C111.1,135.3,112,136.3,111.7,137.3L111.7,137.3z\" />\n                  <path id=\"XMLID_129_\" fill=\"#010101\" d=\"M102.5,140.9c-0.4,1.9-1,3.7-1.8,5.4c-2.4,0.3-4.7,0.6-7.1,0.9c2.5-2.7,4.9-5.4,7.4-8\n          c0.2-0.5,1.1-0.5,1.4,0C102.7,139.6,102.6,140.3,102.5,140.9z\" />\n                  <path id=\"XMLID_119_\" fill=\"#010101\" d=\"M262.1,54.8c-4.1-0.8-8.2-2.1-12.1-3.7c-0.5-0.2-0.9-0.8-1-1.4\n          C253.8,47.6,259.9,50,262.1,54.8z\" />\n                  <path id=\"XMLID_117_\" fill=\"#010101\" d=\"M359.4,184.9c2.1-2.4,4.2-4.8,6.3-7.2c0.1,4.3-2.2,8.6-5.9,10.8c-0.8,0.3-1.6-0.6-1.6-1.4\n          C358.3,186.2,358.9,185.5,359.4,184.9z\" />\n                  <path id=\"XMLID_97_\" fill=\"#010101\" d=\"M77.7,167c1.7,0.3,3,1.6,4.3,2.8c2,1.9,4,3.8,6,5.8c-3.1,0.1-5.4,2.7-7.5,4.9\n          c-2.1,2.2-5,4.4-8,3.6c-0.1-0.7-0.2-1.5-0.3-2.2c3.3-0.2,6.5-2.5,7.6-5.6C81,173.1,80.1,169.3,77.7,167z\" />\n                  <path id=\"XMLID_67_\" fill=\"#010101\" d=\"M201.2,50.3c-6.4,2.4-13.2,3.8-20.1,4.1C186.6,49.8,194.4,48.2,201.2,50.3z\" />\n                  <path id=\"XMLID_60_\" fill=\"#010101\" d=\"M391.5,280.2c-1.3-2.9-4.6-4.4-7.2-6.3c-2.6-1.9-5-5.3-3.6-8.2c0.5-1,1.4-1.8,2-2.7\n          c1.1-1.5,1.7-3.3,1.6-5.1c1.3,1.2,1.6,3.3,1.3,5.1c-0.3,1.8-1,3.5-1.1,5.3c-0.2,1.8,0.3,3.9,1.9,4.8c1.5,1,4.1,0,4.1-1.8\n          C391.7,274.1,392.1,277.3,391.5,280.2z\" />\n                  <path id=\"XMLID_49_\" fill=\"#010101\" d=\"M70.8,209.5c1.2,2.9,2.5,5.9,3.7,8.8c0.3,0.7,0.6,1.4,0.5,2.1c-0.1,0.7-0.5,1.3-0.8,1.8\n          c-1.2,1.8-2.4,3.6-3.6,5.4c-1.4-0.3-1.7-2.2-1.2-3.5c0.5-1.3,1.6-2.4,2-3.7c0.9-3.6-3.4-7.1-2.2-10.6\n          C69.6,209.3,70.4,209.2,70.8,209.5z\" />\n                  <path id=\"XMLID_48_\" fill=\"#010101\" d=\"M292.7,71.3c-0.8-0.7-1.6-2.1-0.7-2.6c4.8,1.5,9,4.8,11.6,9.1c-0.4,0.6-1.1,1-1.8,1.1\n          C298.8,76.3,295.7,73.8,292.7,71.3z\" />\n                  <path id=\"XMLID_46_\" fill=\"#010101\" d=\"M382.4,441.6c-0.7-0.5-1.3-1.3-1.4-2.1c3.8-1.8,5.5-6.9,3.7-10.6c1.3-0.9,2.4,1.3,3.6,2.3\n          c1.7,1.6,4.4,0.7,6.3-0.4c2-1.2,4.1-2.6,6.3-2.1c-0.8,3-3.7,5.3-6.8,5.4c-2.8,0.1-5.1,3.1-4.5,5.8\n          C387.5,438,383.5,438.9,382.4,441.6z\" />\n                  <path id=\"XMLID_44_\" fill=\"#010101\" d=\"M366.5,164.1c-0.4,1.3-0.7,2.6-1.4,3.8c-2.4,4.5-8.6,6.6-13.2,4.3\n          c2.9-3.2,9.5-1.5,11.4-5.4c0.4-0.8,0.5-1.7,1-2.4S366,163.5,366.5,164.1z\" />\n                  <path id=\"XMLID_43_\" fill=\"#010101\" d=\"M392.5,251.6c-1.6,3-0.8,7.1,1.9,9.3c1.4,1.2,1.9,3.3,1.2,5c-0.8,1.7-2.8,2.7-4.6,2.3\n          c1.3-2.6,1.3-5.9,0.1-8.6c-0.8-1.8-2.2-3.4-2.3-5.3C388.7,252.4,391,250.3,392.5,251.6z\" />\n                  <path id=\"XMLID_39_\" fill=\"#010101\" d=\"M370.9,231.8c1.5-4.6,5.7-8.2,10.5-8.9c1.6-0.2,4,0.9,3.2,2.4\n          C380.1,227.5,375.5,229.6,370.9,231.8z\" />\n                  <path id=\"XMLID_35_\" fill=\"#010101\" d=\"M385,401c0.2-3.3-2-6.6-5.1-7.7c-0.9-0.3-2-0.5-2.8-1.1c-0.8-0.6-1.3-1.8-0.6-2.6\n          c4.7-0.4,9.5,2.4,11.5,6.7c0.6,1.2,0.9,2.7,0.3,3.9C387.7,401.5,385.9,402,385,401z\" />\n                  <path id=\"XMLID_66_\" fill=\"#010101\" d=\"M408.9,285.8c7.9-15.8,6-38.2-9.1-47.3c7.5-16.1,2.5-37.1-11.5-48.1\n          c-2.6-15.9-11.2-30.8-23.7-41.1c-3.5-2.9-3.3-8.2-3.9-12.7c-0.3-2.2-1.3-4.7-2.7-6.4c0,0,0-0.1-0.1-0.1c-0.7-1.1-1.7-2-2.6-2.8\n          c-1.4-2-3.1-4-5-5.3c-0.4-0.3-0.8-0.5-1.3-0.8c0.1,0,0.3,0,0.4,0c-0.4-0.2-0.8-0.3-1.2-0.5c-0.8-0.4-1.7-0.8-2.4-1.4\n          c-1.1-0.7-1.9-1.1-2.9-1.1c-1.4-0.8-2.7-1.8-3.8-3c-2.7-3-3.9-7.8-1.4-11c4-5.3,0.2-13.6-5.8-16.5s-13.1-2.1-19.7-1.2\n          c3.3-3.9,3.4-9.8,1.4-14.5c-2.1-4.7-6-8.3-10.2-11.2c-8.1-5.6-17.6-9.1-27.4-10c-2.4-1.7-4.3-3.7-6.5-5.4c-2.5-1.9-5.6-3-8.4-4.3\n          c-0.1,0-0.1,0-0.2,0c-12.1-6.2-27.1-6.6-39.4-0.7c-4.2,2-9-0.1-13.5-1.3c-14.4-4-31,2.2-39.3,14.6c-15.1-3.5-32.1,5.4-37.9,19.8\n          c-1.4,3.4-3.4,7.8-7,7.1c-6.8-1.2-13.3,4.4-15.5,11c-2.2,6.6-1,13.7,0.4,20.5c0.6,2.8-3.4,4-6.2,4.4c-13.6,2-24.2,16.2-22.3,29.8\n          c0.4,2.5,0.9,5.6-1,7.2c-8,6.9-16.4,14.4-19.6,24.5c-1.8,5.7-1.1,12.4,1.7,17.5c0,0-0.1,0-0.1,0.1c-1,0.7-2.1,1.4-3.1,2\n          c-0.4,0.2-0.7,0.5-1.1,0.7c-6.1,0.9-10.5,7.4-11.6,13.7c-1.2,6.9,0.3,14.1-0.4,21.1c-1,10.4-6.6,19.8-9.9,29.7\n          c-3.3,9.9-3.8,22.3,3.8,29.5c-3.6,2.2-6.3,5.9-7.2,10c-0.2,0.2-0.2,0.4-0.3,0.6c-0.2,0.2-0.3,0.4-0.3,0.7c0,2.3,0,4.6,0.8,6.8\n          c0.3,6.8,3.2,13.5,7.8,18.5c0.2,0.5,0.4,0.9,0.7,1.3c0,0,0,0,0,0c1.5,2.6,3.5,4.6,6.1,6.4c2,1.4,4,3.3,6.1,4.7\n          c4.3,4.6,12.1,5.7,18,3c7-3.2,11.5-10.5,13.2-18.1s1-15.4,0.3-23.1c-0.4-4.3-0.7-8.5-1.1-12.8c1.8-2.6,3.1-5.5,4-8.5\n          c0.3-0.7,0.6-1.3,0.8-2c0.4-1.5,0.6-3.2,1-4.7c0.2-0.7,0.3-1.3,0.3-2c3.4-9.7-9.3-22.2-2.6-30.3c8.7-10.4,12.1-25,9-38.2l2-1.8\n          c0.9-0.3,1.7-0.8,2.4-1.6c1-1.2,2.3-2,3.3-3.3c0.6-0.8,1.1-1.6,1.5-2.4c0.5-0.5,1-1,1.5-1.6c0-0.1,0.1-0.1,0.1-0.2\n          c3.6-3.1,4.9-9.4,4.8-14.6c-0.2-7-0.1-15.7,6.2-18.7c11.4-5.6,16.9-21,11.4-32.5c6.1-0.7,12.5-2.7,16.2-7.6\n          c6.6-8.8,1.2-21.2-4.3-30.7c9.3,2.2,16.2,12.8,25.7,11.6c6.5-0.8,11.1-7.3,11.9-13.7s-1.1-13-3.1-19.2c8.3,4.9,11.6,17,21,19.4\n          c6.8,1.8,13.9-2.8,17.4-8.9c3.5-6.1,4.2-13.3,4.9-20.3c5.4,3.6,7,10.6,9,16.7c2,6.1,6,12.9,12.4,13.3c4.8,0.4,9-3,12.5-6.3\n          c5.5-5.4,10.6-11.3,14.9-17.7c3,5.6,1.5,12.3,1,18.6c-0.4,6.3,1.2,13.9,7.2,16.1c7.7,2.7,14.8-6,23-6.9c-3,7.9-7.4,16.3-4.6,24.2\n          c2.5,7.1,10.3,11.1,17.8,11.1c-0.7,0.9-1.3,1.9-1.5,3c-0.4,1.8-0.1,3.8-0.1,5.6c0,0.1,0,0.3,0.1,0.4c-1,9.7,7,19.7,16,25\n          c3.6,2.1,8,5.4,6.6,9.2c-2.5,6.8-1,14.8,3.5,20.4c0.3,2.7,2.6,5.2,4.3,7.2c1.5,1.8,3.2,3.4,5.2,4.5c0.5,1,1,2.1,1.5,3.1\n          c-1.2,1.6-1.1,4.2-0.9,6c0.1,1.3,0.3,2.7,0.7,3.9c0.4,1.1,1.1,2,1.5,3.2c1.5,6.7,4,13.2,7.3,19.1c1.3,2.3,2.8,4.8,2.3,7.5\n          c-2.5,14-1.1,28.8,4.1,42c1.6,4.1-0.5,8.6-2.4,12.6c-2.8,5.6-5.4,11.5-6.1,17.7c-0.7,6.2,0.7,13,5.2,17.4\n          c5.3,5.3,13.3,6.2,20.7,6.7c3.7,0.2,7.4,0.4,10.9-0.7c8-2.5,12.5-10.9,16.1-18.5c4.2-8.8,8.1-20,1.9-27.5\n          C405.4,293.1,407.3,289,408.9,285.8z M73.7,338.6c-5.9,4.3-13.9,3.3-21,1c-1.7-1.2-3.4-2.8-5-3.9c-3-2.1-5.4-4.3-6.9-7.7\n          c-0.1-0.2-0.2-0.3-0.3-0.3c-0.3-0.7-0.5-1.5-0.8-2.2c-2.2-5.4-4.3-10.8-6.5-16.2c-0.1-0.2-0.2-0.3-0.3-0.5c-0.4-1.6-0.4-3.3-0.3-5\n          c0.2-0.2,0.2-0.5,0.2-0.7c2.2-2.7,4.5-5.4,6.7-8.1c11.8-0.5,23.7-1,35.5-1.6c1.5-0.1,3.2-0.1,4.3,0.8c1.5,1.2,1.7,3.4,1.7,5.3\n          c0,5.1,0.1,10.3,0.1,15.4C81.2,323.6,80.6,333.5,73.7,338.6z M84.1,260.4c0.5,4.1,0.4,8.7,2.4,12.1c0.2,2.1-0.8,4.8-1.3,6.7\n          c-0.4,1.7-1.8,4.2-3,5.3c-0.1,0.1-0.1,0.1-0.1,0.2c-5.9,4.8-15.2,6.3-23.2,7c-8.3,0.7-18.8,0.2-22.4-7.3\n          c-1.8-3.6-1.3-7.9-0.8-11.9c1.2-9.5,2.9-19.9,10.3-26c8.5,5.4,19.2,7.1,29,4.6C79.7,249.7,83.5,255.5,84.1,260.4z M93,214.7\n          c-0.7,12.3-5.3,25.3-15.8,31.7c-10.5,6.4-27.2,2.5-30.3-9.4c-3.3-12.5,0.2-26.5,8.9-36.1c0.9-0.3,1.6-0.8,2.4-1.3\n          c1.2-0.7,2.4-1.5,3.6-2.3c0.1,0,0.1-0.1,0.1-0.1c2.2,3.2,5.3,5.6,9.2,6.4c7.5,1.6,18-1.8,21.3,5.2C93.2,210.6,93.1,212.7,93,214.7\n          z M102,194.9c-0.4,0.1-0.6,0.5-0.7,0.9c0,0,0,0,0,0.1c-0.7,0.7-1.3,1.4-2,2.1c-0.9,0.9-1.9,1.9-3,2.6c-0.5,0.3-1,0.4-1.5,0.6\n          c-4.2-0.2-8.4-0.4-12.5-0.7c-6.7-0.3-14.3-1.1-18.5-6.4c-6.7-8.4,0-20.5,6.6-29c3.2-4,7.5-8.5,12.5-7.4\n          c10.3,2.3,22.3,6.3,24.9,16.5C109.7,181.4,105.9,188.6,102,194.9z M123.9,148.8c-3.2,5.8-8,11.5-14.5,12.7\n          c-4.4,0.8-8.9-0.6-13.1-2c-3-1-6.1-2-8.5-4c-5.1-4.1-6.5-11.6-4.7-17.8c1.8-6.3,6.4-11.4,11.5-15.5c1.3-1.1,2.7-2.1,4.2-2.8\n          c5.1-2.4,11.8-1,15.5,3.2c2.1,2.4,5.7,2.8,8.3,4.5c3.3,2.2,5,6.4,4.9,10.4C127.4,141.5,125.8,145.3,123.9,148.8z M143,105\n          c0.8,3,1.6,6,1.4,9.1s-1.6,6.2-4.1,7.9c-2.5,1.7-5.6,1.8-8.6,1.8c-4,0.1-8.1,0.1-11.6-1.5c-4-1.8-6.9-5.6-8.4-9.8\n          c-1.5-4.1-1.7-8.6-1.6-13c0.2-4.3,0.8-9,3.8-12.2c4.7-5.2,13.5-4.5,19-0.1C138.3,91.4,141,98.3,143,105z M169.3,97.2\n          c-3.9,2.5-9.2,1.3-13.1-1.1s-7.3-5.7-11.5-7.8c-4.5-2.2-10.4-3.4-12.3-8c-2.2-5.1,2.2-10.6,6.5-14.1c2.3-1.9,4.8-3.6,7.3-5.2\n          c4.6-2.9,9.8-5.5,15.3-5.2s11,4.3,11.4,9.8c0.1,1.8-0.3,3.5-0.5,5.2c-0.4,4.6,1,9.2,1.4,13.9C174.3,89.4,173.2,94.7,169.3,97.2z\n           M215.9,55.6c-0.9,3.8-1.7,7.6-2.6,11.4c-0.9,4-1.8,8.1-4,11.6c-2.2,3.5-5.8,6.4-9.9,6.4c-5.8,0.1-10.2-4.9-13.8-9.5\n          c-4.6-5.9-9.2-12-11.4-19.2c-0.6-2-1-4.2-0.1-6.1c1-2.1,3.4-3.2,5.6-4c6.5-2.4,13.2-4.1,20-5c3.1-0.4,6.3-0.7,9.4,0.1\n          c3,0.8,5.9,2.8,7,5.7C217.1,49.8,216.5,52.8,215.9,55.6z M253.2,78.2c-2.8,3.4-6.1,7.1-10.5,7.4c-7.2,0.6-11.7-7.5-14.3-14.3\n          c-1.9-5-3.9-10.1-5.8-15.1c-1.4-3.6-2.7-7.7-0.9-11c2-3.9,7.2-4.9,11.6-5.1c9.6-0.4,19.3,0.9,28.5,3.6c2.6,1.2,5.4,2.4,7.4,4.3\n          c1,1,2,1.8,3,2.6C266.5,60.3,260.2,69.5,253.2,78.2z M285.7,94.2c-4.4,1.9-10.3,3.5-13.3-0.2c-1.7-2-1.8-5-1.7-7.6l0.4-23.8\n          c0.1-5.1,5.8-8.5,10.8-8.2c5,0.4,9.5,3.4,13.6,6.3c2.6,1.9,5.3,3.7,7.9,5.6c4.3,3,9,7.2,8.1,12.3c-0.8,4.4-5.5,6.9-9.7,8.6\n          C296.5,89.6,291.1,91.9,285.7,94.2z M305.4,123.7c-2.5-0.8-4.9-2.2-6.6-4.2c-4-4.9-3-12.1-0.9-18c1.7-4.8,4.3-9.8,9-11.6\n          c3.4-1.3,7.1-0.7,10.7-0.6c4,0.2,8-0.2,11.8,1.1c3.8,1.2,7.2,4.7,6.8,8.6c-0.8,7.5-4,14.8-9.7,19.8\n          C320.7,123.7,312.5,126,305.4,123.7z M322.8,157.1c-6-5.6-10.1-13.2-11.6-21.2c0-1.1,0-2.1,0-3.2c0.1-1.8,0.7-2.9,1.8-4.2\n          c0.2-0.2,0.2-0.4,0.2-0.6c8-0.9,15.2-5.7,21.2-11.1c1.9,1.1,3.9,2.1,6,2.8c3.1,1.8,6.6,3.6,9.3,5.9c0.7,0.6,1.2,1.4,1.9,2\n          c0.2,0.2,0.4,0.3,0.6,0.5c0,0,0,0,0,0c0.7,0.5,1.4,1,2,1.5c0.4,0.6,0.8,1.2,1.1,1.8c0.2,0.3,0.5,0.5,0.8,0.5\n          c3,4.4,3.6,10.5,1.6,15.5c-2.6,6.8-8.9,11.6-15.7,14.1c-3,1.1-6.1,1.7-9.3,1.3C329,162.1,325.6,159.8,322.8,157.1z M341.6,198.1\n          c-1-1.1-2.5-2.8-3.5-4.5l-0.8-2.2c0-0.1,0-0.1,0-0.2c0-0.3-0.1-0.5-0.3-0.7l-1.3-3.8c-1.6-4.7-3.3-9.8-1.5-14.5\n          c3.7-9.8,18.7-9.8,24.5-18.5c2.3-3.4,7.5-0.5,10.1,2.7c5.9,7.2,10.8,15.2,14.5,23.7c0.9,2,1.7,4.1,1.4,6.3c-0.5,4.3-5,6.8-9,8.6\n          c-10.1,4.6-21.5,9.2-31.8,5.3C343.1,199.7,342.3,198.9,341.6,198.1z M347.3,212.8c-0.2-1.5-0.2-3.3,0.2-4.5\n          c11.8-4.2,23.7-8.3,35.5-12.5c1.7-0.6,3.4-1.2,5.2-0.9c2.3,0.3,4.2,2.1,5.6,4c4.5,6.2,5.3,14.2,5.9,21.8\n          c0.4,5.3,0.7,11.2-2.7,15.2c-2.3,2.8-5.9,4.1-9.4,5.1c-5.9,1.7-12,2.8-18.2,3.3c-3.1,0.2-6.5,0.2-8.8-1.9\n          c-1.3-1.2-2.1-2.9-2.8-4.6C354.3,229.6,350.8,221.2,347.3,212.8z M360.8,269.5c-0.6-3.5-2-6.9-2.5-10.4s0.2-7.6,3-9.8\n          c1.9-1.4,4.3-1.8,6.6-2c8.9-0.7,18.5,0.3,25.9-4.8c3-2,7.2-0.5,9.8,2.1c7.1,6.8,6.6,18.1,5.7,27.9c-0.7,7.5-2.3,16.3-9.1,19.5\n          c-2.9,1.4-6.1,1.4-9.3,1.4c-3.8,0-7.6,0.1-11.4,0.1c-5.3,0-11.3-0.2-15-4.1C359.9,284.3,361.9,276.3,360.8,269.5z M402.2,323.4\n          c-2.2,4.8-4.6,9.9-9,12.8c-5.7,3.8-13.2,3-20,1.9c-4-0.7-8.1-1.4-11.6-3.6s-6.2-5.9-5.8-10c0.6-7.6,2.2-15.1,4.8-22.3\n          c0.9-2.4,2.1-5,4.5-6c1.7-0.7,3.6-0.3,5.4,0c9.6,1.7,19.4,1.4,28.9-0.6c1.3-0.3,2.7-0.6,4-0.3c2.4,0.7,3.6,3.4,4,5.9\n          C408.6,308.9,405.3,316.4,402.2,323.4z\" />\n                  <path id=\"XMLID_33_\" fill=\"#010101\" d=\"M79.4,509.8c0.8,0.4,0.3,1.7-0.6,1.9c-0.8,0.2-1.7-0.2-2.6-0.3c-3.9-0.5-6.7,4.6-10.6,4.6\n          c0-1.1,0.7-2,1.3-2.8c2-2.6,4-5.1,6-7.7C73.4,508.4,76.5,510.5,79.4,509.8z\" />\n                  <path id=\"XMLID_32_\" fill=\"#010101\" d=\"M64.9,501.7c0.4-2.9,0.9-5.8,1.3-8.7c0.2-1.2,0.5-2.6,1.7-3c2.3,3.5,6.6,5.5,10.8,5\n          c-1.9,2.6-6,1.8-9,0.7C69.5,498.5,67.5,501.1,64.9,501.7z\" />\n                  <path id=\"XMLID_30_\" fill=\"#010101\" d=\"M380.9,376.7c0.2-0.9,1.6-0.7,2.1,0.1s0.2,1.7,0.2,2.6c-0.3,4.6,4.5,8.7,9,7.8\n          c-0.7,1.9-2.6,3.2-4.6,3.2C383.2,387.4,380.5,382,380.9,376.7z\" />\n                  <path id=\"XMLID_25_\" fill=\"#010101\" d=\"M339.6,130.4c2.1,3.2,3.6,6.8,4.7,10.5c-4.2-1.5-9.2,2.8-8.3,7.2c-2-0.7-2.5-3.5-1.7-5.5\n          c0.8-2,2.3-3.6,3.3-5.5c1-1.9,1.3-4.5-0.2-5.9C338.1,130.9,338.8,130.7,339.6,130.4z\" />\n                  <path id=\"XMLID_21_\" fill=\"#010101\" d=\"M381.7,454.8c-1.1-0.5-0.7-2.4,0.4-3.1c1.1-0.7,2.4-0.7,3.5-1.3c3-1.5,3.3-5.5,3.2-8.8\n          c1.3-0.3,2.3,1.4,2.2,2.8c0,1.4-0.5,2.9,0.2,4c0.8,1.4,2.7,1.5,4.2,2c1.5,0.5,3.1,2.2,2.1,3.5\n          C392.5,451.9,386.5,452.2,381.7,454.8z\" />\n                  <path id=\"XMLID_20_\" fill=\"#010101\" d=\"M386.8,329.1c0.4-5-2.7-10.1-7.4-12.1c0.1-1.4,2.3-1,3.6-0.6c2.7,0.9,5.8,0.1,7.7-2\n          c1.2,0.2,1.1,2.1,0.3,3c-0.8,0.9-2.1,1.4-2.7,2.5c-0.9,1.7,0.4,3.6,1,5.4S388.4,330,386.8,329.1z\" />\n                  <path id=\"XMLID_19_\" fill=\"#010101\" d=\"M113.4,601.5c-0.9-0.8-0.7-2.2-0.4-3.3c0.4-2,0.8-4,1.2-5.9c0.9-4.5,3.8-8.6,7.7-10.9\n          c1,1.4,0.4,3.4-0.7,4.8s-2.5,2.5-3.3,4c-1,1.9-1,4.1-1.3,6.2C116.3,598.5,115.4,600.8,113.4,601.5z\" />\n                  <path id=\"XMLID_18_\" fill=\"#010101\" d=\"M388.3,481.6c-0.7,3-1.5,6.2-3.5,8.5c-2.1,2.3-5.9,3.4-8.4,1.5c5.6-2.1,9.5-8.1,9.2-14.1\n          c0.7-0.8,2.2-0.3,2.7,0.7C388.8,479.3,388.6,480.5,388.3,481.6z\" />\n                  <path id=\"XMLID_15_\" fill=\"#010101\" d=\"M155,66.8c1.3-0.8,3.7-1,3.7,0.5c-5.6,3.5-11.1,7-16.8,10.4c-1.6-1,0.1-3.4,1.7-4.3\n          C147.4,71.2,151.2,69,155,66.8z\" />\n                  <path id=\"XMLID_13_\" fill=\"#010101\" d=\"M56,411.5c-1.4-1.5,0.9-3.6,2.6-4.9c3.5-2.6,5.3-7.3,4.4-11.6c0.9-1,2.8-0.5,3.4,0.7\n          c0.6,1.2,0.4,2.7-0.1,4C64.7,404.8,60.8,409,56,411.5z\" />\n                  <path id=\"XMLID_7_\" fill=\"#010101\" d=\"M55,311.6c-1.1,2.8-3.7,4.9-6.7,5.5c2.3-2.7,3.9-6.1,4.5-9.7c2.3,0.8,4.7,1.6,7,2.4\n          c0.9,0.3,2.1,1.3,1.4,2c-1.2,1.4-0.2,3.6,0.4,5.3c0.7,1.8,0.4,4.5-1.5,4.6C59.7,317.9,57.8,314.3,55,311.6z\" />\n                  <path id=\"XMLID_6_\" fill=\"#010101\" d=\"M47.9,271.6c1.3-4.4,3-8.8,4.9-13c1.6,0.1,2.4,2.2,2,3.7c-0.4,1.6-1.5,2.9-2,4.4\n          c-0.6,1.5-0.3,3.6,1.1,4.2c2.7,1.1,4.3,4.2,3.8,7.1c-1,1-2.2-0.9-2.6-2.2C54.3,272.8,50.8,270.2,47.9,271.6z\" />\n               </g>\n            </g>\n         </svg>\n      </div>\n   );\n\n}\n\nexport default AdultTeethChart;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\UpdateContactForm.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\PatientCreateAppointmentModal.js",["284","285"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, DatePicker, Button } from 'antd';\n// import axios from 'axios';\nimport moment from 'moment';\n\n// const {Option} = Select;\n\n\n\nfunction PatientCreateAppointmentModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false,\n   });\n\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onCreate(values);\n         hideModal();\n      });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n\n   const disabledDateTime = () => {\n      return {\n         disabledHours: () => [0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23],\n      };\n   }\n\n\n\n\n\n   return (\n      <>\n         <Button onClick={showModal} type=\"primary\">Create New Appointment</Button>\n         <Modal\n            visible={state.visible}\n            title=\"Create a New Appointment\"\n            okText=\"Create\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit}\n               form={form}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Date and Time\" name=\"date_time\" rules={[{ required: true, message: 'Date and Time is required.' }]}>\n\n                        <DatePicker\n                           disabledTime={disabledDateTime}\n                           disabledDate={(current) => current && current < moment() || moment(current).day() === 0}\n                           placeholder=\"Select date and time\" style={{ width: '100%' }}\n                           showTime={\n                              {\n                                 use12Hours: true, format: 'h:mm',\n                                 defaultValue: moment('8:00', 'h:mm')\n                              }\n                           }\n                           format=\"MMMM DD, YYYY h:mm A\" />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Reason\" name=\"reason\" rules={[{ required: true, message: 'Reason is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n\n                  <Col span={24}>\n                     <Form.Item label=\"Reason\" name=\"reason\" rules={[{ required: true, message: 'Reason is required.' }]} initialValue={props.patientId}>\n\n                        <Input hidden />\n\n                     </Form.Item>\n                  </Col>\n\n\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\nexport default PatientCreateAppointmentModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js",["286","287"],"import React, { useState } from 'react';\nimport { Form, Modal, Row, Col, Input, Button, DatePicker, Select } from 'antd';\nimport moment from 'moment';\nimport { EditFilled } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nfunction UpdatePersonalInfoModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false\n   });\n\n   // state = {\n   //    visible: false\n   // };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onUpdate(props.patient.code, values);\n         hideModal();\n      });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n\n   const validateContactNumber = (rule, value, callback) => {\n\n      const myRegex = /^(09|\\+639)\\d{9}$/;\n\n      if (!value)\n         callback();\n      else if (isNaN(parseInt(value)) || (myRegex.exec(value) == null && (value.length < 11 || value.length > 11))) {\n         console.log(value.length);\n         callback('Invalid Contact Number');\n      }\n      else\n         callback();\n\n   }\n\n\n   return (\n      <>\n         <Button onClick={showModal} type=\"default\"><EditFilled /> Update Info</Button>\n         {/* <Modal\n            visible={state.visible}\n            title=\"Update Patient's Personal Info\"\n            okText=\"Update\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         > */}\n            <Form layout=\"vertical\" onSubmit={handleSubmit}\n               form={form}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Name\" initialValue={props.patient.name} name=\"name\" rules={[{ required: true, message: 'Name is required.' }]}>\n\n                        <Input />\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" initialValue={props.patient.address} name=\"address\" rules={[{ required: true, message: 'Address is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" initialValue={props.patient.birthday} name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Occupation\" initialValue={props.patient.occupation || ''} name=\"Occupation\">\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Civil Status\" initialValue={props.patient.civil_status || ''} name=\"civil_status\">\n\n                        <Select>\n                           <Option value=\"single\">Single</Option>\n                           <Option value=\"married\">Married</Option>\n                           <Option value=\"widowed\">Widowed</Option>\n                           <Option value=\"separated\">Separated</Option>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Contact Number\" initialValue={props.patient.contact_number || ''} name=\"contact_number\" rules={[{ validator: validateContactNumber }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         {/* </Modal> */}\n      </>\n   );\n\n}\n\nexport default UpdatePersonalInfoModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\ChildTeethChart.js",["288"],"import React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport DMFTPopover from './DMFTPopover';\nimport axios from 'axios';\n\nconst ChildTeethChart = (props) => {\n\n    const [values, setValues] = useState('');\n\n\n\n    const getChildTeethChart = async () => {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/childteeth/${props.patientId}/`,\n           \n        );\n        setValues(res.data);\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                getChildTeethChart();\n            } catch (err) { }\n        };\n\n        fetchData();\n    }, [props.user]);\n\n\n    const statusColor = (value) => {\n        switch (value) {\n            case 'Decayed':\n                return '#ffc53d';\n            case 'Missing':\n                return '#ff4d4f';\n            case 'Filled':\n                return '#40a9ff';\n            default:\n                return '#fff';\n        }\n    }\n\n\n    const onToothStatusChange = (toothPosition, value) => {\n        axios.patch(`${process.env.REACT_APP_API_URL}/childteeth/${props.patientId}/`, { [toothPosition]: value })\n            .then((response) => {\n                if (response.status === 200) {\n                    getChildTeethChart();\n                    return;\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                message.error('Something went wrong! Please, try again.');\n            });\n    }\n\n    return (\n        <div style={{ width: '400px', margin: '0 auto' }} className=\"tooth-chart\">\n\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 450 700\" enableBackground=\"new 0 0 450 700\" xmlSpace=\"preserve\">\n                <g className=\"toothLabels\">\n\n                    <text id=\"lblT\" transform=\"matrix(1 0 0 1 120.31 423.6409)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">T</text>\n                    <text id=\"lblS\" transform=\"matrix(1 0 0 1 130.7426 490.0023)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">S</text>\n                    <text id=\"lblR\" transform=\"matrix(1 0 0 1 160.5064 533.043)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">R</text>\n                    <text id=\"lblQ\" transform=\"matrix(1 0 0 1 180.0594 560.1663)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">Q</text>\n                    <text id=\"lblP\" transform=\"matrix(1 0 0 1 201.0274 564.6503)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">P</text>\n                    <text id=\"lblO\" transform=\"matrix(1 0 0 1 235.0002 564.6497)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">O</text>\n                    <text id=\"lblN\" transform=\"matrix(1 0 0 1 276.966 560.167)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"21px\">N</text>\n                    <text id=\"lblM\" transform=\"matrix(1 0 0 1 300.6497 533.0432)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">M</text>\n                    <text id=\"lblL\" transform=\"matrix(1 0 0 1 320.4584 490.002)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">L</text>\n                    <text id=\"lblK\" transform=\"matrix(1 0 0 1 335.6671 423.6405)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">K</text>\n\n                    <text id=\"lblJ\" transform=\"matrix(1 0 0 1 335.1867 278.9355)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">J</text>\n                    <text id=\"lblI\" transform=\"matrix(1 0 0 1 320.6669 224.1667)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">I</text>\n                    <text id=\"lblH\" transform=\"matrix(1 0 0 1 300.8936 185.2723)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">H</text>\n                    <text id=\"lblG\" transform=\"matrix(1 0 0 1 276.5099 160.1388)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">G</text>\n                    <text id=\"lblF\" transform=\"matrix(1 0 0 1 250.6667 151.667)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">F</text>\n                    <text id=\"lblE\" transform=\"matrix(1 0 0 1 210.0272 151.6668)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">E</text>\n                    <text id=\"lblD\" transform=\"matrix(1 0 0 1 180.0594 160.1387)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">D</text>\n                    <text id=\"lblC\" transform=\"matrix(1 0 0 1 160.1964 185.2724)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">C</text>\n                    <text id=\"lblB\" transform=\"matrix(1 0 0 1 130.5838 224.1666)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">B</text>\n                    <text id=\"lblA\" transform=\"matrix(1 0 0 1 120.31 278.9357)\" fontFamily=\"'Avenir-Heavy'\" fontSize=\"24px\">A</text>\n                </g>\n\n                {/* <g className=\"dtfmLabels\">\n                    <text id=\"txtToothT\" transform=\"matrix(1 0 0 1 1.0001 447.0915)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothS\" transform=\"matrix(1 0 0 1 23.3102 506.416)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothR\" transform=\"matrix(1 0 0 1 57.4898 569.9049)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothQ\" transform=\"matrix(1 0 0 1 109.3098 618.5447)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothP\" transform=\"matrix(1 0 0 1 173.8689 642.0117)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothO\" transform=\"matrix(1 0 0 1 236.6671 642.012)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothN\" transform=\"matrix(1 0 0 1 300.104 618.5447)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothM\" transform=\"matrix(1 0 0 1 358.7073 569.905)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothL\" transform=\"matrix(1 0 0 1 393.2542 506.4159)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothK\" transform=\"matrix(1 0 0 1 405.3402 447.0916)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothJ\" transform=\"matrix(1 0 0 1 411.0546 240.9981)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothI\" transform=\"matrix(1 0 0 1 390.5584 186.7916)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothH\" transform=\"matrix(1 0 0 1 362.0746 133.1618)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothG\" transform=\"matrix(1 0 0 1 314.9963 97.0455)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothF\" transform=\"matrix(1 0 0 1 236.6669 69.3723)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothE\" transform=\"matrix(1 0 0 1 173.869 69.3719)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothD\" transform=\"matrix(1 0 0 1 111.8719 90.5134)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothC\" transform=\"matrix(1 0 0 1 59.4649 141.1669)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothB\" transform=\"matrix(1 0 0 1 25.25 184.2726)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                    <text id=\"txtToothA\" transform=\"matrix(1 0 0 1 7.6667 247.2726)\" fontFamily=\"'MyriadPro-Regular'\" fontSize=\"16px\">DFM</text>\n                </g> */}\n\n                <g className=\"spots\">\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LR_T\" value={values.LR_T} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothT\" fill={statusColor(values.LR_T)} data-key=\"T\" points=\"65.7,373.5 74,375.2 82,380.8 86.3,384.8 90.3,390.2 92.7,395.8 93,404.8 93,416.8 \n                        93,424.5 94.3,432.2 95.7,438.5 94.7,444.2 92.3,450.2 89,453.5 77.7,456.5 68.7,460.5 64.3,461.2 54.7,456.5 48.3,450.2 42,442.2 \n                        36.3,425.2 33.3,407.8 34.3,399.5 36,392.8 39.7,383.5 47,377.2 57,373.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LR_S\" value={values.LR_S} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothS\" fill={statusColor(values.LR_S)} data-key=\"S\" points=\"93.7,456.2 82.7,455.8 70.7,460.8 66.3,467.2 63.7,474.2 62,487.2 63.3,500.2 \n                        66.3,509.5 70.3,517.2 76.3,524.8 85.3,531.2 93.3,534.8 102.3,535.8 109.3,534.5 119,529.8 121.7,521.2 122,510.2 120.7,502.8 \n                        114.3,484.5 108.7,470.8 103,462.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LR_R\" value={values.LR_R} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothR\" fill={statusColor(values.LR_R)} data-key=\"R\" points=\"129.3,532.2 137,535.2 142.7,541.2 146,548.8 147.7,557.8 144.7,565.2 136.7,570.5 \n                        123,573.8 113,574.2 105,572.8 101.3,564.8 103,551.2 107.3,541.2 111.3,535.5 124,531.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LR_Q\" value={values.LR_Q} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothQ\" fill={statusColor(values.LR_Q)} data-key=\"Q\" points=\"164.3,564.5 168.3,568.8 173,592.2 172,598.2 169.3,601.8 162,601.8 152,599.8 \n                        142.3,595.5 131,586.8 130.7,584.5 135,575.8 140.3,570.2 149.7,564.5 159,562.8 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LR_P\" value={values.LR_P} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothP\" fill={statusColor(values.LR_P)} data-key=\"P\" points=\"208,576.5 218,607.2 214,611.5 206.7,613.2 191,612.8 179,606.8 172.3,601.5 \n                        174,597.8 190.3,578.2 199.7,571.8 205.7,573.8 \t\" />\n                    </DMFTPopover>\n\n\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LL_O\" value={values.LL_O} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothO\" fill={statusColor(values.LL_O)} data-key=\"O\" points=\"244.3,574.2 235.7,575.2 230.7,581.8 225.7,593.5 221.7,604.5 220.3,609.8 224,613.5 \n                        234.3,615.5 248.7,613.8 258.7,610.8 264,606.2 265.3,598.8 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LL_N\" value={values.LL_N} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothN\" fill={statusColor(values.LL_N)} data-key=\"N\" points=\"306.3,575.8 298.7,569.2 289.7,566.2 280.7,564.2 275.3,566.8 272,572.2 268.7,583.8 \n                        267.3,593.2 266.3,599.2 266.7,603.8 270.7,607.8 276.3,608.8 286.7,605.2 300,597.5 307.7,590.5 309,583.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LL_M\" value={values.LL_M} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothM\" fill={statusColor(values.LL_M)} data-key=\"M\" points=\"335,532.2 341.7,546.5 343.3,562.8 339.7,570.5 331.7,573.5 309,572.5 302,569.2 \n                        298,564.5 299.7,548.2 303,539.5 307.3,531.8 315.3,525.2 321.3,525.2 325,525.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LL_L\" value={values.LL_L} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothL\" fill={statusColor(values.LL_L)} data-key=\"L\" points=\"354,450.2 365.7,453.8 377,459.5 384.3,469.2 385,481.5 382.7,491.8 369.7,517.8 \n                        357.3,527.8 340.7,532.2 331.7,528.5 324.3,523.5 321,515.2 320.7,504.2 325.3,489.5 330.3,470.2 335,460.5 343.7,453.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"LL_K\" value={values.LL_K} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothK\" fill={statusColor(values.LL_K)} data-key=\"K\" points=\"391.7,370.2 379,367.8 366.7,370.2 356.3,378.8 350.3,388.2 347.7,396.2 348,411.5 \n                        346.7,427.8 347.7,438.5 352,445.2 364.7,453.2 374.3,455.5 381.7,454.8 389.7,451.8 394.3,445.8 397.7,433.8 401.7,421.5 \n                        406.7,413.5 409.7,400.5 408.7,390.5 404.3,380.2 \t\" />\n                    </DMFTPopover>\n\n\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UL_J\" value={values.UL_J} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothJ\" fill={statusColor(values.UL_J)} data-key=\"J\" points=\"384.3,231.2 391.3,232.5 402.3,241.5 409,253.8 414.3,267.2 416,281.8 413.7,300.2 \n                        409.3,308.8 400.3,314.5 386,317.2 375,314.8 367.3,310.5 358.7,303.5 353.7,291.5 353.7,277.8 354.7,267.8 350.3,259.8 \n                        351.7,248.2 357.7,239.5 367.7,237.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UL_I\" value={values.UL_I} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothI\" fill={statusColor(values.UL_I)} data-key=\"I\" points=\"359.3,167.2 367.3,169.8 375.3,182.5 384,199.8 389.7,211.8 389.3,220.5 386,227.5 \n                        377.3,233.5 363.3,238.5 355.3,237.5 348.3,233.2 343.3,224.8 337,211.5 330.7,195.8 328,186.8 332.7,175.2 342.7,168.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UL_H\" value={values.UL_H} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothH\" fill={statusColor(values.UL_H)} points=\"305.7,136.5 303,143.8 301,150.5 304,161.5 313,170.2 323,172.8 331.7,172.5 \n                        339.3,168.8 346,162.5 350.3,152.2 351.3,141.2 347.3,134.5 343,132.2 334,131.5 322.3,130.2 316,129.8 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UL_G\" value={values.UL_G} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothG\" fill={statusColor(values.UL_G)} data-key=\"G\" points=\"277.3,98.8 276.7,107.2 276,119.2 276,129.5 279.7,138.2 285.7,141.2 293.3,141.5 \n                        301.7,135.8 316.7,126.8 320,122.5 320,116.2 316.3,109.8 301.7,101.8 294.7,98.8 282,97.5 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UL_F\" value={values.UL_F} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothF\" fill={statusColor(values.UL_F)} data-key=\"F\" points=\"222,87.5 222.7,93.8 226.7,98.2 231,107.8 236.7,121.5 242,125.8 248,126.8 257,120.2 \n                        275.3,101.5 276,95.2 273.7,92.2 266,85.8 248.7,80.5 236.3,80.2 229,81.8 \t\" />\n                    </DMFTPopover>\n\n\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UR_E\" value={values.UR_E} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothE\" fill={statusColor(values.UR_E)} data-key=\"E\" points=\"168.3,94.5 172,103.5 175.3,107.5 184,120.5 190.3,127.5 198.7,128.5 203.3,124.8 \n                        209.7,115.2 219.7,92.5 218.7,85.8 209,83.8 191.3,82.5 182,84.2 173.7,88.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UR_D\" value={values.UR_D} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothD\" fill={statusColor(values.UR_D)} data-key=\"D\" points=\"123.7,124.2 131.3,131.2 143.3,137.5 151.3,141.8 159,142.5 165.7,137.5 169.3,125.8 \n                        169,108.8 169.7,100.2 165,95.5 158.3,95.2 145.7,97.8 138.7,102.5 130,108.2 124.3,114.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UR_C\" value={values.UR_C} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothC\" fill={statusColor(values.UR_C)} data-key=\"C\" points=\"106.7,132.2 118,132.2 130.3,132.5 139.7,138.2 144.7,147.8 144.7,160.8 134.3,173.8 \n                        121.7,180.2 115,180.2 107.7,174.5 100,169.8 98.7,156.8 97.3,147.8 98.3,138.8 104.7,133.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UR_B\" value={values.UR_B} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothB\" fill={statusColor(values.UR_B)} data-key=\"B\" points=\"90.2,242.2 97.3,236.1 106.3,224.2 114.9,200.1 117.3,189.4 113,179.1 95.7,169.8 \n                        86.2,169.8 71.9,179.1 63.5,191.3 58.6,202.5 54,215.2 55.8,227.2 65.8,238.9 79.1,242.2 \t\" />\n                    </DMFTPopover>\n                    <DMFTPopover patientId={props.patientId} toothPosition=\"UR_A\" value={values.UR_A} onChange={onToothStatusChange}>\n                        <polygon id=\"ToothA\" fill={statusColor(values.UR_A)} data-key=\"A\" points=\"55.2,236.1 60,237.2 69.8,240.2 86.9,243.3 92,247 95.7,255.8 95.7,271.2 94.7,286.5 \n                        90.2,305.2 82.8,312.8 72,318.5 56.7,319.3 48.8,317.5 40.8,311.5 33,300.3 31.3,284.7 34.2,273.8 39.3,256.3 42.3,248 \t\" />\n                    </DMFTPopover>\n                </g>\n\n\n\n                <g id=\"child-outlines\">\n                    <g id=\"XMLID_9_\">\n                        <path id=\"XMLID_167_\" fill=\"#010101\" d=\"M67.9,257.2c0.1-0.5-0.5-1-0.9-0.8l0-0.1c-0.4,0.6-0.4,1.4,0,2\n       C67.4,258,67.8,257.7,67.9,257.2z\" />\n                        <path id=\"XMLID_145_\" fill=\"#010101\" d=\"M391.2,293.4c0.2,0.6,1.1,1.1,1.6,0.6c1.1-0.9,0.1-3.1-1.3-2.9l0,0.4\n       C391.3,292.1,391,292.8,391.2,293.4z\" />\n                        <path id=\"XMLID_144_\" fill=\"#010101\" d=\"M90.4,191.3c-0.6,0.7,0.3,1.9,1.3,2l0.2-0.2c0.9,0.9,2.7-0.8,1.8-1.8\n       C92.6,191.3,91.5,191.3,90.4,191.3z\" />\n                        <path id=\"XMLID_143_\" fill=\"#010101\" d=\"M63.6,393.6c1,0.1,2-0.9,1.9-1.9c-0.1-1-1.3-1.8-2.3-1.4l0.1,0.5\n       C63.4,391.7,63.5,392.6,63.6,393.6z\" />\n                        <path id=\"XMLID_142_\" fill=\"#010101\" d=\"M380.9,401c-1,1.3-1,3.2,0,4.5c1.8,2.5,0.9,6-0.5,8.8c-1.4,2.7-3.4,5.4-3.5,8.5\n       c0,1.1,0.1,2.2-0.2,3.2c-0.7,2-3.3,2.7-5.4,2.6c-2.1-0.1-4.4-0.5-6.4,0.4c0.7,2,3.6,1.8,5.8,1.5c4.1-0.5,8.4,0.7,11.7,3.1\n       c-3.5-6.9-2.7-15.8,2.1-21.9c1.3-1.6,1.2-4,0.3-5.9C383.9,403.9,382.4,402.4,380.9,401z\" />\n                        <path id=\"XMLID_141_\" fill=\"#010101\" d=\"M94.8,506.7c0.2,1,1.5,1.6,2.4,1c-0.3-0.8-0.5-1.7-0.8-2.5l0.2-0.4\n       C95.6,504.7,94.6,505.7,94.8,506.7z\" />\n                        <path id=\"XMLID_140_\" fill=\"#010101\" d=\"M352.5,484c1-0.4,1.9-1.3,2.3-2.3c-0.6-0.7-1.8-0.7-2.5,0c-0.6,0.7-0.6,1.9,0.1,2.5\n       L352.5,484z\" />\n                        <path id=\"XMLID_139_\" fill=\"#010101\" d=\"M75.9,434.2c-1-0.6-1.9-1.3-2.9-1.9c-2.2-1.5-4.4-2.9-6.6-4.4c-0.7-0.5-0.5-1.6-0.2-2.5\n       c1.2-3.9,0.6-8.3-1.6-11.7c-0.6-1-2.2-1.8-2.7-0.7c4.3,5.2,3.7,13.8-1.2,18.5c-1,0.9-2,2.8-0.8,3.3c2.6-3,7.3-3.8,10.7-1.9\n       C72.4,433.8,74.4,435.4,75.9,434.2z\" />\n                        <path id=\"XMLID_138_\" fill=\"#010101\" d=\"M155.2,105.8c-0.6-1.3-2.3-2-3.6-1.5l0,0.1c-1,0.3-1.7,1.4-1.4,2.4\n       C151.9,107,153.7,106.7,155.2,105.8z\" />\n                        <path id=\"XMLID_137_\" fill=\"#010101\" d=\"M82.5,186.8c0.6,1.3,1.5,2.4,2.7,3.2l0,0.1c0.6-0.1,1.1-0.3,1.7-0.4\n       C86.3,188,84.4,186.7,82.5,186.8z\" />\n                        <path id=\"XMLID_136_\" fill=\"#010101\" d=\"M361.4,216.8l0.5-0.8c2.1-0.5,2-4.2-0.1-4.6C360.5,212.9,360.4,215.2,361.4,216.8z\" />\n                        <path id=\"XMLID_135_\" fill=\"#010101\" d=\"M355.9,500.4c1.7-2.7,3.5-5.7,6.5-6.7c1.4-0.4,3.3-0.8,3.3-2.2c0-1.6-2.5-1.7-3.9-1\n       c-4.1,2-6.9,5.9-9.5,9.7c-1.3,1.8-2.6,3.6-3.8,5.5C351.6,505.8,354.2,503.1,355.9,500.4z\" />\n                        <path id=\"XMLID_134_\" fill=\"#010101\" d=\"M386.1,264.8c-0.5,1.9,0.5,4.2,2.3,5.1c0.7,0.1,1.3-0.9,0.8-1.4l0.1,0\n       C388.2,267.3,387.2,266,386.1,264.8z\" />\n                        <path id=\"XMLID_133_\" fill=\"#010101\" d=\"M63.5,402.1c1,1,2.6,1.2,3.8,0.6c-0.8-2-2.1-4.4-4.2-4.6l0.1,0.2\n       C62.4,399.4,62.6,401.1,63.5,402.1z\" />\n                        <path id=\"XMLID_116_\" fill=\"#010101\" d=\"M417.3,277.6c0-1.2-0.2-2.7-0.6-3.8c0.3-2.8-0.4-5.4-1.4-8c-0.3-2.5-1.1-4.9-2.4-7\n       c-0.3-1-0.7-2-1.2-2.9c0-0.1,0-0.1,0-0.2c0-1.1-0.5-2.2-0.9-3.2c-1.9-4.4-3.9-8.9-7.1-12.6c-2.6-3-6-5.2-9.3-7.4\n       c-0.6-0.4-1.3-0.8-2-1c-1.8-1.3-4.3-1.9-6.7-2c4.1-4.4,6.7-10.2,6.1-16.2c-0.5-4.5-2.6-8.6-4.8-12.6c-3.2-6-6.5-12-9.7-18.1\n       c-3.1-5.7-6.3-11.6-11.6-15.2c-4.5-3-10.9-3.8-15.3-1.1c-2.1,0.4-4.3,0.6-6.5,0.7c5-6,8.2-13.4,9-21.2c0.3-3.7-0.3-8.1-2.4-11\n       c0,0,0,0,0,0c-0.2-0.4-0.4-0.6-0.7-0.9c-0.3-0.3-0.7-0.6-1-0.9c-0.6-0.7-1.1-1.2-2-1.6c-2.4-1.1-5.4-1-8-0.8\n       c-0.2,0-0.3,0.1-0.5,0.1c-6.5-1.4-13.2-2.3-19.9-2.6c3.8-2.9,4.7-8.5,3-13c-1.7-4.5-5.4-7.9-9.4-10.6c-9.6-6.5-21.5-9.8-33.1-9\n       c-12.2-16.7-37.4-22.3-55.4-12.2c-2.3,1.3-5.2,0.7-7.8,0c-15.6-3.7-34-4.8-45.5,6.4c-1.9,1.9-4.1,4.3-6.8,4\n       c-10.6-1.1-20.7,4.2-29.6,10.1c-4.8,3.2-9.7,6.9-11.7,12.2c-2,5.4,0.3,12.7,5.9,14c-7.3,3.3-16.2-2.3-23.6,0.8\n       c-6.7,2.8-8.8,11.3-8.3,18.5c0.2,3.3,0.9,6.6,1.8,9.8c0.5,3.3,0.9,6.5,1.3,9.8c-5.2-1.3-10.7-1.2-15.8,0.6\n       C68,175,60.5,191.7,54.8,206.8c-1.1,2.8-2.2,5.7-2.4,8.8c-0.5,6.9,3.4,13.3,7.2,19.1c-7.9,1.9-14.9,7.2-19.2,14.1c0,0,0,0-0.1,0.1\n       c-0.5,0.8-0.9,1.6-1.2,2.4c-3.5,4.8-3.7,12.4-4.2,17.9c0,0.2,0,0.3,0.1,0.5c-8.1,13.7-6.4,33,5.3,43.9\n       c13.3,12.3,37.4,10.5,47.8-4.3c5.8-8.1,7.2-18.5,8.5-28.3c1.3-10.4,2.6-21.4-1.6-31c-1.3-2.9-2.9-6.7-0.5-8.8\n       c10.6-9.8,18-23,20.8-37.2c0.2-0.1,0.3-0.3,0.4-0.6c1.5-4.8,1.9-9.2,1.7-13.9c0.3-2.4,0-4.8-0.9-7c10,0.5,20.1-4.5,25.6-12.8\n       c5.6-8.3,6.4-19.5,2.1-28.6c7.7,5.9,20.5,2.9,24.8-5.8c4.4-8.8,0.5-20.3,4.3-29.1c1.8,2.6,3.4,5.3,5,8.1c0,0.1,0.1,0.1,0.1,0.2\n       c1.7,4,3.7,7.8,6.8,10.8c4.5,4.4,11.8,6.5,17.1,3.2c3.2-2,5.1-5.5,6.8-8.9c4.1-8.3,7.9-16.8,11.4-25.4c5,3.1,7.5,8.9,9.4,14.5\n       c1.9,5.6,3.6,11.5,7.7,15.7c4.1,4.2,11.6,5.7,15.7,1.5c5.2-5.3,10.4-10.6,15.5-15.9c2.1-2.2,4.3-4.4,6.7-6.2c0.1,2,0,4-0.3,6\n       c-0.2,1.5,0.1,2.8,0.1,4.2c-1,4.7-1.1,9.6-0.3,14.4c1,6.2,4.3,12.8,10.3,14.6c6.2,1.9,12.6-2.1,17.9-5.8\n       c-2.7,7.5-4.1,15.9-1.7,23.5c2.5,7.6,9.8,14,17.8,13.3c4.4-0.4,10.9-1.4,11.4,2.9c0.1,1.3-0.5,2.6-1,3.8\n       c-4.9,11.6,1.5,24.4,8.6,35.2c0,0.1,0,0.2,0,0.3c0.3,2.1,0.8,4.1,1.5,6c0,0-0.1,0.1-0.1,0.1c1.2,5.3,4.7,10.1,9.4,13\n       c3,1.8,7.1,5,4.9,7.7c-5.4,6.9-5.8,17.2-1.2,24.6c0.3,1.4,0.4,2.8,0.3,4.2c-0.6,1.6-0.7,3.4-0.4,5.1c-0.1,0.1-0.2,0.3-0.2,0.4\n       c-0.2,0.2-0.3,0.5-0.2,0.8c0.4,2.6,0.5,5.3,0.5,7.9c0,0.1,0,0.2,0,0.2c-0.8,4.8,0.2,9.9,2.6,14.2c3,5.4,7.8,9.6,13.1,12.7\n       c6.7,3.9,14.4,6.1,22,5.6c7.7-0.5,15.3-4,20-10C417.2,300.2,417.4,288.5,417.3,277.6z M94.6,268.4c-0.7,5.7-1.3,11.4-2,17.2\n       c-0.6,5-1.2,10-3,14.6c-5,12.8-19.9,20.9-33.4,18.2c-13.5-2.8-24-16.1-23.5-29.8c0.2-6.9,2.8-13.4,4.8-20c0.1-0.1,0.1-0.2,0.1-0.4\n       c0.1-0.4,0.3-0.9,0.4-1.3c0.1-0.1,0.2-0.3,0.2-0.5c0-0.1,0-0.2,0-0.3c0-0.1,0-0.2,0.1-0.3c0.7-0.3,0.7-1.3,0.1-1.7\n       c0.2-1.7,0.4-3.5,0.7-5.2c0.2-0.5,0.3-1.1,0.5-1.5c1-3.1,2.8-6.5,4.8-9.2c1.5-1.5,2.8-3.8,4.2-5.4c3.2-3.7,8.8-4.3,13.6-3.4\n       s9.3,3,14.2,3.8c4,0.7,8.3,0.5,11.9,2.4C95.6,249.7,95.6,260.1,94.6,268.4z M113.3,202.6c-2,5.1-4,10.1-6,15.2\n       c-2.1,5.3-4.3,10.6-8,14.9c-5.8,6.6-15.3,9.7-23.8,7.8c-8.6-1.9-15.9-8.6-18.4-17c-3.8-12.8,3-26.2,10.9-36.9\n       c2.8-3.8,5.8-7.6,9.7-10.3c6.9-4.8,16.4-5.7,24.1-2.3c6,2.7,10.7,7.9,13.1,14C115.1,192.9,114.9,197.6,113.3,202.6z M143,160.1\n       c-2.2,6.5-7.1,11.8-12.9,15.5c-3.9,2.5-8.6,4.3-13.1,3.2c-3.6-1-6.4-3.7-9.5-5.8c-1.8-1.2-3.8-2.2-5.8-2.9\n       c-0.7-5.7-1.5-11.4-2.4-17.1c0.1-3.7,0.4-7.3,0.8-10.9c0.2-2.1,0.6-4.5,2.1-6c1.5-1.5,3.7-1.8,5.8-2c11.3-1.4,24.6-2,31.9,6.6\n       C144.3,145.9,145.1,153.6,143,160.1z M168.6,106.4c-0.1,3.5-0.3,7-0.4,10.5c-0.2,5.8-0.4,11.7-2.5,17.1c-1.4,3.7-4.4,7.4-8.4,7.4\n       c-1.1,0-2.1-0.3-3.2-0.7c-3-1-5.9-2.2-8.7-3.5c-5.1-2.4-10-5.2-14.6-8.4c-2.1-1.5-4.3-3.1-5.5-5.4c-1.2-2.3-1.4-5.4,0.3-7.3\n       c6.6-7.5,15-13.4,24.2-17.2c4.1-1.7,8.6-3,13-2.1c1.5,0.3,2.9,0.8,3.9,1.9C168.7,100.6,168.7,103.7,168.6,106.4z M217.1,93.2\n       c-3,7.1-6,14.1-9,21.2c-2.6,6.1-7,13.4-13.6,12.7c-7.5-0.8-9.7-10.8-15.2-15.9c-1.5-2.4-3-4.8-4.5-7.2c-0.2-0.4-0.6-0.5-0.9-0.6\n       c-3.6-2.5-3.5-8.7-0.6-12.1c3.2-3.7,8.2-5,13-5.8c8.1-1.3,16.4-1.5,24.6-0.6c3,0.3,6.6,1.4,7.1,4.3\n       C218.2,90.5,217.7,91.9,217.1,93.2z M269.6,105.4c-5.2,5.1-10.5,10.2-15.7,15.3c-2.3,2.2-4.9,4.6-8.1,4.5\n       c-4.4-0.1-7.2-4.6-9.1-8.5c-2-4-4-8.1-5.5-12.3c-0.9-2.7-1.6-5.5-3.2-7.9c-1.5-2.2-3.7-4.2-3.8-6.8c-0.1-2.1,1.3-4.1,3-5.3\n       c1.8-1.2,3.9-1.6,6-2c11.7-1.8,23.9,0.2,34.4,5.8c3.4,1.8,6.9,4.5,7.1,8.3C274.8,100.1,272.1,103,269.6,105.4z M296.2,137.6\n       c-2.7,1.6-5.6,3.2-8.7,2.9c-6.1-0.5-9.4-7.7-9.6-13.8c-0.1-3.9,0.4-7.9,0.2-11.8c0.1-0.1,0.1-0.3,0.1-0.4c0.1-2-0.3-3.8,0-5.9\n       c0.3-2.1,0.3-4.1,0.2-6.2c0-0.2-0.1-0.4-0.3-0.5c1.4-0.9,2.9-1.6,4.5-2.1c11-3.5,22.1,4.2,31.1,11.4c2.6,2.1,5.4,4.6,5.4,7.9\n       c0,3.7-3.4,6.3-6.5,8.3C307.1,131,301.7,134.4,296.2,137.6z M319.4,170.8c-9.9-2.4-17.6-12.5-16.5-22.6\n       c1.1-10.1,11.4-18.5,21.5-16.8c4.4,0.7,9.4,2.9,13.4,2.4c0.2,0.1,0.4,0.2,0.7,0.1c1.9-0.1,4.2-0.3,6.1,0.3\n       c1.1,0.4,1.3,0.9,2.1,1.6c0.3,0.2,0.9,0.5,1,0.8c0.2,0.3,0.4,0.5,0.6,0.7c2.4,7.4,1.5,15.8-2.6,22.3\n       C340.3,168.2,329.3,173.2,319.4,170.8z M345.4,226.6c-0.5-1.4-0.9-2.9-1.9-4c-0.1-0.1-0.3-0.3-0.4-0.4c0-0.1,0-0.1,0-0.2\n       c-0.7-1.9-1-4-1.7-5.9c-0.2-0.5-0.4-1.1-0.7-1.6c0-0.1,0-0.1,0-0.2c0.1-0.5-0.2-0.8-0.5-0.9c-0.2-0.3-0.4-0.7-0.6-1\n       c-0.4-1.3-0.9-2.6-1.5-3.8c-3.1-7-6.3-14.1-9.4-21.1c2.9-3.2,4.7-7.4,5-11.7c3-1.7,5.7-3.9,8.1-6.4c4.5,0,8.6-0.8,13-1.7\n       c0,0,0.1,0,0.1,0c4.9,0.3,9.8,2.5,13.1,6.2c2.2,2.4,3.7,5.3,5.2,8.2c3.5,6.6,7,13.2,10.5,19.8c3.3,6.2,6.7,13.5,3.8,20\n       c-1.2,2.7-3.4,4.9-5.7,6.8c-5.5,4.6-12.2,8.2-19.3,8.4C355.5,237.2,348,233.3,345.4,226.6z M414.2,283.8\n       c-0.2,5.7-0.3,11.6-2.6,16.9c-3.5,8-11.8,13.5-20.5,14.6c-8.7,1.1-17.6-1.9-24.6-7.2c-6.3-4.7-11.3-11.8-11.5-19.7\n       c0-1.1,0-2.4-0.2-3.5c0.1-0.1,0.2-0.3,0.3-0.5c0.5-2.2,0.7-4.3,0.7-6.5c0.7-3.8,1.6-7.9-0.2-11.2c-0.1-0.2-0.2-0.3-0.3-0.3\n       c-0.1-0.4-0.3-0.8-0.5-1.1c-3.9-7.6-2.5-17.5,3.4-23.7c8-1.3,16.1-3.1,22.8-7.6c0.6-0.4,1.1-0.8,1.7-1.2c0.3,0.2,0.6,0.2,1,0\n       c1.1-0.7,2.9,0,4.1,0.3c0.8,0.2,1.6,0.3,2.3,0.5c0,0,0,0,0,0.1c5.7,2.5,10.2,7.1,13.6,12.3c1.8,2.7,3.3,5.6,4.7,8.6\n       c-0.3,0.4-0.2,1,0.4,1.3c0.1,0,0.2,0.1,0.3,0.2c1,2.2,1.9,4.4,2.8,6.6l1.6,3.9c0,0,0,0,0,0.1c0,3.1,0.4,6.2,1.1,9.3\n       c0,0.2,0.1,0.3,0.2,0.4C414.3,278.7,414.3,281.3,414.2,283.8z\" />\n                        <path id=\"XMLID_80_\" fill=\"#010101\" d=\"M401.6,375c-9.8-10-27.2-12.3-38.5-3.9c-3.9,2.9-6.9,6.7-9.9,10.5c-2,2.6-4.1,5.2-5.2,8.4\n       c-1,2.8-1.1,5.8-1.2,8.7c-0.3,7.7-0.7,15.4-1,23.1c-0.3,7.5-0.5,15.4,3,22.1c1.1,2.1-0.1,4.7-2,6.1c-1.8,1.4-4.1,2.1-6.2,3.2\n       c-8.3,4.3-11.4,14.3-13.7,23.3c-1.9,7.5-3.9,15-5.8,22.5c-1.7,6.5-3.3,13.5-1,19.8c0.7,1.9-1.7,3.4-3.6,4.2\n       c-0.6,0.3-1.1,0.7-1.6,1.1c-0.2,0-0.4,0.1-0.6,0.1c-0.2,0-0.3,0.1-0.4,0.2c-0.3,0.2-0.7,0.4-1.1,0.7c-1.4,1-2.8,1.9-4.1,3\n       c-0.5,0.4-0.8,0.9-1.2,1.4c-0.2,0-0.5,0.1-0.7,0.3c-0.6,0.7-1.1,1.4-1.7,2c-0.5,0.4-0.9,0.8-1.2,1.4c-0.6,0.4-0.9,1.1-1.3,1.7\n       c-1.9,3.6-3.5,7.4-4.7,11.4c-0.6,1.8-0.9,3.9-0.7,5.8c-0.1,0.1-0.1,0.3-0.1,0.5c0,1.4-0.1,2.8-0.1,4.3c-0.2,0-0.4,0-0.5,0\n       c-0.4,1.2-0.6,2.8,0.5,3.3c0,0.3,0,0.5,0,0.8c0,1.1-0.1,2.2,0.1,3.2c-1.6,1-4,1.1-5.9,0.6c-3-0.9-5.7-2.8-8.8-3\n       c-5.7-0.4-10.2,5-12.4,10.3c-2.2,5.2-3.2,10.8-3.2,16.4c0,0,0,0,0,0.1c0,2.7-0.6,5.3-1,7.9c-1.2-2.2-2.7-4.3-4.3-6.1\n       c-3.5-4.2-7-8.4-10.6-12.6c-1.6-1.9-3.3-3.9-5.5-4.9c-3.8-1.8-8.6-0.4-11.8,2.4c-3.2,2.8-5.2,6.7-6.9,10.5\n       c-2.9,6.5-5.4,13.2-7.4,20c-2.4-8.1-4.8-16.2-7.2-24.3c-1-3.4-2.2-7.1-5-9.3c-5.4-4.1-13.4-0.7-17.9,4.3\n       c-4.5,5-7.5,11.6-12.9,15.5c-2-7.2-3.9-14.4-5.9-21.7c-0.6-2.1-1.2-4.3-2.5-6c-4-5.4-12.4-4.8-18.4-1.6c0.3-7.5-0.8-15.3-4.7-21.8\n       c-3.9-6.4-11.1-11.2-18.6-11c-2.7,0.1-3.7-3.6-3.1-6.2c0.4-2.1,1.2-4.5,0.6-6.4c0-0.1,0-0.1,0-0.2c-0.1-0.5-0.2-1-0.2-1.5\n       c0-0.5,0-1,0.1-1.4l0.1,0.2c0-0.2,0-0.4-0.1-0.6c0-1,0-2,0-3.1c0-0.2,0-0.3-0.1-0.4c0-1-0.1-2.1-0.2-3.1c0-0.7-0.1-1.4-0.4-2.1\n       c-0.2-0.7-0.4-1.4-0.7-2.1c-3.5-18.7-12.6-36.4-25.9-49.9c-2.8-2.8,0.5-7.2,1.6-11c1.4-5.1-1.5-10.2-2.5-15.4\n       c-1.1-6.1,0.6-12.3,0.8-18.5c0.5-13.3-6.5-26.8-18.1-33.1s-27.5-4.5-36.7,5.1c-10.1,10.6-10.5,27-7.9,41.4c1.5,8.7,4,17.5,9,24.8\n       c4.7,7,11.6,12.4,19.4,15.4c2.4,0.9,2.1,4.3,1.4,6.7c-4.1,15.8-4,33.3,3.8,47.6c7.8,14.3,24.3,24.4,40.4,21.6\n       c-5.5,5.7-6.7,14.2-7.7,22.1c-0.5,4-0.9,8.3,1.2,11.7c3.1,5,10,5.7,15.9,5.2c5.9-0.5,12.3-1.6,17.2,1.5c-4.1,0.5-6,6-4.3,9.9\n       c1.7,3.8,5.5,6.2,9.2,8.1c4,2.1,8.1,4,12.3,5.7c6.6,2.7,14.5,4.8,20.7,1.1c0.1-0.1,0.3-0.2,0.4-0.3c0.6,1.2,1.4,2.3,2.2,3.4\n       c1,1.3,2.3,2,3.7,2.6c3.4,3.7,8.4,6.1,13.4,6.9c7.4,1.2,14.9-0.5,22.2-2.2c2-0.5,4.2-1,6.1-0.3c2.1,0.7,3.6,2.7,5.5,3.9\n       c3.1,2,7,1.9,10.7,1.4c7.7-0.9,15.3-2.9,22.4-5.9c3.3-1.4,6.7-3.3,8.3-6.5c0.8,0.1,1.4,1.2,1.9,1.8c0.4,0.5,0.9,0.8,1.4,1.1\n       c1.9,1.2,4.3,1.8,6.5,1.6c3.5-0.3,6.8-1.9,9.9-3.5c3.1-1.6,6.3-3.2,9.4-4.8c3.3-1.7,6.7-3.4,9.4-6c5.6-5.4,7.2-14.4,3.8-21.4\n       c7.2-0.2,14.5-0.4,21.7-0.6c2.9-0.1,5.9-0.2,8.5-1.6c6.5-3.5,6.7-12.6,5.2-19.8c-1.3-6.2-3.1-12.2-5.6-18\n       c9.7,1.2,19.4-3.6,26.3-10.6c6.9-6.9,11.5-15.8,15.7-24.6c3-6.2,6-12.7,6.3-19.7c0.2-3.9-0.7-8-2.6-11.4c0-0.2,0-0.4-0.2-0.6\n       c-1.9-2.6-3.9-5.2-5.8-7.8c1.1-3.3,6-4.3,9.5-5.9c9.1-4.4,9.5-16.8,13.2-26.2c1.8-4.8,4.7-9,6.7-13.7\n       C413.6,401.4,411.4,385.1,401.6,375z M57.4,456.4c-7.9-4.7-13.5-12.6-16.9-21.2c-3.4-8.6-4.7-17.8-5.5-27\n       c-0.3-3.2-0.4-6.7,1.3-9.3c1.4-2.2,1.5-5,2.1-7.6c2-8.9,10.4-15.5,19.3-16.8c9-1.3,18.2,2.3,25.1,8.2c2.8,2.4,5.2,5.2,6.8,8.5\n       c4.9,10.1,0.7,22.1,2,33.2c0.6,5.5,2.6,10.9,2.5,16.5s-3.6,11.7-9.1,12.3c-4.5,0.5-9,2-12.8,4.5C67.9,460.5,62,459,57.4,456.4z\n        M76.8,523.7c-8.4-8.9-12.5-21.2-13.6-33.3c-0.4-5-0.4-10.2,1-15c2.2-7.8,8.2-14.5,15.9-17.1s16.8-0.7,22.5,5.1\n       c4.1,4.2,6.2,9.8,8.1,15.3c3.5,9.7,7,19.4,10.5,29.1c0,1.3-0.2,2.6-0.1,3.9c0,1.3,0.1,2.5,0.3,3.8c0,0.4,0,0.8,0,1.1\n       c0,0.3,0.1,0.4,0.2,0.6c-1.4,2.1-1.2,5.4-1.9,8c-1.2,4.2-5.3,7-9.5,8.4C98.6,537.3,85.3,532.6,76.8,523.7z M128.5,571.9\n       c-3.9,0.2-7.7,1.1-11.6,1.3c-3.9,0.2-8-0.2-11.2-2.5c-1.1-0.8-2-1.8-2.5-3c-0.5-1.2-0.5-2.6-0.4-4c0.1-2.6,0.4-5.2,0.8-7.8\n       c0.7-4.5,1.7-9,3.9-13c2.1-4,5.5-7.5,9.8-9c3.7-1.3,7.8-1,11.7-0.2c2.1,0.4,4.3,0.9,6.2,1.9c5.3,2.7,8.2,8.5,10.1,14.2\n       c1.4,4.2,2.3,9.1-0.2,12.7c-0.9,1.4-2.3,2.4-3.6,3.4C137.6,568.7,133.4,571.7,128.5,571.9z M169.3,600.1c-2.6,2-6.3,1.4-9.4,0.3\n       c-3.1-1.1-6.2-2.7-9.4-2.5c-1.1,0-2.1-0.6-3.1-1.2c-4.1-2.6-8.2-5.2-12.3-7.8c-1.1-0.7-2.2-1.5-2.6-2.7c-0.2-0.8,0-1.7,0.2-2.5\n       c1.9-6.4,6.5-11.8,12.3-15.1c3.4-2,7.3-3.2,11.1-4.4c3.6-1.2,7.7,1,9.9,4.1c2.2,3.1,3,7,3.8,10.8c0.6,2.9,1.2,5.8,1.8,8.6\n       C172.3,592,172.8,597.5,169.3,600.1z M213.6,609.9c-1.2,1-2.7,1.4-4.3,1.7c-12.1,2-25.1-1.3-34.7-9.1c0.1,0.2,0.2,0.4,0.2,0.6\n       c-0.4-0.6-0.7-1.2-1-1.9c1.7-1.5,3.1-3.3,4.5-5.1c3.9-5.1,7.9-10.3,11.8-15.4c3.3-4.3,8.3-9.1,13.3-6.9c3.2,1.4,4.5,5.1,5.5,8.5\n       l5.4,17.8C215.4,603.4,216.2,607.6,213.6,609.9z M263.3,604.2c-0.8,4.3-5.6,6.5-9.8,7.5c-8.2,2-16.8,2.5-25.2,1.6\n       c-2.2-0.3-4.8-0.8-5.8-2.8c-0.9-1.8-0.3-3.9,0.4-5.8c2.6-7,5.5-13.9,8.8-20.6c2-4.2,5.2-8.9,9.9-8.6c3.1,0.2,5.5,2.7,7.6,5.1\n       c4.6,5.2,9.1,10.6,12.5,16.6C262.7,599.3,263.8,601.7,263.3,604.2z M307.3,584.9c-0.6,6.3-6.5,10.4-11.9,13.8\n       c-7.6,4.7-16.4,9.5-24.9,8.1c-0.5-0.4-0.9-1-1.3-1.4c-0.5-0.6-1.1-1.1-1.9-1.3c0.1-0.5,0.2-1,0.2-1.5c0.1-0.2,0.2-0.5,0.2-0.7\n       c-0.7-4.5,1-8.8,1.1-13.3c0-0.2,0-0.3-0.1-0.5c1.1-3.5,1.5-7.3,2.5-10.9c1.4-5,4.7-10.2,9.8-11c2.5-0.4,5,0.4,7.4,1.2\n       c4.4,1.4,9,2.9,12.7,5.7C305,575.8,307.8,580.3,307.3,584.9z M341.2,552.6c1.2,6.3,1.5,14.2-3.9,17.7c-3.6,2.3-8.1,1.6-12.4,1.4\n       c-5.1-0.1-10.3,0.7-15.3-0.3c-3.8-0.7-7.6-3-9.4-6.2c-0.1-3.1,0-6.3,0.3-9.4c0-0.1,0-0.2,0-0.3c0.1-0.1,0.1-0.3,0.1-0.5\n       c-0.1-1.1-0.2-2.2-0.3-3.3c0-0.1,0-0.2-0.1-0.3c0.6-4.5,2.1-9,4.6-12.8c0.7-1.1,1.5-2.3,1.8-3.6c0.6-0.4,1.2-0.9,1.7-1.5\n       c0.4-0.4,0.5-0.9,0.9-1.4c0.6-0.8,1.3-1,2.1-1.5c0.7-0.5,1.1-1.1,1.5-1.7c1.1-0.9,1.8-1.6,3.3-2c0.2-0.1,0.4-0.2,0.5-0.3\n       c6-1.7,12.9,1.3,17,6.2C338,538.3,339.8,545.5,341.2,552.6z M382.6,468.6c1.4,3.5,1.9,7.4,1.7,11.2c-0.4,6.3-2.8,12.4-5.4,18.2\n       c-3.7,8.3-8.1,16.5-14.6,22.8c-6.5,6.3-15.6,10.5-24.6,9.4c-9-1.1-17.4-8.4-18-17.5c-0.4-6.1,2.6-11.7,4.5-17.5\n       c2.8-8.4,3.4-17.4,6.4-25.7s9.3-16.4,18-17.6c6.4-0.9,12.7,2,18.6,4.8c2.4,1.2,4.8,2.3,7.2,3.5c0,0.1,0.1,0.1,0.1,0.2\n       C378.5,463.1,380.6,465.9,382.6,468.6z M404.8,414.5c-1.5,2.8-3.3,5.4-4.7,8.2c-4.7,9.8-4,23-13,29c-5.7,3.8-13.4,2.9-19.9,0.8\n       c-7.7-2.5-15.5-7.4-17.9-15.2c-3.1-10.3,4.3-22,0.1-31.9c-2.3-5.2-0.2-11.2,2.4-16.3c3.6-6.8,8.6-13.2,15.4-16.7\n       c11.1-5.8,25.9-2.5,34.1,6.9S410.6,403.4,404.8,414.5z\" />\n                        <path id=\"XMLID_79_\" fill=\"#010101\" d=\"M76.3,413.6l0.3-0.2c-0.9-2.2-2.4-4.9-4.8-4.9c0.9,2.4,2.2,4.6,3.8,6.5\n       C76.2,415.1,76.7,414.1,76.3,413.6z\" />\n                        <path id=\"XMLID_78_\" fill=\"#010101\" d=\"M366.2,207.5c1.4,0.5,3,0.2,4.2-0.8c-0.6-1.7-2.6-2.7-4.4-2.3c0.1-1.1-0.5-2.2-1.5-2.8\n       c-0.6,2.1-0.9,4.3-0.9,6.5c0.8,0.2,1.8,0,2.4-0.7L366.2,207.5z\" />\n                        <path id=\"XMLID_77_\" fill=\"#010101\" d=\"M134,117.5c0.3,0,0.5-0.1,0.7-0.3c4.2-2.6,8.5-5.2,12.7-7.8c1.1-0.7,2.4-2.1,1.6-3.1\n       c-5.6,1.8-10.7,4.9-14.9,8.9C133.4,115.9,133,117.4,134,117.5z\" />\n                        <path id=\"XMLID_76_\" fill=\"#010101\" d=\"M66.4,278.5c0.5-0.1,0.9-0.1,1.4-0.2c0.1-5.3,9.1-6.1,10.1-11.3c-1-0.4-2.2,0.3-3.1,0.9\n       c-1.6,1.1-3.2,2.1-4.8,3.2c-1.3,0.9-2.6,1.8-3.5,3.1C65.7,275.4,65.5,277.3,66.4,278.5z\" />\n                        <path id=\"XMLID_75_\" fill=\"#010101\" d=\"M101.2,492c-1.5,0.6-3,1.2-4.5,1.8c-1.2,0.5-1.8,2-1.7,3.3s0.8,2.5,1.5,3.7\n       c-0.2-1.3,1-2.7,2.3-2.7C99.6,496.1,100.4,494,101.2,492z\" />\n                        <path id=\"XMLID_74_\" fill=\"#010101\" d=\"M64.2,264.8c-4.4,3.1-8.4,6.7-11.7,10.9c3.8-1.2,7.4-3.2,10.3-6\n       C64.2,268.5,65.5,266.2,64.2,264.8z\" />\n                        <path id=\"XMLID_72_\" fill=\"#010101\" d=\"M378.4,399.1c0.9-0.9,1.3-2.2,1.7-3.4c1.1-3.5,2.3-7,3.4-10.5c-2-0.6-3.7,1.6-4.6,3.5\n       c-1.7,3.5-3,7.3-3.8,11.1C376.1,400.5,377.5,400,378.4,399.1z\" />\n                        <path id=\"XMLID_71_\" fill=\"#010101\" d=\"M372.2,251.4c1.3,2.2,2.7,4.5,3.1,7.1c0.4,2.6-0.3,5.5-2.4,7c0,1.3,2.2,1.1,2.9,0\n       c0.7-1.1,0.8-2.7,1.9-3.4c0.5-0.3,1.1-0.4,1.6-0.8c0.4-0.4,0.5-1.1,0.6-1.7C380,255.4,376.3,251.5,372.2,251.4z\" />\n                        <path id=\"XMLID_69_\" fill=\"#010101\" d=\"M194.1,93.7c0.6-0.1,1.3-0.3,1.7-0.8c0.4-0.5,0.3-1.4-0.3-1.6c-5.5-1.9-12-0.5-16.3,3.4\n       C184.2,95.1,189.2,94.7,194.1,93.7z\" />\n                        <path id=\"XMLID_68_\" fill=\"#010101\" d=\"M358.2,479.7c0.2-0.2,0.3-0.5,0.4-0.8c1.6-4,3.1-8.1,4.7-12.1c-1.2-0.9-3,0.3-3.5,1.8\n       c-0.5,1.4-0.4,3.1-1.1,4.4c-0.5,1-1.4,1.8-2.1,2.6c-0.7,0.9-1.3,2-1,3.1S357.4,480.6,358.2,479.7z\" />\n                        <path id=\"XMLID_66_\" fill=\"#010101\" d=\"M58.2,407.8c-1.5-0.2-2.8,0.9-3.9,1.9c-0.9,0.8-1.8,1.7-2.6,2.5c-1,1-1.8,3.1-0.4,3.4\n       c2.4-2,5-3.6,7.9-4.7C60.5,410.3,59.7,407.9,58.2,407.8z\" />\n                        <path id=\"XMLID_65_\" fill=\"#010101\" d=\"M381.6,281.6c-0.7,0.4-1.3,0.8-1.9,1.3c1.3-0.1,2.7,0.2,3.8,0.9c2.3,1.4,4.4,4.3,7,3.5\n       C390.8,283.1,385.4,279.7,381.6,281.6z\" />\n                        <path id=\"XMLID_64_\" fill=\"#010101\" d=\"M262,97.4c-0.7-1.9-2.9-2.6-4.9-3.2c-2.7-0.7-5.5-1.5-8.2-2.2c-0.9-0.2-1.8-0.5-2.6-0.2\n       c-0.8,0.3-1.5,1.3-1,2.1C250.7,91.9,256.3,98.7,262,97.4z\" />\n                        <path id=\"XMLID_63_\" fill=\"#010101\" d=\"M75.5,208.2c-1.7-0.1-4,0.9-3.4,2.4c5,0.3,9.9,1.9,14.1,4.5\n       C85.2,210.7,80.1,208.5,75.5,208.2z\" />\n                        <path id=\"XMLID_62_\" fill=\"#010101\" d=\"M358.7,193c-1.7,1-2.3,3-2.7,4.9c-0.4,1.5-0.7,3-1.1,4.5c0.9,0.4,1.8-0.4,2.5-1.2\n       c1.4-1.6,2.9-3.2,4.3-4.8c0.3-0.4,0.6-0.7,0.8-1.2C363.1,193.4,360.3,192,358.7,193z\" />\n                        <path id=\"XMLID_61_\" fill=\"#010101\" d=\"M86.9,492.7c2.8-4.6,3.3-10.5,1.3-15.5c-0.5-1.3-2.1-2.8-3.1-1.7\n       c1.8,5.8,1.7,12.2-0.5,17.9C84.8,494.4,86.4,493.6,86.9,492.7z\" />\n                    </g>\n                </g>\n            </svg>\n        </div>\n    );\n\n}\n\n// export default ChildTeethChart;\n\n// const mapStateToProps = (state) => ({\n//     user: state.auth.user,\n// });\n\nexport default ChildTeethChart;\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\treatment\\TreatmentsTable.js",["289"],"import React, { useState, useEffect } from 'react';\nimport { Row, Col, Table, Dropdown, Menu, Button, message, Tag, Typography, Modal } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport AddTreatmentModal from './AddTreatmentModal';\nimport InstallmentPaymentsHistoryModal from '../payments/InstallmentPaymentsHistoryModal';\nimport PayInstallmentModal from '../payments/PayInstallmentModal';\n\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { DownCircleFilled, PrinterFilled } from '@ant-design/icons';\n\n\nconst { Text } = Typography;\n\nconst balanceStatus = (paymentType, balance) => {\n   if (paymentType === 'in-full')\n      return <Tag color=\"blue\">Fully Paid</Tag>;\n   else if (paymentType === 'no-charge')\n      return <Tag color=\"green\">No Charge</Tag>\n   else if (paymentType === 'installment')\n      return balance === 0 ? <Tag color=\"blue\">Fully Paid</Tag> : <Tag color=\"red\">{'₱' + balance.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Tag>;\n}\n\n\n\n\nfunction TreatmentsTable(props) {\n\n   const [state, setState] = useState({\n      loading: true,\n      filterByBalance: false,\n      treatments: []\n   });\n\n\n   console.log(state.treatments);\n\n\n   useEffect(() => {\n\n      getTreatments();\n\n\n   }, []);\n   \n   console.log(state.treatments);\n\n\n   const getTreatments = () => {\n      setState({ loading: true });\n      axios.get(`${process.env.REACT_APP_API_URL}/treatments/${props.patientId}/`)\n         .then((response) => {\n            if (response.status === 200) {\n               setState({ treatments: response.data });\n\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const handleAddTreatment = (values) => {\n      const hide = message.loading('Adding New Treatment...', 0);\n      // values.date_treated = values.date_treated.format('YYYY-MM-DD');\n      axios.post(`${process.env.REACT_APP_API_URL}/treatments/${props.patientId}/`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('New Treatment Added Sucessfully');\n               getTreatments();\n               // props.getPatient();\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Someting went wrong! Please, try again');\n         });\n   }\n   console.log(state.treatments);\n\n   const handlePayInstallment = (id, values) => {\n      const hide = message.loading('Processing Payment...', 0);\n      // values.date_paid = values.date_paid.format('YYYY-MM-DD');\n      axios.post(`${process.env.REACT_APP_API_URL}/payment/${id}/`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('Payment Processed Sucessfully');\n               getTreatments();\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Someting went wrong! Please, try again');\n         });\n   }\n\n   const handleDeleteTreatment = (id) => {\n      Modal.info({\n         title: 'Are you sure?',\n         content: 'Are you sure to delete this treatment? This action cannot be undone.',\n         onOk: () => {\n            const hide = message.loading('Deleting Treatment...', 0);\n            // values.date_paid = values.date_paid.format('YYYY-MM-DD');\n            axios.delete(`${process.env.REACT_APP_API_URL}/treatments/${id}/`)\n               .then((response) => {\n                  if (response.status === 200) {\n                     hide();\n                     message.success('Treatment Deleted Sucessfully');\n                     getTreatments();\n                  }\n               })\n               .catch((err) => {\n                  console.log(err);\n                  hide();\n                  message.error('Someting went wrong! Please, try again');\n               });\n         },\n         onCancel() { },\n      });\n   }\n\n\n   // PRINT PAYMENT RECEIPT FOR FULLY PAID TREATMENT\n   const handlePrintPaymentReceipt = (treatment) => {\n      const doc = new jsPDF({\n         format: [612, 792]\n      });\n\n      // const pageSize = doc.internal.pageSize;\n      // const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n      // const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n\n      doc.setFontSize(10);\n      doc.setFontStyle('bold');\n      doc.text('Andres Dental Clinic', 15, 10);\n      doc.setFontSize(8);\n      doc.setTextColor(53, 53, 53);\n      doc.setFontStyle('normal');\n      doc.text('One.O.5ive Department Store', 15, 13);\n      doc.text('J. P. Rizal Street, Barangay 18', 15, 16);\n      doc.text('Laoag City, 2900 Ilocos Norte', 15, 19);\n      doc.text('09212451903', 15, 22);\n      doc.setTextColor(0, 0, 0);\n      doc.setFontSize(11);\n      doc.text(`Receipt #: ${treatment.id + '00'}`, 15, 28);\n      doc.text(`Date: ${moment(treatment.date_treated).format('MMMM DD, YYYY')}`, 15, 32);\n      doc.text(`Payment Type: ${treatment.payment_type}`, 15, 36);\n      doc.text(`For: ${treatment.description}`, 15, 40);\n      doc.setFontStyle('bold');\n\n      doc.line(15, 42, 100, 42); // horizontal line \n      doc.text(`Amount Paid: P${treatment.total_amount_to_pay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 15, 46);\n      doc.line(15, 49, 100, 49); // horizontal line \n\n\n\n\n      doc.autoPrint();\n      window.open(doc.output('bloburl'), '_blank');\n\n   }\n\n   const handleVoidLastPaymentTransaction = (id) => {\n      Modal.info({\n         title: 'Are you sure?',\n         content: 'Are you sure to void the last payment transaction made on this treatment? This action cannot be undone.',\n         onOk: () => {\n            const hide = message.loading('Voiding Last Payment Transaction...', 0);\n            // values.date_paid = values.date_paid.format('YYYY-MM-DD');\n            axios.delete(`${process.env.REACT_APP_API_URL}/treatments/${id}/voidLastPaymentTransaction`)\n               .then((response) => {\n                  if (response.status === 200) {\n                     hide();\n                     message.success('Last Payment Transaction Voided Successfully');\n                     getTreatments();\n                  }\n               })\n               .catch((err) => {\n                  console.log(err);\n                  hide();\n                  message.error('Someting went wrong! Please, try again');\n               });\n         },\n         onCancel() { },\n      });\n   }\n   console.log(state.treatments);\n   const columns = [\n      {\n         title: <Text strong>Description</Text>,\n         width: 190,\n         fixed: 'left',\n         dataIndex: 'description',\n         render: (text, record) => {\n            return record.description;\n         }\n      },\n      {\n         title: <Text strong>Tooth No</Text>,\n         dataIndex: 'tooth_affected_no',\n         render: (text, record) => {\n            return !record.tooth_affected_no ? 'N/A' : record.tooth_affected_no;\n         }\n      },\n      {\n         title: <Text strong>Date Treated</Text>,\n         dataIndex: 'date_treated',\n         render: (text, record) => {\n            return moment(record.date_treated).format('MMMM DD, YYYY');\n         }\n      },\n      {\n         title: <Text strong>Treated By</Text>,\n         dataIndex: 'treated_by',\n         render: (text, record) => {\n            return record.treated_by;\n         }\n      },\n      {\n         title: <Text strong>Payment Type</Text>,\n         dataIndex: 'payment_type',\n         render: (text, record) => {\n            // return record.payment_type.substring(0, 1).toUpperCase() + record.payment_type.substring(1, record.payment_type.length);\n            return record.payment_type;\n         }\n      },\n      {\n         title: <Text strong>Total Amount To Pay</Text>,\n         dataIndex: 'total_amount_to_pay',\n         render: (text, record) => {\n            return !record.total_amount_to_pay ? '₱' + 0 : '₱' + record.total_amount_to_pay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n         }\n      },\n      {\n         title: <Text strong>Balance</Text>,\n         dataIndex: 'balance',\n         filters: [{\n            text: 'Fully Paid',\n            value: 'fully-paid',\n         }, {\n            text: 'No Charge',\n            value: 'no-charge',\n         }, {\n            text: 'Has Balance',\n            value: 'balance',\n         }],\n         filterMultiple: false,\n         onFilter: (value, record) => {\n            if (value === 'balance')\n               return record.balance > 0\n            else if (value === 'fully-paid') {\n               return record.balance === 0;\n            }\n            return !record.balance && record.payment_type === 'no-charge'\n         },\n         render: (text, record) => {\n            return balanceStatus(record.payment_type, record.balance);\n         }\n      },\n      {\n         title: <Text strong>Actions</Text>,\n         width: 80,\n         fixed: 'right',\n         dataIndex: 'actions',\n         render: (text, record) => {\n            console.log(record.transaction_count);\n            if (record.payment_type !== 'installment') {\n               const fullyPaidMenu = (\n                  <Menu>\n                     <Menu.Item>\n                        <a href={() => false} onClick={() => handlePrintPaymentReceipt(record)} target=\"_blank\" rel=\"noopener noreferrer\"><PrinterFilled />Print Receipt</a>\n                     </Menu.Item>\n                     {\n                        // props.role === 'dentist' ? (\n                        <Menu.Item>\n                           <a href={() => false} onClick={() => handleDeleteTreatment(record.id)} target=\"_blank\" rel=\"noopener noreferrer\">Delete Treatment</a>\n                        </Menu.Item>\n                        // ) : (null)\n                     }\n\n                  </Menu>\n               );\n               return (\n                  <Dropdown overlay={fullyPaidMenu}>\n                     <Button>\n                        Actions <DownCircleFilled />\n                     </Button>\n                  </Dropdown>\n               );\n            }\n\n            const disabled = parseInt(record.balance) === 0 ? true : false;\n\n            // INSTALLMENT PAYMENT TYPE ACTIONS\n            const installmentMenu = (\n               <Menu>\n                  { disabled ? (\n                     <Menu.Item disabled>\n                        <PayInstallmentModal disabled={disabled} treatmentId={record.id} currentBalance={record.balance} onPay={handlePayInstallment} />\n                     </Menu.Item>\n                  ) : (\n                        <Menu.Item>\n                           <PayInstallmentModal disabled={disabled} treatmentId={record.id} currentBalance={record.balance} onPay={handlePayInstallment} />\n                        </Menu.Item>\n                     )}\n\n                  <Menu.Item>\n                     <InstallmentPaymentsHistoryModal treatment={record} treatmentId={record.id} />\n                  </Menu.Item>\n\n                  {/* {props.role === 'dentist' && record.transaction_count === 1 ? ( */}\n                  <Menu.Item>\n                     <a href={() => false} onClick={() => handleDeleteTreatment(record.id)} target=\"_blank\" rel=\"noopener noreferrer\">Delete Treatment</a>\n                  </Menu.Item>\n                  {/*  ) : props.role === 'dentist' && record.transaction_count > 1 ? ( */}\n                  <Menu.Item>\n                     <a href={() => false} onClick={() => handleVoidLastPaymentTransaction(record.id)} target=\"_blank\" rel=\"noopener noreferrer\">Void Last Payment Transaction</a>\n                  </Menu.Item>\n                  {/*  ) : (null)} */}\n               </Menu>\n            );\n\n            return (\n               <Dropdown overlay={installmentMenu} trigger={['click']}>\n                  <Button>\n                     Actions <DownCircleFilled />\n                  </Button>\n               </Dropdown>\n            );\n         }\n      }\n   ];\n\n   return (\n      <>\n         <Row align=\"bottom\" style={{ marginTop: 8, marginBottom: 8 }}>\n            <Col style={{ marginBottom: 8 }} span={24} align=\"right\">\n               <AddTreatmentModal onAdd={handleAddTreatment} />\n            </Col>\n         </Row>\n\n         <Table\n            loading={state.loading}\n            dataSource={state.treatments}\n            size=\"medium\"\n            // width=\"100%\"\n            columns={columns}\n            scroll={{ x: 1000 }}\n            rowKey={(record) => record.id}\n         pagination={\n            {\n               position: 'both',\n               showSizeChanger: true,\n               showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} treatments`,\n               defaultCurrent: 1,\n               pageSize: 8,\n         \n            }\n         }\n         />\n      </>\n   );\n}\n\n\nexport default TreatmentsTable;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\sms\\SendCustomMessageModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\dental\\DMFTPopover.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\treatment\\AddTreatmentModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\payments\\PayInstallmentModal.js",["290","291","292"],"import React, { useState } from 'react';\nimport { Modal, Form, InputNumber, Row, Col, Button } from 'antd';\n// import moment from 'moment';\n\nfunction PayInstallmentModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false\n   });\n\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         values.current_balance_before = parseInt(props.currentBalance);\n         props.onPay(props.treatmentId, values);\n         hideModal();\n      });\n   }\n\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n   // const checkBalance = (rule, value, callback) => {\n   //    const { currentBalance } = props;;\n   //    if ((value > currentBalance) || (value < 1 && currentBalance))\n   //       callback('Cannot be lower or greater than current balance');\n   //    else\n   //       callback();\n   // }\n\n\n   return (\n      <>\n         <a  disabled={props.disabled} onClick={showModal} target=\"_blank\" rel=\"noopener noreferrer\">Pay Installment</a>\n         {/* <Modal\n            visible={state.visible}\n            title=\"Pay Installment\"\n            okText=\"Pay\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         > */}\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Amount Paid\" name=\"amount_paid\" rules={[{ required: true, message: 'Amount Paid is required' }]}>\n\n                        <InputNumber style={{ width: '100%' }} min={1} />\n\n                     </Form.Item>\n                  </Col>\n                  {/* <Col span={12}>\n                        <Form.Item label=\"Date Paid\">\n                           {getFieldDecorator('date_paid', {\n                              rules: [{ required: true, message: 'Date Paid is required.' }],\n                           })(\n                           <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{width: '100%'}} />\n                           )}\n                        </Form.Item>\n                     </Col> */}\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         {/* </Modal> */}\n      </>\n   );\n\n}\n\nexport default PayInstallmentModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js",["293"],"import React,{useState} from 'react';\nimport { Modal, Table, message, Button } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Typography } from 'antd';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { PrinterFilled } from '@ant-design/icons';\nimport { CloseCircleFilled } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\n\nfunction InstallmentPaymentsHistoryModal(props) {\n\n      const [state, setState] = useState({\n         loading: true,\n         visible: false,\n         paymentTransactions: []      \n      });\n\n \n\n   // componentDidMount() {\n   //    getPaymentTransactions();\n   // }\n\n   const getPaymentTransactions=()=> {\n      setState({ loading: true });\n      axios.get(`paymentTransactions/${props.treatmentId}`)\n         .then((response) => {\n            if (response.status === 200) {\n               setState({ paymentTransactions: response.data.paymentTransactions });\n               setTimeout(() => {\n                  setState({ loading: false });\n               }, 500);\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const showModal = () => {\n      getPaymentTransactions();\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n   }\n\n\n   const handlePrintPaymentReceipt = (details) => {\n      console.log(details);\n      const doc = new jsPDF({\n         format: [612, 792]\n      });\n\n      // const pageSize = doc.internal.pageSize;\n      // const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n      // const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n\n      doc.setFontSize(10);\n      doc.setFontStyle('bold');\n      doc.text('Andres Dental Clinic', 15, 10);\n      doc.setFontSize(8);\n      doc.setTextColor(53, 53, 53);\n      doc.setFontStyle('normal');\n      doc.text('One.O.5ive Department Store', 15, 13);\n      doc.text('J. P. Rizal Street, Barangay 18', 15, 16);\n      doc.text('Laoag City, 2900 Ilocos Norte', 15, 19);\n      doc.text('09212451903', 15, 22);\n      doc.setTextColor(0, 0, 0);\n      doc.setFontSize(11);\n      doc.text(`Receipt #: ${details.id + '00'}`, 15, 28);\n      doc.text(`Date: ${moment(details.date_paid).format('MMMM DD, YYYY')}`, 15, 32);\n      doc.text(`Payment Type: ${details.payment_type}`, 15, 36);\n      doc.text(`For: ${details.description}`, 15, 40);\n      doc.setFontStyle('bold');\n\n      doc.line(15, 42, 100, 42); // horizontal line \n      doc.text(`Total Amount Due: P${details.total_amount_to_pay.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 28, 46);\n      doc.text(`Current Balance Due: P${details.current_balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 23, 50);\n      doc.text(`Amount Paid: P${details.amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 37, 54);\n      doc.line(15, 56, 100, 56); // horizontal line \n      doc.text(`New Balance Due: P${details.new_balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`, 29, 60);\n\n      doc.autoPrint();\n      window.open(doc.output('bloburl'), '_blank');\n\n   }\n\n\n\n      const columns = [\n         {\n            title: <Text strong>Date Paid</Text>,\n            dataIndex: 'date_paid',\n            render: (text, record) => {\n               return moment(record.date_paid).format('MMMM DD, YYYY');\n            }\n         },\n         {\n            title: <Text strong>Amount Paid</Text>,\n            dataIndex: 'amount_paid',\n            render: (text, record) => {\n               return '₱' + record.amount_paid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n         },\n         {\n            title: <Text strong>Current Balance</Text>,\n            dataIndex: 'current_balance_before',\n            render: (text, record) => {\n               return '₱' + record.current_balance_before.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n         },\n         {\n            title: <Text strong>New Balance</Text>,\n            dataIndex: 'new_balance_after',\n            render: (text, record) => {\n               return record.new_balance_after === 0 ? 'Fully Paid' : '₱' + record.new_balance_after.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n         },\n         {\n            title: <Text strong>Received By</Text>,\n            dataIndex: 'received_by',\n            render: (text, record) => {\n               return record.received_by;\n            }\n         },\n         {\n            title: <Text strong>Actions</Text>,\n            dataIndex: 'actions',\n            render: (text, record) => {\n               return <Button\n                  onClick={() => handlePrintPaymentReceipt(\n                     {\n                        id: props.treatment.id,\n                        date_paid: record.date_paid,\n                        payment_type: props.treatment.payment_type,\n                        description: props.treatment.description,\n                        total_amount_to_pay: props.treatment.total_amount_to_pay,\n                        current_balance: record.current_balance_before,\n                        amount_paid: record.amount_paid,\n                        new_balance: record.new_balance_after\n                     }\n                  )}\n               >\n                  <PrinterFilled />Print Receipt</Button>\n            }\n         }\n      ];\n\n\n      return (\n         <>\n            <a   onClick={showModal} target=\"_blank\" rel=\"noopener noreferrer\">View Installment Payment Transactions</a>\n            <Modal\n               title=\"Installment Payment Transactions\"\n               visible={state.visible}\n               okButtonProps={{ style: { display: 'none' } }}\n               cancelText={<><CloseCircleFilled />Close</>}\n               onCancel={hideModal}\n               width={650}\n            >\n               <Table\n                  bordered\n                  loading={state.loading}\n                  dataSource={state.paymentTransactions}\n                  size=\"small\"\n                  columns={columns}\n                  scroll={{ x: 300 }}\n                  rowKey={(record) => record.id}\n                  pagination={\n                     {\n                        showSizeChanger: true,\n                        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} payments history`,\n                        defaultCurrent: 1,\n                        pageSize: 5,\n                        onChange: (page, pageSize) => {\n\n                        }\n                     }\n                  }\n               />\n            </Modal>\n         </>\n      );\n   \n}\n\n\n\n\nexport default InstallmentPaymentsHistoryModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\frontend\\src\\components\\appointments\\TreatmentsPopoverDrawer.js",[],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":2,"column":28,"nodeType":"300","messageId":"301","endLine":2,"endColumn":35},{"ruleId":"302","severity":1,"message":"303","line":25,"column":7,"nodeType":"304","endLine":25,"endColumn":9,"suggestions":"305"},{"ruleId":"298","severity":1,"message":"306","line":12,"column":18,"nodeType":"300","messageId":"301","endLine":12,"endColumn":26},{"ruleId":"298","severity":1,"message":"306","line":14,"column":18,"nodeType":"300","messageId":"301","endLine":14,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":2,"column":17,"nodeType":"300","messageId":"301","endLine":2,"endColumn":24},{"ruleId":"302","severity":1,"message":"307","line":34,"column":7,"nodeType":"304","endLine":34,"endColumn":9,"suggestions":"308"},{"ruleId":"302","severity":1,"message":"309","line":21,"column":13,"nodeType":"310","endLine":27,"endColumn":4},{"ruleId":"302","severity":1,"message":"311","line":27,"column":6,"nodeType":"304","endLine":27,"endColumn":8,"suggestions":"312"},{"ruleId":"313","severity":1,"message":"314","line":47,"column":15,"nodeType":"315","endLine":47,"endColumn":95},{"ruleId":"316","severity":1,"message":"317","line":86,"column":21,"nodeType":"315","endLine":86,"endColumn":55},{"ruleId":"298","severity":1,"message":"318","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":13},{"ruleId":"298","severity":1,"message":"319","line":1,"column":15,"nodeType":"300","messageId":"301","endLine":1,"endColumn":23},{"ruleId":"298","severity":1,"message":"320","line":20,"column":10,"nodeType":"300","messageId":"301","endLine":20,"endColumn":32},{"ruleId":"321","severity":1,"message":"322","line":25,"column":26,"nodeType":"323","messageId":"324","endLine":25,"endColumn":27,"suggestions":"325"},{"ruleId":"321","severity":1,"message":"322","line":25,"column":51,"nodeType":"323","messageId":"324","endLine":25,"endColumn":52,"suggestions":"326"},{"ruleId":"298","severity":1,"message":"327","line":30,"column":13,"nodeType":"300","messageId":"301","endLine":30,"endColumn":17},{"ruleId":"298","severity":1,"message":"328","line":60,"column":13,"nodeType":"300","messageId":"301","endLine":60,"endColumn":23},{"ruleId":"298","severity":1,"message":"329","line":40,"column":10,"nodeType":"300","messageId":"301","endLine":40,"endColumn":27},{"ruleId":"298","severity":1,"message":"330","line":2,"column":93,"nodeType":"300","messageId":"301","endLine":2,"endColumn":103},{"ruleId":"298","severity":1,"message":"331","line":2,"column":105,"nodeType":"300","messageId":"301","endLine":2,"endColumn":110},{"ruleId":"298","severity":1,"message":"306","line":18,"column":18,"nodeType":"300","messageId":"301","endLine":18,"endColumn":26},{"ruleId":"298","severity":1,"message":"332","line":73,"column":10,"nodeType":"300","messageId":"301","endLine":73,"endColumn":31},{"ruleId":"302","severity":1,"message":"333","line":22,"column":7,"nodeType":"304","endLine":22,"endColumn":9,"suggestions":"334"},{"ruleId":"298","severity":1,"message":"335","line":4,"column":56,"nodeType":"300","messageId":"301","endLine":4,"endColumn":68},{"ruleId":"302","severity":1,"message":"311","line":36,"column":6,"nodeType":"304","endLine":36,"endColumn":8,"suggestions":"336"},{"ruleId":"298","severity":1,"message":"337","line":54,"column":9,"nodeType":"300","messageId":"301","endLine":54,"endColumn":21},{"ruleId":"298","severity":1,"message":"338","line":91,"column":9,"nodeType":"300","messageId":"301","endLine":91,"endColumn":22},{"ruleId":"298","severity":1,"message":"339","line":1,"column":27,"nodeType":"300","messageId":"301","endLine":1,"endColumn":36},{"ruleId":"298","severity":1,"message":"299","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":17},{"ruleId":"298","severity":1,"message":"330","line":2,"column":42,"nodeType":"300","messageId":"301","endLine":2,"endColumn":52},{"ruleId":"298","severity":1,"message":"319","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":25},{"ruleId":"298","severity":1,"message":"340","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":52,"column":22,"nodeType":"315","endLine":52,"endColumn":46},{"ruleId":"302","severity":1,"message":"341","line":30,"column":7,"nodeType":"304","endLine":30,"endColumn":19,"suggestions":"342"},{"ruleId":"343","severity":1,"message":"344","line":67,"column":63,"nodeType":"345","messageId":"346","endLine":67,"endColumn":65},{"ruleId":"343","severity":1,"message":"344","line":67,"column":85,"nodeType":"345","messageId":"346","endLine":67,"endColumn":87},{"ruleId":"298","severity":1,"message":"340","line":2,"column":16,"nodeType":"300","messageId":"301","endLine":2,"endColumn":21},{"ruleId":"298","severity":1,"message":"347","line":11,"column":11,"nodeType":"300","messageId":"301","endLine":11,"endColumn":16},{"ruleId":"302","severity":1,"message":"341","line":28,"column":8,"nodeType":"304","endLine":28,"endColumn":20,"suggestions":"348"},{"ruleId":"302","severity":1,"message":"349","line":46,"column":7,"nodeType":"304","endLine":46,"endColumn":9,"suggestions":"350"},{"ruleId":"298","severity":1,"message":"340","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":15},{"ruleId":"298","severity":1,"message":"347","line":8,"column":11,"nodeType":"300","messageId":"301","endLine":8,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":46,"column":10,"nodeType":"315","endLine":46,"endColumn":102},{"ruleId":"316","severity":1,"message":"317","line":159,"column":13,"nodeType":"315","endLine":159,"endColumn":80},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAppointmentsTable'. Either include it or remove the dependency array.","ArrayExpression",["353"],"'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentsTable'. Either include it or remove the dependency array.",["354"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["355"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'useState' is defined but never used.","'compareToFirstPassword' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["356","357"],["358","359"],"'form' is assigned a value but never used.","'roleSelect' is assigned a value but never used.","'handleConfirmBlur' is assigned a value but never used.","'DatePicker' is defined but never used.","'Radio' is defined but never used.","'handleNoContactNumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["360"],"'notification' is defined but never used.",["361"],"'handleCreate' is assigned a value but never used.","'getMyBalances' is assigned a value but never used.","'useEffect' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'getChildTeethChart'. Either include it or remove the dependency array.",["362"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'state' is assigned a value but never used.",["363"],"React Hook useEffect has a missing dependency: 'getTreatments'. Either include it or remove the dependency array.",["364"],"no-global-assign","no-unsafe-negation",{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"messageId":"371","fix":"372","desc":"373"},{"messageId":"374","fix":"375","desc":"376"},{"messageId":"371","fix":"377","desc":"373"},{"messageId":"374","fix":"378","desc":"376"},{"desc":"379","fix":"380"},{"desc":"369","fix":"381"},{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [getAppointmentsTable]",{"range":"387","text":"388"},"Update the dependencies array to be: [getPaymentsTable]",{"range":"389","text":"390"},"Update the dependencies array to be: [props]",{"range":"391","text":"392"},"removeEscape",{"range":"393","text":"394"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"395","text":"396"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"397","text":"394"},{"range":"398","text":"396"},"Update the dependencies array to be: [fetchData]",{"range":"399","text":"400"},{"range":"401","text":"392"},"Update the dependencies array to be: [getChildTeethChart, props.user]",{"range":"402","text":"403"},{"range":"404","text":"403"},"Update the dependencies array to be: [getTreatments]",{"range":"405","text":"406"},[633,635],"[getAppointmentsTable]",[744,746],"[getPaymentsTable]",[693,695],"[props]",[592,593],"",[592,592],"\\",[617,618],[617,617],[510,512],"[fetchData]",[1108,1110],[617,629],"[getChildTeethChart, props.user]",[648,660],[1232,1234],"[getTreatments]"]