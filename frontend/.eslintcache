[{"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\index.js":"1","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\App.js":"2","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\PatientHomePage.js":"4","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Dashboard.js":"5","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\SMSTextMessaging.js":"6","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Payments.js":"7","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\PatientAccountSettings.js":"8","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Appointments.js":"9","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccounts.js":"10","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\VisitChart.js":"11","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\register\\RegisterDrawer.js":"12","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js":"13","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SMSTable.js":"14","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js":"15","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountForm.js":"16","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccount.js":"17","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccountsTable.js":"18","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\CreateAccountModal.js":"19","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\TreatmentsTable.js":"20","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SendCustomMessageModal.js":"21","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\AdultTeethChart.js":"22","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\ChildTeethChart.js":"23","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js":"24","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js":"25","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\PayInstallmentModal.js":"26","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js":"27","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\DMFTPopover.js":"28","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\AddTreatmentModal.js":"29","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\TreatmentsPopoverDrawer.js":"30","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Login.js":"31","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\register\\ForgotPasswordModal.js":"32","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js":"33","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js":"34","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\SpinningComponent.js":"35","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\index.js":"36","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userActions.js":"37","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userTypes.js":"38","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\store.js":"39","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\rootReducer.js":"40","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userReducer.js":"41","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\Layout.js":"42","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentActions.js":"43","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentReducer.js":"44","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentTypes.js":"45","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientActions.js":"46","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientTypes.js":"47","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientReducer.js":"48","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\DentalRecords.js":"49","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecord.js":"50","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsTable.js":"51","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js":"52","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\DeclineCancelAppointmentModal.js":"53","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\UpdateContactForm.js":"54","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\SiderNavigation.js":"55","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js":"56","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billActions.js":"57","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billTypes.js":"58","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billReducer.js":"59"},{"size":451,"mtime":1563090724000,"results":"60","hashOfConfig":"61"},{"size":2349,"mtime":1610061142315,"results":"62","hashOfConfig":"61"},{"size":4948,"mtime":1563090724000,"results":"63","hashOfConfig":"61"},{"size":12208,"mtime":1610061047489,"results":"64","hashOfConfig":"61"},{"size":3728,"mtime":1610227956583,"results":"65","hashOfConfig":"61"},{"size":360,"mtime":1607641742499,"results":"66","hashOfConfig":"61"},{"size":10857,"mtime":1610236122422,"results":"67","hashOfConfig":"61"},{"size":2250,"mtime":1608918650899,"results":"68","hashOfConfig":"61"},{"size":1787,"mtime":1610234610547,"results":"69","hashOfConfig":"61"},{"size":674,"mtime":1609849840084,"results":"70","hashOfConfig":"61"},{"size":6652,"mtime":1608918650933,"results":"71","hashOfConfig":"61"},{"size":3468,"mtime":1610123450073,"results":"72","hashOfConfig":"61"},{"size":6514,"mtime":1610060645775,"results":"73","hashOfConfig":"61"},{"size":17471,"mtime":1609855390902,"results":"74","hashOfConfig":"61"},{"size":3100,"mtime":1609855390903,"results":"75","hashOfConfig":"61"},{"size":4953,"mtime":1609855390903,"results":"76","hashOfConfig":"61"},{"size":2231,"mtime":1609855390903,"results":"77","hashOfConfig":"61"},{"size":5528,"mtime":1609855390902,"results":"78","hashOfConfig":"61"},{"size":5740,"mtime":1609855390903,"results":"79","hashOfConfig":"61"},{"size":12715,"mtime":1610060739183,"results":"80","hashOfConfig":"61"},{"size":1587,"mtime":1609855390903,"results":"81","hashOfConfig":"61"},{"size":49988,"mtime":1610201351423,"results":"82","hashOfConfig":"61"},{"size":36883,"mtime":1610201365370,"results":"83","hashOfConfig":"61"},{"size":3844,"mtime":1610201393071,"results":"84","hashOfConfig":"61"},{"size":2537,"mtime":1610060883572,"results":"85","hashOfConfig":"61"},{"size":2472,"mtime":1610060739181,"results":"86","hashOfConfig":"61"},{"size":6756,"mtime":1610060739181,"results":"87","hashOfConfig":"61"},{"size":1619,"mtime":1609106533117,"results":"88","hashOfConfig":"61"},{"size":10101,"mtime":1609855390903,"results":"89","hashOfConfig":"61"},{"size":2002,"mtime":1609855390903,"results":"90","hashOfConfig":"61"},{"size":4478,"mtime":1609804459383,"results":"91","hashOfConfig":"61"},{"size":3806,"mtime":1610060739183,"results":"92","hashOfConfig":"61"},{"size":450,"mtime":1609690890249,"results":"93","hashOfConfig":"61"},{"size":3922,"mtime":1609855390904,"results":"94","hashOfConfig":"61"},{"size":466,"mtime":1608929114245,"results":"95","hashOfConfig":"61"},{"size":162,"mtime":1610234517274,"results":"96","hashOfConfig":"61"},{"size":5651,"mtime":1610051409264,"results":"97","hashOfConfig":"61"},{"size":1016,"mtime":1609718440458,"results":"98","hashOfConfig":"61"},{"size":302,"mtime":1609855576742,"results":"99","hashOfConfig":"61"},{"size":427,"mtime":1610234580600,"results":"100","hashOfConfig":"61"},{"size":2018,"mtime":1609718440424,"results":"101","hashOfConfig":"61"},{"size":3126,"mtime":1610199999839,"results":"102","hashOfConfig":"61"},{"size":2464,"mtime":1609955845949,"results":"103","hashOfConfig":"61"},{"size":1076,"mtime":1610234492959,"results":"104","hashOfConfig":"61"},{"size":532,"mtime":1609856457719,"results":"105","hashOfConfig":"61"},{"size":2361,"mtime":1609972881220,"results":"106","hashOfConfig":"61"},{"size":472,"mtime":1609879348976,"results":"107","hashOfConfig":"61"},{"size":998,"mtime":1609885206371,"results":"108","hashOfConfig":"61"},{"size":946,"mtime":1610117408727,"results":"109","hashOfConfig":"61"},{"size":5403,"mtime":1610065446469,"results":"110","hashOfConfig":"61"},{"size":11288,"mtime":1610225560127,"results":"111","hashOfConfig":"61"},{"size":6324,"mtime":1610060985535,"results":"112","hashOfConfig":"61"},{"size":2122,"mtime":1610061012451,"results":"113","hashOfConfig":"61"},{"size":1183,"mtime":1610060958844,"results":"114","hashOfConfig":"61"},{"size":2104,"mtime":1610123013551,"results":"115","hashOfConfig":"61"},{"size":6168,"mtime":1610217597676,"results":"116","hashOfConfig":"61"},{"size":2307,"mtime":1610234536294,"results":"117","hashOfConfig":"61"},{"size":427,"mtime":1610234533985,"results":"118","hashOfConfig":"61"},{"size":935,"mtime":1610234543785,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"18zt6zb",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\index.js",[],["259","260"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\App.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\PatientHomePage.js",["261","262"],"import React, { useState } from 'react';\nimport { Alert, Button, Badge, Layout, Row, Tabs, Col, notification, Typography, Table, Tag, message, Popconfirm } from 'antd';\nimport DescriptionItem from '../components/DentalRecord/DescriptionItem';\nimport axios from 'axios';\nimport moment from 'moment';\nimport UpdateContactForm from '../components/UpdateContactForm';\n\nconst { TabPane } = Tabs;\nconst { Text, Title } = Typography;\nconst { Content } = Layout;\n\nfunction PatientHomePage(props) {\n\n\n   const [state, setState] = useState({\n      dentalRecord: {},\n      balances: [],\n      myAppointments: [],\n      myAppointmentsLoading: false,\n      confirmedAppointments: []\n   });\n\n\n   // componentDidMount() {\n   //    getDentalRecord(props.user.patient_id);\n   //    getMyBalances(props.user.patient_id);\n   //    getMyAppointments(props.user.patient_id);\n   //    getConfirmedAppointments();\n   // }\n\n   const getDentalRecord = (patientId) => {\n      axios.post(`/api/patients/${patientId}`)\n         .then((response) => {\n            if (response.status === 200)\n               setState({ dentalRecord: response.data.patient });\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const getMyBalances = (patientId) => {\n      axios.get(`/api/patients/${patientId}/myBalances`)\n         .then((response) => {\n            if (response.status === 200)\n               setState({ balances: response.data.balances });\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const getMyAppointments = (patientId) => {\n      setState({ myAppointmentsLoading: true });\n      axios.get(`/api/patients/${patientId}/myAppointments`)\n         .then((response) => {\n            if (response.status === 200) {\n               setState({ myAppointments: response.data.appointments });\n               setTimeout(() => {\n                  setState({ myAppointmentsLoading: false });\n               }, 800);\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const getConfirmedAppointments = () => {\n      axios.get(`/api/appointments`)\n         .then((response) => {\n            if (response.status === 200) {\n               setState({ confirmedAppointments: response.data.appointments });\n\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n\n\n   const handleCancelAppointment = (appointmentId) => {\n      axios.post(`/api/patients/${appointmentId}/cancelAppointment`)\n         .then((response) => {\n            if (response.status === 200) {\n               getMyAppointments(props.user.patient_id)\n               getConfirmedAppointments();\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   const handleContactNumberUpdate = (values) => {\n      const hide = message.loading('Updating Contact Number...', 0);\n      axios.post(`/api/patients/${props.user.patient_id}/updateContactNumber`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('Contact Number Updated Successfully');\n               getDentalRecord(props.user.patient_id);\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n\n   const balancesColumns = [\n      {\n         title: <Text strong>Date Treated</Text>,\n         dataIndex: 'date_treated',\n         render: (text, record) => {\n            return moment(record.date_treated).format('MMMM DD, YYYY');\n         }\n      },\n      {\n         title: <Text strong>Description</Text>,\n         dataIndex: 'description',\n         render: (text, record) => {\n            return record.description;\n         }\n      },\n      {\n         title: <Text strong>Balance</Text>,\n         dataIndex: 'balance',\n         render: (text, record) => {\n            return <Tag color=\"red\">{'₱' + record.balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Tag>;\n         }\n      }\n   ];\n\n   const appointmentsColumns = [\n      {\n         title: <Text strong>Date and Time</Text>,\n         dataIndex: 'date',\n         render: (text, record) => {\n            return moment(record.date).format('MMMM DD, YYYY h:mm A');\n         }\n      },\n      {\n         title: <Text strong>Reason</Text>,\n         dataIndex: 'reason',\n         render: (text, record) => {\n            return record.reason;\n         }\n      },\n      {\n         title: <Text strong>Status</Text>,\n         dataIndex: 'status',\n         render: (text, record) => {\n            return record.status === 'confirmed' ? (<Badge status=\"success\" text={<Text style={{ color: '#73d13d' }}>Confirmed</Text>} />)\n               : record.status === 'pending' ? (\n                  <Badge status=\"processing\" text={<Text style={{ color: '#108ee9' }}>Pending</Text>} />\n               )\n                  : record.status === 'declined' ? (\n                     (<Badge status=\"error\" text={<Text style={{ color: '#ff7875' }}>Declined</Text>} />)\n                  )\n                     : (<Badge status=\"error\" text={<Text style={{ color: '#ff7875' }}>Cancelled</Text>} />)\n         }\n      },\n      {\n         title: <Text strong>Action(s)</Text>,\n         dataIndex: 'actions',\n         render: (text, record) => {\n            const isAppointmentPast = moment(record.date).format('X') < moment(Date.now()).format('X');\n            const disabled = (record.status === 'cancelled'\n               || record.status === 'declined'\n               || (record.status === 'pending' && isAppointmentPast)\n               || (record.status === 'confirmed' && isAppointmentPast)\n            ) ? true : false;\n\n            const cancelDeclineButton = record.status === 'pending' ? (\n               <Popconfirm title=\"Are you sure?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => handleCancelAppointment(record.id)}>\n                  <Button disabled={disabled} type=\"danger\">\n                     Cancel Appointment Request\n                     </Button>\n               </Popconfirm>\n\n            ) : (\n                  <Popconfirm title=\"Are you sure?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => handleCancelAppointment(record.id)}>\n                     <Button disabled={disabled} type=\"danger\">\n                        Cancel Appointment\n                  </Button>\n                  </Popconfirm>\n               );\n\n            if (record.status === 'declined' || record.status === 'cancelled')\n               return null;\n\n            return cancelDeclineButton;\n         }\n      }\n   ];\n   const lastVisit = moment(state.dentalRecord.last_visit).format('MMMM DD, YYYY');\n   const birthday = moment(state.dentalRecord.birthday).format('MMMM DD, YYYY');\n   const age = moment().diff(state.dentalRecord.birthday, 'years');\n\n   return (\n      <>\n         <Content style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n            <Title level={4}>HOME</Title>\n            <Tabs tabPosition=\"top\">\n               <TabPane tab=\"My Dental Record Info\" key=\"1\">\n                  <Alert style={{ marginBottom: 11 }} showIcon message=\"Note: You cannot edit or update any information on your Dental Record here except your contact number. In case of inaccurate information kindly contact us or visit us.\" />\n                  {!state.dentalRecord.contact_number ? (\n                     <Alert style={{ marginBottom: 11 }} showIcon closable message=\"You have no provided contact number. Please, kindly provide one to be able to receive sms notifications (appointment reminder, promos, etc.)\" type=\"warning\" />\n                  ) : null}\n                  <Row type=\"flex\">\n                     <Col span={8}><DescriptionItem title=\"Code\" content={state.dentalRecord.code} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Name\" content={state.dentalRecord.name} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Last Visit\" content={lastVisit} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Birthday\" content={birthday} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Age\" content={age} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Address\" content={state.dentalRecord.address} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Occupation\" content={state.dentalRecord.occupation} /></Col>\n                     <Col span={8}><DescriptionItem title=\"Civil Status\" content={state.dentalRecord.civil_status} /></Col>\n                     <Col span={8}>\n                        <UpdateContactForm onUpdateContactNumber={handleContactNumberUpdate} contactNumber={state.dentalRecord.contact_number} />\n                     </Col>\n                  </Row>\n               </TabPane>\n\n               <TabPane tab=\"My Balances\" key=\"2\">\n                  <Table\n                     locale={{ emptyText: 'No Balances' }}\n                     dataSource={state.balances}\n                     size=\"medium\"\n                     columns={balancesColumns}\n                     rowKey={(record) => record.id}\n                     pagination={\n                        {\n                           position: 'bottom',\n                           showSizeChanger: true,\n                           showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} balances`,\n                           defaultCurrent: 1,\n                           pageSize: 8,\n                           onChange: (page, pageSize) => {\n\n                           }\n                        }\n                     }\n                  />\n               </TabPane>\n\n               <TabPane tab=\"My Appointments\" key=\"3\">\n                  {!state.dentalRecord.contact_number ? (\n                     <Alert style={{ marginBottom: 11 }} showIcon closable message=\"You have no provided contact number on your Dental Record. Please, kindly provide one to be able to receive sms notifications (appointment reminder, appointment status, etc.)\" type=\"warning\" />\n                  ) : null}\n                  <Alert\n                     style={{ marginBottom: 11 }}\n                     showIcon\n                     closable\n                     message={\n                        (<><Text strong>Attention!</Text> Before you make an appoinment, kindly check the clinic's calendar for available time and day otherwise your appointment will be declined or ignored.</>)\n                     }\n                     type=\"warning\" />\n                  <Row style={{ marginBottom: 12 }}>\n                     <Col align=\"right\">\n                        {/* <PatientCreateAppointmentModal onCreate={handleCreateAppointment} patientId={props.user.patient_id} /> */}\n                     </Col>\n                  </Row>\n\n                  <Table\n                     scroll={{ x: 700 }}\n                     locale={{ emptyText: 'No Appointments' }}\n                     loading={state.myAppointmentsLoading}\n                     dataSource={state.myAppointments}\n                     size=\"medium\"\n                     columns={appointmentsColumns}\n                     rowKey={(record) => record.id}\n                     pagination={\n                        {\n                           position: 'bottom',\n                           defaultCurrent: 1,\n                           pageSize: 8,\n                           showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} appointments`,\n                           onChange: (page, pageSize) => {\n\n                           }\n                        }\n                     }\n                  />\n               </TabPane>\n\n\n\n            </Tabs>\n\n         </Content>\n      </>\n   );\n}\n\nexport default PatientHomePage;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Dashboard.js",["263","264","265"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\SMSTextMessaging.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Payments.js",["266","267"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\PatientAccountSettings.js",["268"],"import React, { useState } from 'react';\nimport { Layout, Tabs, Typography, message } from 'antd';\nimport UpdateAccountForm from '../components/user/UpdateAccountForm';\nimport UpdateAccountCredentialsForm from '../components/user/UpdateAccountCredentialsForm';\nimport axios from 'axios';\n\nconst { Title } = Typography;\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nfunction PatientAccountSettings(props) {\n   const [state, setState] = useState({\n      account: {}\n   });\n\n\n   // componentDidMount() {\n   //    getUserAccount(props.user.id);\n   // }\n\n   const getUserAccount = (id) => {\n      axios.get(`users/${id}`)\n         .then((response) => {\n            if (response.status === 200)\n               setState({ account: response.data.user });\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n\n   const handleUpdate = (values) => {\n\n      const hide = message.loading('Updating Account...', 0);\n      if (values.birthday)\n         values.birthday = values.birthday.format('YYYY-MM-DD');\n      values.role = state.account.role;\n\n      axios.patch(`users/${state.account.id}/update`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('Account Updated Successfully');\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n\n   }\n\n   console.log(state.account);\n   return (\n      <Content style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n         <Title level={4}>ACCOUNT SETTINGS</Title>\n         <Tabs tabPosition=\"top\" defaultActiveKey=\"1\">\n            <TabPane tab=\"Personal Info\" key=\"1\">\n               <UpdateAccountForm onUpdate={handleUpdate} account={state.account} />\n            </TabPane>\n            <TabPane tab=\"Account Credentials\" key=\"2\">\n               <UpdateAccountCredentialsForm onUpdate={handleUpdate} account={state.account} />\n            </TabPane>\n         </Tabs>\n      </Content>\n   );\n}\n\n\nexport default PatientAccountSettings;\n\n// account={state.account}","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Appointments.js",["269","270","271","272","273","274"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\UserAccounts.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\VisitChart.js",["275","276"],"import React from 'react';\nimport { DatePicker, Select, Badge, Row, Col, Typography } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\n\n\nconst { RangePicker } = DatePicker;\nconst { Title } = Typography;\n\nconst getMonthName = (monthNumber) => {\n   switch (monthNumber) {\n      case 1:\n         return \"January\";\n      case 2:\n         return \"February\";\n      case 3:\n         return \"March\";\n      case 4:\n         return \"April\";\n      case 5:\n         return \"May\";\n      case 6:\n         return \"June\";\n      case 7:\n         return \"July\";\n      case 8:\n         return \"August\";\n      case 9:\n         return \"September\";\n      case 10:\n         return \"October\";\n      case 11:\n         return \"November\";\n      case 12:\n         return \"December\";\n   }\n}\n\nconst getDayName = (dayNumber) => {\n   switch (dayNumber) {\n      case 0:\n         return \"Monday\";\n      case 1:\n         return \"Tuesday\";\n      case 2:\n         return \"Wednesday\";\n      case 3:\n         return \"Thursday\";\n      case 4:\n         return \"Friday\";\n      case 5:\n         return \"Saturday\";\n      case 6:\n         return \"Sunday\";\n   }\n}\n\n\nclass VisitChart extends React.Component {\n\n\n   state = {\n      filterBy: 'month',\n      rangeDate: [moment().startOf('year'), moment().endOf('year')],\n      visitsTrend: [],\n      visitsRanking: []\n   };\n\n   componentDidMount() {\n      this.getVisits();\n   }\n\n   getVisits() {\n      axios.get('dashboard/visits', {\n         params: {\n            startDate: moment(this.state.rangeDate[0]).format('YYYY-MM-DD'),\n            endDate: moment(this.state.rangeDate[1]).format('YYYY-MM-DD'),\n            filterBy: this.state.filterBy\n         }\n      })\n         .then((response) => {\n            // if (response.status === 200)\n            // this.setState({ visitsTrend: response.data.visits, visitsRanking: response.data.visitsRanked });\n         })\n         .catch((err) => {\n            console.log(err);\n         });\n   }\n\n   handleSelectChange = async (value) => {\n      await this.setState({ filterBy: value });\n      this.getVisits();\n   }\n\n   handleRangeDateChange = async (dates) => {\n      if (dates.length === 0)\n         await this.setState({\n            rangeDate: [moment().startOf('year'), moment().endOf('year')]\n         });\n      else\n         await this.setState({\n            rangeDate: dates\n         });\n      this.getVisits();\n   }\n\n   render() {\n\n\n      const data = [...this.state.visitsTrend].map((data) => {\n         if (this.state.filterBy === 'month')\n            return {\n               \"name\": getMonthName(data.name),\n               \"Number of Visits\": data[\"Number of Visits\"]\n            };\n         return {\n            \"name\": getDayName(data.name),\n            \"Number of Visits\": data[\"Number of Visits\"]\n         };\n      });\n      console.log('Visits Trend raw', this.state.visitsTrend)\n      console.log(data);\n\n      let previousPosition;\n      let visitsRanking = [...this.state.visitsRanking].map((obj, index, arr) => {\n         if (index !== 0) {\n            if (obj.totalVisits === arr[index - 1].totalVisits) {\n               return {\n                  ...obj,\n                  position: previousPosition\n               }\n            }\n            previousPosition += 1;\n            return {\n               ...obj,\n               position: previousPosition\n            }\n         }\n         previousPosition = 1;\n         return {\n            ...obj,\n            position: previousPosition\n         };\n      });\n\n      const cols = {\n         numberofvisits: {\n            tickInterval: 20\n         }\n      };\n\n      return (\n         <div style={{ padding: '12px 0px 24px 0px' }}>\n            <Row gutter={32}>\n               <Col span={18}>\n                  <Title level={4} style={{ marginLeft: 30, marginTop: 0, fontWeight: 'normal', fontSize: 14 }}>Visits Trend</Title>\n                  <Row>\n                     <Col span={24} align=\"right\">\n                        <Select style={{ marginRight: 12 }} defaultValue=\"month\" onChange={this.handleSelectChange} >\n                           <Select.Option value=\"month\">Month</Select.Option>\n                           <Select.Option value=\"day\">Day</Select.Option>\n                        </Select>\n                        <RangePicker style={{ marginBottom: 8 }} format=\"MMMM DD, YYYY\" defaultPickerValue={[moment().startOf('year'), moment().endOf('year')]} value={this.state.rangeDate} onChange={this.handleRangeDateChange} />\n                     </Col>\n                  </Row>\n                  {/* <Title style={{textAlign: 'center', fontWeight: 'normal', fontSize: 18}}>January 1, 2019 ~ December 31, 2019</Title> */}\n                  <Chart height={400} data={data} scale={cols} forceFit>\n                     <Axis name=\"name\" />\n                     <Axis name=\"Number of Visits\" />\n                     <Tooltip\n                        crosshairs={{\n                           type: \"y\"\n                        }}\n                     />\n                     <Geom type=\"interval\" position=\"name*Number of Visits\" />\n                  </Chart>\n               </Col>\n               <Col span={6}>\n                  <Title level={1} style={{ marginTop: 0, marginBottom: 24, fontWeight: 'normal', fontSize: 14 }}>Visits Ranking</Title>\n\n                  {\n                     visitsRanking.map((obj, index) => {\n                        if (index < 3)\n                           return (\n                              <Row style={{ marginBottom: 12 }}>\n                                 <Col span={24}>\n                                    <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#314659', color: '#f5f5f5' }} />\n                                    {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                                 </Col>\n                              </Row>\n                           );\n                        return (\n                           <Row style={{ marginBottom: 12 }}>\n                              <Col span={24}>\n                                 <Badge count={obj.position} style={{ marginRight: 8, fontWeight: 'bold', backgroundColor: '#f5f5f5', color: '#595959' }} />\n                                 {this.state.filterBy === 'month' ? getMonthName(obj.name) : getDayName(obj.name)}\n                              </Col>\n                           </Row>\n                        );\n                     })\n                  }\n\n               </Col>\n            </Row>\n\n         </div>\n      );\n   }\n}\n\nexport default VisitChart;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\register\\RegisterDrawer.js",["277","278","279","280","281"],"import React, { useState } from 'react';\nimport {\n   Tooltip, Layout, Form, Button, Col, Row, Input, DatePicker, message, notification\n} from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\n\n\n\nfunction RegisterDrawer(props) {\n   const [form] = Form.useForm();\n\n\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n\n   }\n\n   // const handleRegister = (values) => {\n   //    setState({ registerLoading: true });\n   //    values.birthday = values.birthday.format('YYYY-MM-DD');\n   //    axios.post('auth/users/', values)\n   //       .then((response) => {\n   //          if (response.status === 200) {\n   //             setTimeout(() => {\n   //                onClose();\n   //                setState({ registerLoading: false });\n   //                notification['success']({\n   //                   message: 'Registration Successful!',\n   //                   description: 'You can now login through our portal to access services provided to you as a patient',\n   //                   duration: 5\n   //                });\n   //             }, 1000);\n   //          }\n   //       })\n   //       .catch((err) => {\n   //          console.log(err);\n   //          setTimeout(() => {\n   //             onClose();\n   //             setState({ registerLoading: false });\n   //             notification['error']({\n   //                message: 'Registration Error!',\n   //                description: 'Something went wrong! Please, try again.',\n   //                duration: 5\n   //             });\n   //          }, 1000);\n   //       });\n   // }\n\n\n   return (\n      <Layout style={{ margin: '24px 24px 24px 36px', padding: 24, background: '#fff' }}>\n\n\n\n         <Form onSubmit={handleSubmit}\n            form={form}>\n            <Row gutter={16}>\n\n               <Col span={8}>\n                  <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Name is required' }]}>\n                     <Input />\n                  </Form.Item>\n               </Col>\n               <Col span={8}>\n                  <Form.Item label=\"Birthday\" name=\"birthday\" rules={[{ required: true, message: 'Birthday is required' }]}>\n                     <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n                  </Form.Item>\n               </Col>\n               <Col span={8}>\n                  <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Address is required' }]}>\n                     <Input />\n                  </Form.Item>\n               </Col>\n               <Col span={12}>\n                  <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Username is required' }]}>\n                     <Input />\n                  </Form.Item>\n               </Col>\n               <Col span={12}>\n\n                  <Form.Item label=\"Email Address\" name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required' }]}>\n                     <Input />\n                  </Form.Item>\n               </Col>\n               <Col span={12}>\n                  <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Password is required' }]}>\n                     <Input.Password />\n                  </Form.Item>\n               </Col>\n\n            </Row>\n            <Button htmlType=\"submit\"></Button>\n         </Form>\n\n      </Layout>\n   );\n\n}\n\n\nexport default RegisterDrawer;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\ApppointmentsCalendar.js",["282","283","284","285"],"import React, { useState, useEffect } from 'react';\nimport { Card, Tag, Typography, BackTop, Calendar, Row, Col, Alert } from 'antd'\nimport AppointmentsPopoverDrawer from './AppointmentsPopoverDrawer';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\n\nimport { getABNTs } from \"../../redux\";\n\nconst { Text } = Typography;\n\nfunction AppointmentsCalendar(props) {\n\n   const [state, setState] = useState({\n      value: moment(Date.now()),\n      visiblePopover: false,\n      appoin: []\n   });\n\n\n   // useEffect(() => {\n\n   //    props.getABNTs();\n\n   // }, []);\n\n   // useEffect(() => {\n   //    const fetchData = () => {\n\n   //       setState({ appoin: props.appointmentes });\n\n\n   //    };\n   //    fetchData();\n   // }, []);\n\n   // console.log(state.appoin)\n\n   const getAppointmentCount = (value) => {\n      const dateValue = moment(value.format('MMMM DD')).unix('X');\n      return props.appointments.filter((appointment) => {\n         return dateValue === moment(moment(appointment.date).format('MMMM DD')).unix('X');\n      }).length;\n   }\n\n   const getAppointmentMonthCount = (value) => {\n      const dateValue = moment(value.format('MMMM YYYY')).unix('X');\n      return props.appointments.filter((appointment) => {\n         return dateValue === moment(moment(appointment.date).format('MMMM YYYY')).unix('X');\n      }).length;\n   }\n\n   const getAppointmentsDay = (value) => {\n      const dateValue = moment(value.format('MMMM DD')).unix('X');\n      return props.appointments.filter((appointment) => {\n         return dateValue === moment(moment(appointment.date).format('MMMM DD')).unix('X');\n      });\n   }\n\n\n   const dateFullCellRender = (date) => {\n      const appointmentCount = getAppointmentCount(date);\n      const startOfMonth = moment(JSON.parse(JSON.stringify(state.value))).startOf('month').unix('X');\n      const endOfMonth = moment(JSON.parse(JSON.stringify(state.value))).endOf('month').unix('X');\n      const isSelected = date.unix('X') === state.value.unix('X');\n\n      if (date.unix('X') < startOfMonth || date.unix('X') > endOfMonth) {\n         return (\n            <div style={{ padding: 4, opacity: 0.5 }}>\n               <Card\n                  title={<Text>{date.format('MMMM DD')}</Text>}\n                  size=\"small\"\n                  style={{ textAlign: 'right', height: 100, cursor: 'pointer', border: 0, boxShadow: '3px 3px 6px -4px #8c8c8c' }}\n               >\n                  {\n                     appointmentCount > 0 ? (\n                        <Tag color=\"red\">{appointmentCount} Appointment(s)</Tag>\n                     ) : (null)\n                  }\n               </Card>\n            </div>\n         );\n      }\n\n\n      return (\n         <div style={{ padding: 4 }}>\n            <AppointmentsPopoverDrawer\n               role={props.role}\n               title={<Text strong>{date.format('MMMM DD')}</Text>}\n               appointments={getAppointmentsDay(date)}\n            >\n               {\n                  isSelected ? (\n                     <Card\n                        title={<Text>{date.format('MMMM DD')}</Text>}\n                        size=\"small\"\n                        style={\n                           {\n                              textAlign: 'right',\n                              backgroundColor: '#e6f7ff',\n                              height: 100,\n                              cursor: 'pointer',\n                              border: 0,\n                              boxShadow: '4px 4px 4px -4px #8c8c8c'\n                           }\n                        }\n                     >\n\n                        {\n                           appointmentCount > 0 ? (\n                              <Tag color=\"red\">{appointmentCount} Appointment(s)</Tag>\n                           ) : (null)\n                        }\n\n                     </Card>\n                  ) : (\n                        <Card\n                           title={<Text>{date.format('MMMM DD')}</Text>}\n                           size=\"small\"\n                           style={\n                              {\n                                 textAlign: 'right',\n                                 height: 100,\n                                 cursor: 'pointer',\n                                 border: '1px solid 8c8c8c',\n                                 boxShadow: '4px 4px 4px -4px #8c8c8c'\n                              }\n                           }\n                        >\n                           {\n                              appointmentCount > 0 ? (\n                                 <Tag style={{ textAlign: 'center' }} color=\"red\">{appointmentCount} Appointment(s)</Tag>\n                              ) : (null)\n                           }\n                        </Card>\n                     )\n               }\n            </AppointmentsPopoverDrawer>\n\n         </div>\n      );\n\n   }\n\n   // const hidePopover = () => {\n   //    setState({ visiblePopover: false });\n   // }\n\n   // const handleVisiblePopoverChange = (visible) => {\n   //    setState({ visiblePopover: visible });\n   // }\n\n\n   const monthCellRender = (date) => {\n      const appointmentCount = getAppointmentMonthCount(date);\n      return (\n         <Row>\n            <Col align=\"center\">\n               {appointmentCount > 0 ? (\n                  <Tag color=\"red\">{appointmentCount} Appointment(s)</Tag>\n               ) : (null)}\n            </Col>\n         </Row>\n      );\n   }\n\n   const onSelect = (value) => {\n      setState({\n         value\n      });\n   }\n\n   const onPanelChange = (value) => {\n      setState({ value });\n   }\n\n   const { value } = state;\n   return (\n      <>\n         <Row>\n            <BackTop />\n            <Col align=\"left\" span={24}>\n               <Text style={{ margin: '0px 12px 0px 0px' }}>(Today's Date)</Text>\n               <br />\n               <Text strong style={{ fontSize: '21px', margin: '0px 12px 0px 0px' }}>{moment(Date.now()).format('MMMM DD, YYYY')}</Text>\n            </Col>\n         </Row>\n         {/* <Alert message={`You selected date: ${value.format('MMMM DD, YYYY')}`} /> */}\n\n         <Calendar\n            dateFullCellRender={dateFullCellRender}\n            monthCellRender={monthCellRender}\n            value={value}\n            onSelect={onSelect}\n            onPanelChange={onPanelChange} />\n\n      </>\n   );\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      appointmentes: state.Abointments.assignmentes,\n\n   };\n};\n\n\nexport default connect(\n   // mapStateToProps,\n   // { getABNTs }\n)(AppointmentsCalendar);\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SMSTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountCredentialsForm.js",["286","287"],"import React,{useState} from 'react';\nimport { Form, Input, Row, Col, Button, message } from 'antd';\nimport axios from 'axios';\n\n\nfunction UpdateAccountCredentialsForm(props) {\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields(async (err, values) => {\n         if (err)\n            return\n         await props.onUpdate(values);\n         props.form.setFieldsValue({ password: '' });\n         props.form.setFieldsValue({ confirm_password: '' });\n\n      });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      }\n      else if (form.getFieldValue('password') && !value) {\n         callback('Please confirm your password');\n      }\n      else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      // const form = props.form;\n      // if (value) {\n      // //   form.validateFields(['confirm_password'], { force: true });\n      // }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  if (!response.data.isValid && response.data.username !== props.account.username)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n   \n      const { account } = props;\n\n      return (\n         <React.Fragment>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Username\" initialValue={account.username || ''} name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"New Password\" name=\"username\" rules={[{ required: true, message: 'password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Confirm New Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n         </React.Fragment>\n      );\n   \n}\n\nexport default UpdateAccountCredentialsForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UpdateAccountForm.js",["288","289","290","291"],"import React,{useState} from 'react';\nimport { message, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nconst { Option } = Select;\n\n\n   function UpdateAccountForm(props) {\n\n      const [state, setState] = useState({\n         selectedRole: ''\n      });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onUpdate(values);\n      });\n   }\n\n   const validateEmailFormat = (email) => {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n   }\n\n   const validateEmail = async (rule, value, callback) => {\n      const form = props.form;\n      if (validateEmailFormat(value)) {\n         if (value) {\n            await axios.post(`users/${value}/validateEmail`)\n               .then((response) => {\n                  if (response.status === 200) {\n                     if (!response.data.isValid && response.data.email !== props.account.emailaddress)\n                        callback('Email Address already used!');\n                     else\n                        callback();\n                  }\n               })\n               .catch((err) => {\n                  console.log(err);\n                  message.error('Internal server error!');\n               });\n         }\n      }\n      else if (!validateEmailFormat(value) && value !== '') {\n         callback('Invalid Email Address format')\n      }\n      callback();\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n      const { account } = props;\n\n      const roleSelect = account.role === 'patient' ? (\n         <Select disabled>\n            <Option value=\"dentalaide\">Dental Aide</Option>\n            <Option value=\"dentist\">Dentist</Option>\n         </Select>\n      ) : (\n            <Select onChange={handleSelectRoleChange}>\n               <Option value=\"dentalaide\">Dental Aide</Option>\n               <Option value=\"dentist\">Dentist</Option>\n            </Select>\n         );\n      return (\n         <React.Fragment>\n            <Form layout=\"vertical\" onSubmit={handleSubmit}>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Name\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'Name is required.' }]} >\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" initialValue={account.name || ''} name=\"name\" rules={[{ required: true, message: 'name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" initialValue={account.birthday || ''} name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     {\n                        account.role === 'patient' ? (\n                           <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address is required.' }, { validator: validateEmail }]}>\n\n                              <Input />\n\n                           </Form.Item>\n                        )\n                           : (\n                              <Form.Item label=\"Role\" initialValue={account.role || ''} name=\"role\" rules={[{ required: true, message: 'Role is required.' }]}>\n                                \n                                    roleSelect\n                                \n                              </Form.Item>\n                           )\n                     }\n                  </Col>\n\n                  {(account.role === 'dentist' && state.selectedRole !== 'dentalaide') || state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" initialValue={account.emailaddress || ''} name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n                           \n                              <Input />\n                          \n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n\n               </Row>\n               <Button htmlType=\"submit\">Update</Button>\n            </Form>\n\n         </React.Fragment>\n      );\n   \n}\n\n\nexport default UpdateAccountForm;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccount.js",["292","293","294","295","296"],"import React, { useState } from 'react';\nimport { Tabs, Row, Col, Icon, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport UpdateAccountForm from './UpdateAccountForm';\nimport UpdateAccountCredentialsForm from './UpdateAccountCredentialsForm';\nimport axios from 'axios';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\n\n\nconst { TabPane } = Tabs;\n\n\nfunction UserAccount(props) {\n\n   const [state, setState] = useState({\n      account: {}\n   });\n\n   // componentDidMount() {\n   //    this.getUserAccount(this.props.id);\n   // }\n\n   const getUserAccount = (id) => {\n      axios.get(`users/${id}`)\n         .then((response) => {\n            if (response.status === 200)\n               this.setState({ account: response.data.user });\n         })\n         .catch((err) => {\n            console.log(err);\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n\n   const handleUpdate = (values) => {\n\n      const hide = message.loading('Updating Account...', 0);\n      if (values.birthday)\n         values.birthday = values.birthday.format('YYYY-MM-DD');\n\n\n      axios.patch(`users/${this.state.account.id}/update`, values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('Account Updated Successfully');\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n\n   }\n\n   return (\n      <React.Fragment>\n         <Row style={{ marginBottom: 21 }}>\n            <Col align=\"left\">\n               <Link to=\"/useraccounts\"> <ArrowLeftOutlined /> Back to User Accounts</Link>\n            </Col>\n         </Row>\n         <Tabs tabPosition=\"left\" defaultActiveKey=\"1\">\n            <TabPane tab=\"Personal Info\" key=\"1\">\n               <UpdateAccountForm onUpdate={this.handleUpdate} account={this.state.account} />\n            </TabPane>\n            <TabPane tab=\"Account Credentials\" key=\"2\">\n               <UpdateAccountCredentialsForm onUpdate={this.handleUpdate} account={this.state.account} />\n            </TabPane>\n         </Tabs>\n      </React.Fragment>\n   );\n\n\n}\n\nexport default UserAccount;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\UserAccountsTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\user\\CreateAccountModal.js",["297","298"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, DatePicker, Select, Button, message } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\n\n\nfunction CreateAccountModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      confirmDirty: false,\n      visible: false,\n      selectedRole: ''\n   });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onCreate(values);\n         hideModal();\n      });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n   const handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      setState({ confirmDirty: state.confirmDirty || !!value });\n   }\n\n   const handleSelectRoleChange = (value) => {\n      setState({ selectedRole: value });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      } else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && state.confirmDirty) {\n         form.validateFields(['confirm_password'], { force: true });\n      }\n      callback();\n   }\n\n   const validateUsername = async (rule, value, callback) => {\n      // const form = props.form;\n      if (value)\n         await axios.post(`users/${value}/validate`)\n            .then((response) => {\n               if (response.status === 200) {\n                  console.log(response.data.isValid);\n                  if (!response.data.isValid)\n                     callback('Username already taken!');\n                  else\n                     callback();\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      else\n         callback();\n\n   }\n\n\n   return (\n      <React.Fragment>\n         <Button type=\"primary\" onClick={showModal}>\n            <UsergroupAddOutlined />\n                  Create New User Account\n               </Button>\n         <Modal\n            visible={state.visible}\n            title=\"Create a New User Account\"\n            okText=\"Create\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row>\n                  <Col span={24}>\n                     <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Name is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Address is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Birthday\" name=\"birthday\" rules={[{ required: true, message: 'Birthday is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Username is required.' }, { validator: validateUsername }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n\n                  <Col span={12}>\n                     <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Role is required.' }]} initialValue={'dentalaide'}>\n\n                        <Select onChange={handleSelectRoleChange}>\n                           <Option value=\"dentalaide\">Dental Aide</Option>\n                           <Option value=\"dentist\">Dentist</Option>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Row gutter={8}>\n                  <Col span={12}>\n                     <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Password is required.' }, { validator: validateToNextPassword }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Confirm Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm your password' }, { validator: compareToFirstPassword }]} >\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n\n                  {state.selectedRole === 'dentist' ? (\n                     <Col span={24}>\n                        <Form.Item label=\"Email Address\" name=\"emailaddress\" rules={[{ required: true, message: 'Email Address  is required.' }]}>\n\n                           <Input />\n\n                        </Form.Item>\n                     </Col>\n                  ) : null}\n\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </React.Fragment>\n   );\n\n}\n\nexport default CreateAccountModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\TreatmentsTable.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\sms\\SendCustomMessageModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\AdultTeethChart.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\ChildTeethChart.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\dental\\CreateDentalRecordModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsPopoverDrawer.js",["299"],"import React, { useState } from 'react';\nimport { Divider, Timeline, Popover, Drawer, } from 'antd';\nimport moment from 'moment';\n\nfunction AppointmentsPopoverDrawer(props) {\n\n   const [state, setState] = useState({\n      visible: false, childrenDrawer: false, visiblePopover: false\n   });\n\n   console.log(props.appointments)\n\n   const showDrawer = () => {\n      setState({\n         visible: true,\n         visiblePopover: false\n      });\n   };\n\n   const onClose = () => {\n      setState({\n         visible: false,\n         visiblePopover: false\n      });\n   };\n\n   // const showChildrenDrawer = () => {\n\n   //    setState({\n   //       childrenDrawer: true,\n   //    });\n   // };\n\n   // const onChildrenDrawerClose = () => {\n   //    setState({\n   //       childrenDrawer: false,\n   //    });\n   // };\n\n   const handleVisiblePopoverChange = (visible) => {\n      setState({ visiblePopover: visible });\n   }\n\n\n   return (\n      <React.Fragment>\n\n         <Popover\n            title={props.title}\n            trigger=\"click\"\n            visible={state.visiblePopover}\n            onVisibleChange={handleVisiblePopoverChange}\n            content={<a onClick={showDrawer}>View Appointments</a>}\n         >\n            {props.children}\n         </Popover>\n\n         <Drawer\n            title=\"Appointments for this date\"\n            width=\"450px\"\n            closable={true}\n            onClose={onClose}\n            visible={state.visible}\n         >\n            <Timeline>\n               {\n                  props.appointments.map((appointment) => {\n\n\n                     return (\n                        <Timeline.Item key={appointment.id}>\n                           {appointment.patient.name} @ {moment(appointment.time).format('h:mm A')} <Divider type=\"vertical\" /> {appointment.reason}\n                        </Timeline.Item>\n                     );\n                  })\n               }\n            </Timeline>\n\n            {/* SECOND LEVEL DAWER*/}\n            {/* <Button type=\"primary\" onClick={showChildrenDrawer}>\n                  Two-level drawer\n               </Button>\n               <Drawer\n                  title=\"Two-level Drawer\"\n                  width={320}\n                  closable={true}\n                  onClose={onChildrenDrawerClose}\n                  visible={state.childrenDrawer}\n               >\n                  This is two-level drawer\n               </Drawer> */}\n            {/* SECOND LEVEL DAWER*/}\n\n\n         </Drawer>\n      </React.Fragment>\n   );\n\n}\n\n\nexport default AppointmentsPopoverDrawer;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\PayInstallmentModal.js",["300"],"import React, { useState } from 'react';\nimport { Modal, Form, InputNumber, Row, Col, Button } from 'antd';\n// import moment from 'moment';\n\nfunction PayInstallmentModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false\n   });\n\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         values.current_balance_before = parseInt(props.currentBalance);\n         props.onPay(props.treatmentId, values);\n         hideModal();\n      });\n   }\n\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n   const checkBalance = (rule, value, callback) => {\n      const { currentBalance } = props;;\n      if ((value > currentBalance) || (value < 1 && currentBalance))\n         callback('Cannot be lower or greater than current balance');\n      else\n         callback();\n   }\n\n\n   return (\n      <>\n         <a  disabled={props.disabled} onClick={showModal} target=\"_blank\" rel=\"noopener noreferrer\">Pay Installment</a>\n         <Modal\n            visible={state.visible}\n            title=\"Pay Installment\"\n            okText=\"Pay\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Amount Paid\" name=\"amount_paid\" rules={[{ required: true, message: 'Amount Paid is required' }]}>\n\n                        <InputNumber style={{ width: '100%' }} min={1} />\n\n                     </Form.Item>\n                  </Col>\n                  {/* <Col span={12}>\n                        <Form.Item label=\"Date Paid\">\n                           {getFieldDecorator('date_paid', {\n                              rules: [{ required: true, message: 'Date Paid is required.' }],\n                           })(\n                           <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{width: '100%'}} />\n                           )}\n                        </Form.Item>\n                     </Col> */}\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\nexport default PayInstallmentModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\InstallmentPaymentsHistoryModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\DMFTPopover.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\payments\\AddTreatmentModal.js",["301"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, InputNumber, Row, Col, DatePicker, Select, Button, Radio } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nfunction AddTreatmentModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false,\n      treatedBySelectOptions: [],\n      paymentType: ''\n   });\n\n\n\n   // componentDidMount() {\n   //    axios.get('users/admins')\n   //       .then((response) => {\n   //          if (response.status === 200)\n   //             setState({ treatedBySelectOptions: response.data.users });\n   //       })\n   //       .catch((err) => {\n   //          console.log(err);\n   //       });\n   // }\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return\n         props.onAdd(values);\n         hideModal();\n      });\n   }\n\n   const handlePaymentTypeChange = (e) => {\n      setState({ paymentType: e.target.value });\n   }\n\n   const checkTotalAmount = (rule, value, callback) => {\n      const { form } = props;\n      const totalAmountToPay = form.getFieldValue('total_amount_to_pay');\n      if ((value > totalAmountToPay) || (value < 1 && totalAmountToPay))\n         callback('Not lower or greater than Total Amount to pay');\n      else\n         callback();\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false, totalAmountToPay: '', paymentType: '' });\n      form.resetFields();\n   }\n\n\n   return (\n      <React.Fragment>\n         <Button onClick={showModal} type=\"primary\"><PlusCircleFilled />Add New Treatment</Button>\n         <Modal\n            visible={state.visible}\n            title=\"Add New Treatment\"\n            okText=\"Add\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit} form={form}>\n\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true, message: 'Description is required.' }]}>\n\n                        <Input />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Tooth Affected No.\" name=\"tooth_affected_no\" initialValue='' >\n\n                        <Select>\n                           <Select.Option value=''>N/A</Select.Option>\n                           <Select.OptGroup label=\"Adult Teeth\">\n                              <Select.Option value=\"LR_32\">LR_32</Select.Option>\n                              <Select.Option value=\"LR_31\">LR_31</Select.Option>\n                              <Select.Option value=\"LR_30\">LR_30</Select.Option>\n                              <Select.Option value=\"LR_29\">LR_29</Select.Option>\n                              <Select.Option value=\"LR_28\">LR_28</Select.Option>\n                              <Select.Option value=\"LR_27\">LR_27</Select.Option>\n                              <Select.Option value=\"LR_26\">LR_26</Select.Option>\n                              <Select.Option value=\"LR_25\">LR_25</Select.Option>\n                              <Select.Option value=\"LL_24\">LL_24</Select.Option>\n                              <Select.Option value=\"LL_23\">LL_23</Select.Option>\n                              <Select.Option value=\"LL_22\">LL_22</Select.Option>\n                              <Select.Option value=\"LL_21\">LL_21</Select.Option>\n                              <Select.Option value=\"LL_20\">LL_20</Select.Option>\n                              <Select.Option value=\"LL_19\">LL_19</Select.Option>\n                              <Select.Option value=\"LL_18\">LL_18</Select.Option>\n                              <Select.Option value=\"LL_17\">LL_17</Select.Option>\n                              <Select.Option value=\"UL_16\">UL_16</Select.Option>\n                              <Select.Option value=\"UL_15\">UL_15</Select.Option>\n                              <Select.Option value=\"UL_14\">UL_14</Select.Option>\n                              <Select.Option value=\"UL_13\">UL_13</Select.Option>\n                              <Select.Option value=\"UL_12\">UL_12</Select.Option>\n                              <Select.Option value=\"UL_11\">UL_11</Select.Option>\n                              <Select.Option value=\"UL_10\">UL_10</Select.Option>\n                              <Select.Option value=\"UL_9\">UL_9</Select.Option>\n                              <Select.Option value=\"UR_8\">UR_8</Select.Option>\n                              <Select.Option value=\"UR_7\">UR_7</Select.Option>\n                              <Select.Option value=\"UR_6\">UR_6</Select.Option>\n                              <Select.Option value=\"UR_5\">UR_5</Select.Option>\n                              <Select.Option value=\"UR_4\">UR_4</Select.Option>\n                              <Select.Option value=\"UR_3\">UR_3</Select.Option>\n                              <Select.Option value=\"UR_2\">UR_2</Select.Option>\n                              <Select.Option value=\"UR_1\">UR_1</Select.Option>\n                           </Select.OptGroup>\n                           <Select.OptGroup label=\"Child Teeth\">\n                              <Select.Option value=\"LR_T\">LR_T</Select.Option>\n                              <Select.Option value=\"LR_S\">LR_S</Select.Option>\n                              <Select.Option value=\"LR_R\">LR_R</Select.Option>\n                              <Select.Option value=\"LR_Q\">LR_Q</Select.Option>\n                              <Select.Option value=\"LR_P\">LR_P</Select.Option>\n                              <Select.Option value=\"LL_O\">LL_O</Select.Option>\n                              <Select.Option value=\"LL_N\">LL_N</Select.Option>\n                              <Select.Option value=\"LL_M\">LL_M</Select.Option>\n                              <Select.Option value=\"LL_L\">LL_L</Select.Option>\n                              <Select.Option value=\"LL_K\">LL_K</Select.Option>\n                              <Select.Option value=\"UL_J\">UL_J</Select.Option>\n                              <Select.Option value=\"UL_I\">UL_I</Select.Option>\n                              <Select.Option value=\"UL_H\">UL_H</Select.Option>\n                              <Select.Option value=\"UL_G\">UL_G</Select.Option>\n                              <Select.Option value=\"UL_F\">UL_F</Select.Option>\n                              <Select.Option value=\"UR_E\">UR_E</Select.Option>\n                              <Select.Option value=\"UR_D\">UR_D</Select.Option>\n                              <Select.Option value=\"UR_C\">UR_C</Select.Option>\n                              <Select.Option value=\"UR_B\">UR_B</Select.Option>\n                              <Select.Option value=\"UR_A\">UR_A</Select.Option>\n                           </Select.OptGroup>\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Date Treated\" name=\"date_treated\" rules={[{ required: true, message: 'Date Treated is required.' }]}>\n\n                        <DatePicker disabledDate={(current) => current && current > moment()} format=\"MMMM DD, YYYY\" style={{ width: '100%' }} />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={12}>\n                     <Form.Item label=\"Treated By\" name=\"user_id\" rules={[{ required: true, message: 'Treated By is required.' }]}>\n\n                        <Select>\n                           {\n                              state.treatedBySelectOptions.map((user) => {\n                                 return <Select.Option key={user.id} value={user.id}>{user.name}</Select.Option>\n                              })\n                           }\n\n                        </Select>\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Payment Type\" name=\"payment_type\" rules={[{ required: true, message: 'Payment Type is required.' }]}>\n\n                        <Radio.Group onChange={handlePaymentTypeChange}>\n                           <Radio value=\"in-full\">In-full</Radio>\n                           <Radio value=\"installment\">Installment</Radio>\n                           <Radio value=\"no-charge\">No Charge</Radio>\n                        </Radio.Group>\n\n                     </Form.Item>\n                  </Col>\n\n                  {\n                     state.paymentType === 'in-full' ? (\n                        <Col span={24}>\n                           <Form.Item label=\"Total Amount To Pay\" name=\"total_amount_to_pay\" rules={[{ required: true, message: 'Total Amount To Pay is required.' }]}>\n\n                              <InputNumber min={1} style={{ width: '100%' }} />\n\n                           </Form.Item>\n                        </Col>)\n                        : state.paymentType === 'installment' ? (\n                           <React.Fragment>\n                              <Col span={12}>\n                                 <Form.Item label=\"Total Amount To Pay\" name=\"total_amount_to_pay\" rules={[{ required: true, message: 'Total Amount To Pay is required.' }]}>\n\n                                    <InputNumber style={{ width: '100%' }} min={1} />\n\n                                 </Form.Item>\n                              </Col>\n                              <Col span={12}>\n                                 <Form.Item label=\"Initial Payment\" name=\"amount_paid\" rules={[{ required: true, message: 'Initial Paymentis required.' }, { validator: checkTotalAmount }]}>\n\n                                    <InputNumber style={{ width: '100%' }} />\n\n                                 </Form.Item>\n                              </Col>\n                           </React.Fragment>) : null\n                  }\n\n\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </React.Fragment>\n   );\n\n}\n\nexport default AddTreatmentModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\treatment\\TreatmentsPopoverDrawer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\Login.js",["302","303"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Divider, Typography, notification, Form, Input, Button } from 'antd';\nimport { UserAddOutlined, LockOutlined, LoginOutlined } from '@ant-design/icons';\nimport ForgotPasswordModal from '../components/register/ForgotPasswordModal';\n\nimport { login } from \"../redux\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nconst { Title } = Typography;\n\nconst Login = (props, { isAuthenticated }) => {\n\n   // useEffect(() => {\n   //    if (props.location.state) {\n   //       if (props.location.state.resetPasswordStatus)\n   //          notification['success']({\n   //             message: 'Password Reset Successful!',\n   //             description: 'Your password has been resetted sucessfully. You may now login with your new password.',\n   //             duration: 5\n   //          });\n   //       else if (props.location.state.resetPasswordStatus === false)\n   //          notification['error']({\n   //             message: 'Password Reset Error',\n   //             description: 'Expired or invalid reset password link.',\n   //             duration: 5\n   //          });\n   //    }\n   // }, []);\n\n\n\n   const [formValues, setFormValues] = useState({\n      username: \"\",\n      password: \"\",\n   });\n\n   const { username, password } = formValues;\n\n   const onChange = (e) => {\n      setFormValues({ ...formValues, [e.target.name]: e.target.value });\n   }\n\n   const onFinish = () => {\n      props.login(username, password);\n      console.log(username, password);\n   };\n\n\n   if (isAuthenticated) return <Redirect to=\"/\" />;\n\n   return (\n      <div style={{ minHeight: '100vh' }}>\n         <Row type=\"flex\" align=\"middle\" style={{ minHeight: '100vh' }}>\n            <Col md={{ span: 8, offset: 8 }} sm={{ span: 16, offset: 4 }} xs={{ span: 22, offset: 1 }}>\n               <Card bordered={true} style={{ boxShadow: '0px 3px 10px -4px #8c8c8c' }}>\n                  <Link to=\"/\">Back to homepage</Link>\n                  <Title style={{ textAlign: 'center', marginTop: 18, marginBottom: 0 }} level={3}>\n                     Andres Dental Clinic Portal\n                     </Title>\n                  <Divider style={{ margin: '6px 0 12px 0' }} />\n\n                  <Form style={{ textAlign: \"center\" }}\n                     name=\"normal_login\"\n                     className=\"login-form\"\n                     initialValues={{ remember: true }}\n                     onFinish={onFinish}\n                  >\n\n                     <Form.Item style={{ margin: 0 }} label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]}>\n\n                        <Input\n                           prefix={<UserAddOutlined className=\"site-form-item-icon\" />}\n                           type=\"username\"\n                           placeholder=\"Username\"\n                           name=\"username\"\n                           value={username}\n                           onChange={(e) => onChange(e)}\n                           required\n                        />\n\n                     </Form.Item>\n                     <Form.Item style={{ margin: 0 }} label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>\n\n                        <Input.Password\n                           prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                           type=\"password\"\n                           placeholder=\"Password\"\n                           name=\"password\"\n                           value={password}\n                           onChange={(e) => onChange(e)}\n                           minLength=\"8\"\n                           required\n                        />\n                     </Form.Item>\n                     <Form.Item style={{ marginTop: 11 }}>\n                        <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                           <LoginOutlined />\n                              Log in\n                        </Button>\n                     </Form.Item>\n                  </Form>\n                  <div style={{ textAlign: 'right' }}>\n                     <ForgotPasswordModal />\n                  </div>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n}\n\n\nconst mapStateToProps = (state) => ({\n   isAuthenticated: state.auth.isAuthenticated,\n\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\register\\ForgotPasswordModal.js",["304","305"],"import React, { useState } from 'react';\nimport { Modal, Form, Input, Row, Col, Alert, Tooltip, message, notification } from 'antd';\nimport axios from 'axios';\n\n\nfunction ForgotPasswordModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false,\n      sending: false\n   });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      props.form.validateFields((err, values) => {\n         if (err)\n            return;\n         setState({ sending: true });\n\n         axios.post(`users/forgotPassword`, values)\n\n            .then((response) => {\n               if (response.status === 200) {\n                  hideModal();\n                  notification['info']({\n                     message: 'Reset Password Link Sent!',\n                     description: 'A password link reset has been sent to your email. Kindly check your email inbox',\n                     duration: 5\n                  });\n               }\n            })\n            .catch((err) => {\n               console.log(err);\n               message.error('Internal server error!');\n            });\n      });\n   }\n\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      form.resetFields();\n      setState({ visible: false, sending: false });\n   }\n\n   const compareToFirstPassword = (rule, value, callback) => {\n      const form = props.form;\n      if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n      }\n      else if (form.getFieldValue('password') && !value) {\n         callback('Please confirm your password');\n      }\n      else {\n         callback();\n      }\n   }\n\n\n   const validateToNextPassword = (rule, value, callback) => {\n      // const form = props.form;\n      // if (value) {\n      // //   form.validateFields(['confirm_password'], { force: true });\n      // }\n      callback();\n   }\n\n\n   return (\n      <>\n         <a  disabled={props.disabled} onClick={showModal} target=\"_blank\" rel=\"noopener noreferrer\">Forgot Password?</a>\n         <Modal\n            visible={state.visible}\n            title=\"Reset Your Password\"\n            okText=\"Send Reset Password Link\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n            okButtonProps={{ loading: state.sending }}\n            style={{ top: 40 }}\n         >\n            {\n\n               <Alert stylx={{ marginBottom: 11 }} type=\"info\" showIcon message=\"A reset password link will be sent to your email address to reset your password using the provided new password.\" />\n\n            }\n            <Form style={{ marginTop: 11 }} layout=\"vertical\" form={form}>\n\n               <Row>\n\n                  <Col span={24}>\n\n                     <Form.Item label=\"Email Address\" name=\"emailaddress\" rules={[{ required: true, message: 'Email Address is required' }]}>\n                        <Tooltip title=\"Email Address used when you registered your account.\">\n\n                           <Input />\n\n                        </Tooltip>\n                     </Form.Item>\n\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"New Password\" name=\"password\" rules={[{ required: true, message: 'New password  is required' }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Confirm New Password\" name=\"confirm_password\" rules={[{ required: true, message: 'Confirm your new password' }]}>\n\n                        <Input.Password />\n\n                     </Form.Item>\n                  </Col>\n\n               </Row>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\n\nexport default ForgotPasswordModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DescriptionItem.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\UpdatePersonalInfoModal.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\SpinningComponent.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\index.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\store.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\Layout.js",["306","307","308"],"import React, { useEffect } from \"react\";\nimport { Layout, Row, Col, Dropdown, Menu, Typography, Avatar } from 'antd';\n\nimport { connect } from \"react-redux\";\n\nimport { checkAuthenticated, load_user, logout } from \"../redux\";\nimport SiderNavigation from './SiderNavigation';\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport Logo from '../alhassn.png';\nimport Login from '../pages/Login';\n\nimport \"./Layout.css\";\n\nconst { Sider, Header } = Layout;\nconst { Text } = Typography;\n\nconst CustomLayout = (props) => {\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await props.checkAuthenticated();\n        await props.load_user();\n      } catch (err) { }\n    };\n\n    fetchData();\n  }, []);\n\n\n\n\n  return (\n    <>\n\n      {!props.isAuthenticated ? (\n        <Login />\n      ) : (\n          <Layout className=\"layout\">\n\n\n            <Sider\n              trigger={null}\n              collapsed={0}\n              breakpoint=\"lg\"\n              width=\"15%\"\n\n              // style={{ height: '100vh', background: '#3f4d67', boxShadow: '3px 0px 15px 2px #8c8c8c', position: 'fixed', left: 0, overflow: 'auto', }}\n              style={{ height: '100vh', boxShadow: '3px 0px 15px 2px #8c8c8c', position: 'fixed', left: 0, overflow: 'auto', }}\n            >\n              <div className=\"logo\">\n                <img style={{ width: '100%', maxWidth: '150px' }} src={Logo} />\n                <br />\n\n                <Text style={{ color: '#fff' }}></Text>\n\n\n              </div>\n              <SiderNavigation />\n\n            </Sider>\n\n            <Layout className=\"site-layout\" style={{ marginLeft: \"15%\" }}>\n\n              <Header style={{ boxShadow: '0px -1px 3px rgba(0, 0, 0, 1)', background: '#fff', width: '100%' }}>\n                <Row>\n                  <Col style={{ paddingRight: 16 }} align=\"right\" span={24}>\n                    <Dropdown overlay={\n                      <Menu >\n                        <Menu.Item key=\"1\" onClick={props.logout}>\n                          <LogoutOutlined />\n                      Logout\n                  </Menu.Item>\n                      </Menu >\n                    } trigger={['click']}>\n                      <a className=\"ant-dropdown-link\" >\n                        <Avatar style={{ backgroundColor: '#1890ff' }} icon={<UserOutlined />} />\n                        {props.username == null ? (\n                          <Text style={{ color: '#1890ff' }}> hey there </Text>\n\n                        ) : (\n                            <Text style={{ color: '#1890ff' }}> {props.username.username} </Text>\n\n\n                          )}\n                      </a>\n                    </Dropdown>\n                  </Col>\n                </Row>\n              </Header>\n\n              {props.children}\n\n\n            </Layout>\n\n          </Layout>\n        )}\n\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    // token: state.auth.token,\n    username: state.auth.user,\n    isAuthenticated: state.auth.isAuthenticated,\n\n\n  };\n};\n\nexport default connect(mapStateToProps, { checkAuthenticated, load_user, logout })(CustomLayout);\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentActions.js",["309"],"import axios from \"axios\";\nimport {\n  GET_APPOINTMENTS_LIST_SUCCESS,\n  GET_APPOINTMENTS_LIST_FAIL,\n  GET_APPOINTMENT_DETAIL_SUCCESS,\n  GET_APPOINTMENT_DETAIL_FAIL,\n  CREATE_APPOINTMENT_SUCCESS,\n  CREATE_APPOINTMENT_FAIL,\n\n} from \"./abointmentTypes\";\n\n// GET APPOINTMENT\n\nexport const getABNTs = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/appointments/`,\n        config\n      );\n\n      dispatch({\n        type: GET_APPOINTMENTS_LIST_SUCCESS,\n        payload: res.data,\n      });\n\n    } catch (err) {\n      dispatch({\n        type: GET_APPOINTMENTS_LIST_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: GET_APPOINTMENTS_LIST_FAIL,\n    });\n  }\n};\n\n\n\n// GET APPOINTMENT DETAIL\n\n\nexport const getABNTSDetail = (id) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/appointments/${id}/`,\n        config\n      );\n\n      dispatch({\n        type: GET_APPOINTMENT_DETAIL_SUCCESS,\n        payload: res.data,\n      });\n\n    } catch (err) {\n      dispatch({\n        type: GET_APPOINTMENT_DETAIL_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: GET_APPOINTMENT_DETAIL_FAIL,\n    });\n  }\n};\n\n\n\n\n\n\n// CREATE APPOINTMENT \n\nexport const createABNT = (formData) => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/appointments/`,\n        // config,\n        formData\n      );\n\n      dispatch({\n        type: CREATE_APPOINTMENT_SUCCESS,\n        payload: res.data,\n      });\n\n    } catch (err) {\n      dispatch({\n        type: CREATE_APPOINTMENT_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: GET_APPOINTMENT_DETAIL_FAIL,\n    });\n  }\n};\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\abointment\\abointmentTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientActions.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\patient\\patientReducer.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\pages\\DentalRecords.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecord.js",["310","311","312","313","314"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Skeleton, Row, Col, Tag, Tabs, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport DescriptionItem from './DescriptionItem';\nimport AdultTeethChart from '../dental/AdultTeethChart';\nimport ChildTeethChart from '../dental/ChildTeethChart';\n\nimport TreatmentsTable from './TreatmentsTable';\n\nimport UpdatePersonalInfoModal from './UpdatePersonalInfoModal';\nimport { connect } from \"react-redux\";\nimport { getPATNDetail } from \"../../redux\";\n\nconst { TabPane } = Tabs;\nconst { Text } = Typography;\n\n\n\nfunction DentalRecord(props) {\n\n  const [state, setState] = useState({\n    loading: true,\n    patient: {},\n    treatments: []\n  });\n\n  useEffect(() => {\n\n    props.getPATNDetail(props.id);\n\n  }, []);\n\n\n  console.log(props.patient)\n  console.log(props)\n\n  // const getRecord = (id) => {\n  //   setState({ loading: true });\n  //   axios.get(`patients/${id}`)\n  //     .then((response) => {\n  //       if (response.status === 200)\n  //         setState({ patient: response.data });\n  //     })\n  //     .then(() => {\n  //       setTimeout(() => {\n  //         setState({ loading: false });\n  //       }, 800)\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //       message.error('Something went wrong! Please, try again.');\n  //     });\n  // }\n\n  const getRecordOnAddTreatment = (id) => {\n    axios.get(`patients/${id}`)\n      .then((response) => {\n        if (response.status === 200)\n          setState({ patient: response.data });\n      })\n      .catch((err) => {\n        console.error(err);\n        message.error('Something went wrong! Please, try again.');\n      });\n  }\n\n  // const handleUpdate = (id, values) => {\n  //   const hide = message.loading('Updating Personal Info...', 0);\n  //   values.birthday = values.birthday.format('YYYY-MM-DD');\n  //   axios.patch(`patients/${id}`, values)\n  //     .then((response) => {\n  //       if (response.status === 200) {\n  //         hide();\n  //         message.success('Personal Info Updated Successfully');\n  //         getRecord(id);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       hide();\n  //       message.error('Something went wrong! Please, try again.');\n  //     });\n  // }\n\n  const lastVisit = !state.patient.last_visit ? (<Tag color=\"geekblue\">New Record</Tag>) : moment(state.patient.last_visit).format('MMMM, DD YYYY');\n  const birthday = moment(state.patient.birthday).format('MMMM DD, YYYY');\n  const age = moment().diff(state.patient.birthday, 'years');\n\n  return (\n    <>\n      <div style={{ marginBottom: 8 }}>\n        <Row>\n          <Col align=\"left\">\n            <Link to=\"/dentalrecords\"> Back to Dental Records</Link>\n          </Col>\n          {/* <Col align=\"right\">\n            <UpdatePersonalInfoModal patient={state.patient} onUpdate={handleUpdate} />\n          </Col> */}\n\n          <Col align=\"center\" md={{ span: 12 }} sm={{ span: 24 }}>\n            <AdultTeethChart patientId={state.patient.id} />\n          </Col>\n\n        </Row>\n\n      </div>\n\n      {/* {state.loading ? (<Skeleton loading={state.loading} paragraph={{ rows: 14 }} active />) : ( */}\n      <>\n        <Row type=\"flex\">\n          <Col span={8}><DescriptionItem title=\"Code\" content={props.patient.id} /></Col>\n          <Col span={8}><DescriptionItem title=\"Name\" content={props.patient.name} /></Col>\n          <Col span={8}><DescriptionItem title=\"Last Visit\" content={lastVisit} /></Col>\n          <Col span={8}><DescriptionItem title=\"Birthday\" content={birthday} /></Col>\n          <Col span={8}><DescriptionItem title=\"Age\" content={age} /></Col>\n          <Col span={8}><DescriptionItem title=\"Address\" content={props.patient.address} /></Col>\n          <Col span={8}><DescriptionItem title=\"Occupation\" content={props.patient.occupation} /></Col>\n          <Col span={8}><DescriptionItem title=\"Civil Status\" content={props.patient.civil_status} /></Col>\n          <Col span={8}><DescriptionItem title=\"Contact Number\" content={props.patient.phone} /></Col>\n        </Row>\n        <Tabs defaultActiveKey=\"2\">\n          <TabPane tab=\"Treatments and/or Procedures\" key=\"2\">\n            {/* <TreatmentsTable role={props.role} getPatient={() => getRecordOnAddTreatment(props.id)} patientId={state.patient.id} /> */}\n          </TabPane>\n          <TabPane tab=\"Dental Chart\" key=\"3\">\n            <Row>\n              <Col align=\"center\" span={24}>\n                <Text strong>Legend: </Text>\n                <br />\n                <Tag color=\"#ffc53d\">Decayed</Tag>\n                <Tag color=\"#ff4d4f\">Missing</Tag>\n                <Tag color=\"#40a9ff\">Filled Teeth</Tag>\n              </Col>\n\n              <Col align=\"center\" md={{ span: 12 }} sm={{ span: 24 }}>\n                <ChildTeethChart patientId={state.patient.id} />\n              </Col>\n\n              <Col align=\"center\" md={{ span: 12 }} sm={{ span: 24 }}>\n                <AdultTeethChart patientId={state.patient.id} />\n              </Col>\n\n            </Row>\n          </TabPane>\n        </Tabs>\n      </>\n      {/* )} */}\n    </>\n  );\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n\n    patient: state.patient.patientsDetail,\n    // loading: state.Abointment.loading\n  };\n};\n\n\nexport default connect(\n  mapStateToProps,\n  { getPATNDetail }\n)(DentalRecord);\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\AppointmentsTable.js",["315","316","317","318","319","320","321","322"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\CreateAppointmentModal.js",["323","324","325","326","327","328","329"],"import React, { useState, useEffect } from 'react';\nimport { message, Modal, Form, Input, Row, Col, DatePicker, Select, Button } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nimport { connect } from \"react-redux\";\nimport { createABNT } from \"../../redux\";\n\nconst { Option } = Select;\n\n\n\nfunction CreateAppointmentModal(props, { createABNT }) {\n\n   const [state, setState] = useState({\n      visible: false,\n   });\n\n   const [formData, setFormData] = useState({\n      token: null,\n      reason: \"\",\n      patient: \"\",\n      doctor: \"\",\n   });\n\n   console.log(formData)\n\n   const { patient, reason, doctor, token } = formData;\n\n   console.log(formData)\n\n   const onChange = (e) =>\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   console.log(formData)\n\n\n\n\n   // useEffect(() => {\n   //    const fetchData = async () => {\n   //       try {\n   //          await props.getPATN();\n\n   //       } catch (err) { }\n   //    };\n\n   //    fetchData();\n   // }, []);\n\n   console.log(props.patient)\n\n\n   // const handleSubmit = (e) => {\n\n   //    e.preventDefault();\n\n   //    // props.form.validateFields((err, values) => {\n   //    //    if (err)\n   //    //       return\n\n   //    props.createABNT(patient, reason);\n\n   //    // hideModal();\n\n   //    // });\n   // }\n   const onFinish = () => {\n      console.log(formData)\n\n      props.createABNT(formData);\n\n   };\n\n   console.log(onFinish())\n\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n\n   const disabledDateTime = () => {\n      return {\n         disabledHours: () => [0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23],\n      };\n   }\n\n   const [form] = Form.useForm();\n\n\n   // const options = props.patient.map(d => <Option key={d.id}>{d.name}</Option>)\n\n   return (\n      <>\n         <Button onClick={showModal} type=\"primary\"><PlusCircleFilled />Create New Appointment</Button>\n\n         <Modal\n            visible={state.visible}\n            title=\"Create a New Appointment\"\n            okText=\"Create\"\n            onCancel={hideModal}\n         // onOk={onFinish}\n         >\n\n\n            <Form\n               layout=\"vertical\"\n               //  onSubmit={handleSubmit}\n               onFinish={onFinish}\n\n               form={form}\n            >\n\n               <Row gutter={8}>\n                  {/* <Col span={24}>\n                     <Form.Item label=\"Date and Time\" name=\"date\" rules={[{ required: true, message: 'Date and Time is required.' }]} >\n\n\n                        <DatePicker\n                           name=\"date\"\n                           value={date}\n                           onChange={(e) => onChange(e)}\n                           disabledTime={disabledDateTime}\n                           disabledDate={(current) => current && current < moment() || moment(current).day() === 0}\n                           placeholder=\"Select date and time\" style={{ width: '100%' }}\n\n                           showTime={\n                              {\n                                 use12Hours: true, format: 'h:mm',\n                                 defaultValue: moment('8:00', 'h:mm')\n                              }\n                           }\n                           format=\"MMMM DD, YYYY h:mm A\"\n                        />\n\n                     </Form.Item>\n                  </Col> */}\n                  <Col span={24}>\n                     <Form.Item label=\"Patient Name\" rules={[{ required: true, message: 'Patient name is required' }]}>\n\n                        {/* <Select\n                           name=\"patient\"\n                           allowClear\n                           showSearch\n                           placeholder=\"\"\n                           defaultActiveFirstOption={false}\n                           showArrow={false}\n                           filterOption={false}\n                           notFoundContent={null}\n                           value={patient}\n                           onChange={(e) => onChange(e)}\n                        >\n                           {options}\n                        </Select> */}\n                        <Input\n                           name=\"patient\"\n                           value={patient}\n                           onChange={(e) => onChange(e)}\n                        />\n                     </Form.Item>\n\n                  </Col>\n\n                  <Col span={24}>\n                     <Form.Item label=\"token\" rules={[{ required: true, message: 'Reason is required.' }]}\n                     >\n\n                        <Input\n                           name=\"token\"\n                           value={token}\n                           onChange={(e) => onChange(e)}\n                        />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"Reason\" rules={[{ required: true, message: 'Reason is required.' }]}\n                     >\n\n                        <Input\n                           name=\"reason\"\n                           value={reason}\n                           onChange={(e) => onChange(e)}\n                        />\n\n                     </Form.Item>\n                  </Col>\n                  <Col span={24}>\n                     <Form.Item label=\"doctor\" rules={[{ required: true, message: 'Reason is required.' }]}\n                     >\n\n                        <Input\n                           name=\"doctor\"\n                           value={doctor}\n                           onChange={(e) => onChange(e)}\n                        />\n\n                     </Form.Item>\n                  </Col>\n\n               </Row>\n\n               <Button type=\"primary\" htmlType=\"submit\">\n                  Submita\n               </Button>\n\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\n\nconst mapStateToProps = state => {\n   return {\n\n      patient: state.patient.patients,\n\n      // loading: state.Abointment.loading\n   };\n};\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       createASNT: (asnt) => dispatch(createASNT(asnt))\n//    };\n// };\n\nexport default connect(\n   mapStateToProps,\n   { createABNT }\n\n)(CreateAppointmentModal);\n\n\n\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\appointments\\DeclineCancelAppointmentModal.js",["330"],"import React, { useState } from 'react';\nimport { Modal, Form, Row, Col, Button, Input } from 'antd';\n// import moment from 'moment';\n\n\n\nfunction DeclineCancelAppointmentModal(props) {\n   const [form] = Form.useForm();\n\n   const [state, setState] = useState({\n      visible: false\n   });\n\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      // props.form.validateFields((err, values) => {\n      //    if (err)\n      //       return\n      //    props.onDeclineCancel({\n      //       id: props.appointment.id,\n      //       date: props.appointment.date,\n      //       name: props.appointment.name,\n      //       contact_number: props.appointment.contact_number,\n      //       type: props.type,\n      //       reasonMessage: values.message\n      //    });\n      //    hideModal();\n      // });\n   }\n\n   const showModal = () => {\n      setState({ visible: true });\n   }\n\n   const hideModal = () => {\n      setState({ visible: false });\n      form.resetFields();\n   }\n\n\n   const title = props.type === 'decline' ? 'Appointment Decline Reason SMS' : 'Appointment Cancellation Reason SMS';\n   const buttonText = props.type === 'decline' ? 'Decline Appointment' : 'Cancel Appointment';\n   return (\n      <>\n         <a disabled={props.disabled}  onClick={showModal} target=\"_blank\" rel=\"noopener noreferrer\">{buttonText}</a>\n\n         <Modal\n            visible={state.visible}\n            title={title}\n            okText=\"Send\"\n            onCancel={hideModal}\n            onOk={handleSubmit}\n         >\n            <Form layout=\"vertical\" onSubmit={handleSubmit}\n               form={form}>\n               <Row gutter={8}>\n                  <Col span={24}>\n                     <Form.Item label=\"Message\" name=\"message\" rules={[{ required: true, message: 'Message is required' }]} >\n\n                        <Input.TextArea autosize={{ minRows: 8, maxRows: 8 }} />\n\n                     </Form.Item>\n                  </Col>\n               </Row>\n               <Button hidden htmlType=\"submit\"></Button>\n            </Form>\n         </Modal>\n      </>\n   );\n\n}\n\nexport default DeclineCancelAppointmentModal;","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\UpdateContactForm.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\hocs\\SiderNavigation.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\components\\DentalRecord\\DentalRecordsTable.js",["331","332","333","334"],"import React, { useState, useEffect } from 'react';\nimport { Table, Button, Row, Col, message, Typography, Input, Tag } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\n\nimport CreateDentalRecordModal from '../dental/CreateDentalRecordModal'\n\nimport { getPATN } from \"../../redux\";\n\nconst { Search } = Input;\nconst { Title, Paragraph, Text } = Typography;\n\nfunction DentalRecordsTable(props) {\n\n   const [state, setState] = useState({\n      loading: false,\n      patients: [],\n      searchInput: '',\n   });\n\n\n   useEffect( async () => {\n      \n      await props.getPATN()\n      // .then(() => {\n\n      //    setState({ appointmentsTable: props.appointment });\n\n\n      // })\n   }, []);\n\n   // componentDidMount() {\n   //    getPatients();\n   // }\n\n   // const getPatients = (searchValue) => {\n   //    setState({ loading: true, search: searchValue });\n   //    if (searchValue) {\n   //       const hide = message.loading('Searching...', 0);\n   //       axios.get('patients', {\n   //          params: { search: searchValue }\n   //       })\n   //          .then((response) => {\n   //             if (response.status === 200) {\n   //                hide();\n   //                setState({ patients: response.data.patients });\n   //                setTimeout(() => {\n   //                   setState({ loading: false });\n   //                   message.info(`${response.data.patients.length} Record(s) found`);\n   //                }, 500);\n   //             }\n   //          })\n   //          .catch((err) => {\n   //             console.log(err);\n   //             hide();\n   //             message.error('Something went wrong! Please, try again.');\n   //          });\n\n   //    }\n   //    else {\n   //       axios.get('patients/')\n   //          .then((response) => {\n   //             setState({ patients: response.data.patients, loading: false });\n   //          })\n   //          .catch((err) => {\n   //             console.log(err);\n   //          });\n   //    }\n   // }\n   console.log(props.patients)\n   const handleCreate = (values) => {\n      const hide = message.loading('Creating New Dental Record...', 0);\n      values.birthday = values.birthday.format('YYYY-MM-DD');\n      axios.post('patients/create', values)\n         .then((response) => {\n            if (response.status === 200) {\n               hide();\n               message.success('New Dental Record Created Successfully');\n               // getPatients();\n            }\n         })\n         .catch((err) => {\n            console.log(err);\n            hide();\n            message.error('Something went wrong! Please, try again.');\n         });\n   }\n\n   // when search button submits\n   // handleSearch = (value) => {\n   //    // getPatients(value);\n   // }\n\n   const handleSearchErased = (e) => {\n      // const { value } = e.target;\n      // if (value === '')\n      //    getPatients(value);\n   }\n\n\n   const columns = [\n      {\n         title: <Text strong>Name</Text>,\n         dataIndex: 'name',\n         defaultSortOrder: 'ascend',\n         sorter: (a, b) => a.name.toLowerCase().substring(0, 2) < b.name.toLowerCase().substring(0, 2),\n         render: (text, record) => {\n            return record.name;\n         }\n      },\n      {\n         title: <Text strong>Last Visit</Text>,\n         width: 200,\n         dataIndex: 'last_visit',\n         defaultSortOrder: 'ascend',\n         sorter: (a, b) => moment(a.last_visit).format('x') - moment(b.last_visit).format('x'),\n         render: (text, record) => {\n            const display = !record.last_visit ? (<Tag color=\"geekblue\">New Record</Tag>) : moment(record.last_visit).format('MMMM, DD YYYY');\n            return display;\n         }\n      },\n      {\n         title: <Text strong>Address</Text>,\n         dataIndex: 'address',\n         render: (text, record) => {\n            return record.address;\n         }\n      },\n      {\n         title: <Text strong>Code</Text>,\n         dataIndex: 'code',\n         render: (text, record) => {\n            return <Paragraph copyable={true} >{record.id}</Paragraph>;\n         }\n      },\n      {\n         title: <Text strong>Actions</Text>,\n         dataIndex: 'actions',\n         render: (text, record) => {\n            return (\n               <Link to={`/dentalrecords/${record.id}`}>\n                  <Button type=\"primary\">View Dental Record</Button>\n               </Link>\n            );\n         }\n      }\n   ];\n\n\n   return (\n      <>\n         <Title level={4} style={{ margin: 0 }}>DENTAL RECORDS</Title>\n         <Row>\n            <Col align=\"right\" style={{ marginBottom: '8px' }}>\n               <CreateDentalRecordModal onCreate={handleCreate} />\n            </Col>\n            <Col span={24}>\n               <Search\n                  // style={{ width: '100%', zIndex: -999 }}\n                  placeholder=\"search dental record by patient name\"\n                  enterButton\n                  // onSearch={(value) => getPatients(value)}\n                  // onChange={handleSearchErased}\n               />\n            </Col>\n\n         </Row>\n         <Table\n            size=\"medium\"\n            columns={columns}\n            // dataSource={state.patients}\n            dataSource={props.patients}\n            locale={{ emptyText: state.search === '' ? 'No Data' : 'No Record Found' }}\n            scroll={{ x: 300 }}\n            loading={state.loading}\n            rowKey={(record) => record.id}\n\n            pagination={\n               {\n                  position: 'both',\n                  showSizeChanger: true,\n                  showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} dental records`,\n                  defaultCurrent: 1,\n                  pageSize: 11,\n                  // onChange: (page, pageSize) => {\n\n                  // }\n               }\n            }\n         />\n      </>\n   );\n\n\n}\n\n// export default DentalRecordsTable;\n\nconst mapStateToProps = state => {\n   return {\n\n      patients: state.patient.patients,\n      // loading: state.Abointment.loading\n   };\n};\n\n\nexport default connect(\n   mapStateToProps,\n   { getPATN }\n)(DentalRecordsTable);\n\n\n","C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billActions.js",["335"],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billTypes.js",[],"C:\\Users\\alhassn alshreaf\\Desktop\\clinc\\clinic\\frontend\\src\\redux\\bill\\billReducer.js",[],{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","severity":1,"message":"341","line":2,"column":54,"nodeType":"342","messageId":"343","endLine":2,"endColumn":66},{"ruleId":"340","severity":1,"message":"344","line":43,"column":10,"nodeType":"342","messageId":"343","endLine":43,"endColumn":23},{"ruleId":"340","severity":1,"message":"345","line":2,"column":52,"nodeType":"342","messageId":"343","endLine":2,"endColumn":60},{"ruleId":"340","severity":1,"message":"346","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":13},{"ruleId":"340","severity":1,"message":"347","line":17,"column":18,"nodeType":"342","messageId":"343","endLine":17,"endColumn":26},{"ruleId":"340","severity":1,"message":"348","line":28,"column":10,"nodeType":"342","messageId":"343","endLine":28,"endColumn":27},{"ruleId":"349","severity":1,"message":"350","line":37,"column":7,"nodeType":"351","endLine":37,"endColumn":9,"suggestions":"352"},{"ruleId":"340","severity":1,"message":"353","line":21,"column":10,"nodeType":"342","messageId":"343","endLine":21,"endColumn":24},{"ruleId":"340","severity":1,"message":"354","line":2,"column":28,"nodeType":"342","messageId":"343","endLine":2,"endColumn":35},{"ruleId":"340","severity":1,"message":"355","line":16,"column":11,"nodeType":"342","messageId":"343","endLine":16,"endColumn":16},{"ruleId":"340","severity":1,"message":"347","line":16,"column":18,"nodeType":"342","messageId":"343","endLine":16,"endColumn":26},{"ruleId":"349","severity":1,"message":"356","line":26,"column":7,"nodeType":"351","endLine":26,"endColumn":9,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":68,"column":1,"nodeType":"360","messageId":"361","endLine":68,"endColumn":73},{"ruleId":"358","severity":1,"message":"359","line":69,"column":1,"nodeType":"360","messageId":"361","endLine":69,"endColumn":152},{"ruleId":"362","severity":1,"message":"363","line":13,"column":4,"nodeType":"364","messageId":"365","endLine":38,"endColumn":5},{"ruleId":"362","severity":1,"message":"363","line":42,"column":4,"nodeType":"364","messageId":"365","endLine":57,"endColumn":5},{"ruleId":"340","severity":1,"message":"366","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"367","line":3,"column":4,"nodeType":"342","messageId":"343","endLine":3,"endColumn":11},{"ruleId":"340","severity":1,"message":"354","line":3,"column":64,"nodeType":"342","messageId":"343","endLine":3,"endColumn":71},{"ruleId":"340","severity":1,"message":"341","line":3,"column":73,"nodeType":"342","messageId":"343","endLine":3,"endColumn":85},{"ruleId":"340","severity":1,"message":"346","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":13},{"ruleId":"340","severity":1,"message":"368","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"369","line":2,"column":62,"nodeType":"342","messageId":"343","endLine":2,"endColumn":67},{"ruleId":"340","severity":1,"message":"370","line":7,"column":10,"nodeType":"342","messageId":"343","endLine":7,"endColumn":18},{"ruleId":"340","severity":1,"message":"371","line":203,"column":7,"nodeType":"342","messageId":"343","endLine":203,"endColumn":22},{"ruleId":"340","severity":1,"message":"366","line":1,"column":15,"nodeType":"342","messageId":"343","endLine":1,"endColumn":23},{"ruleId":"340","severity":1,"message":"372","line":20,"column":10,"nodeType":"342","messageId":"343","endLine":20,"endColumn":32},{"ruleId":"373","severity":1,"message":"374","line":25,"column":26,"nodeType":"375","messageId":"376","endLine":25,"endColumn":27,"suggestions":"377"},{"ruleId":"373","severity":1,"message":"374","line":25,"column":51,"nodeType":"375","messageId":"376","endLine":25,"endColumn":52,"suggestions":"378"},{"ruleId":"340","severity":1,"message":"379","line":30,"column":13,"nodeType":"342","messageId":"343","endLine":30,"endColumn":17},{"ruleId":"340","severity":1,"message":"380","line":60,"column":13,"nodeType":"342","messageId":"343","endLine":60,"endColumn":23},{"ruleId":"340","severity":1,"message":"381","line":2,"column":26,"nodeType":"342","messageId":"343","endLine":2,"endColumn":30},{"ruleId":"340","severity":1,"message":"355","line":15,"column":11,"nodeType":"342","messageId":"343","endLine":15,"endColumn":16},{"ruleId":"340","severity":1,"message":"347","line":15,"column":18,"nodeType":"342","messageId":"343","endLine":15,"endColumn":26},{"ruleId":"340","severity":1,"message":"353","line":23,"column":10,"nodeType":"342","messageId":"343","endLine":23,"endColumn":24},{"ruleId":"340","severity":1,"message":"382","line":36,"column":10,"nodeType":"342","messageId":"343","endLine":36,"endColumn":22},{"ruleId":"340","severity":1,"message":"379","line":12,"column":11,"nodeType":"342","messageId":"343","endLine":12,"endColumn":15},{"ruleId":"340","severity":1,"message":"383","line":40,"column":10,"nodeType":"342","messageId":"343","endLine":40,"endColumn":27},{"ruleId":"384","severity":1,"message":"385","line":53,"column":22,"nodeType":"386","endLine":53,"endColumn":46},{"ruleId":"340","severity":1,"message":"387","line":35,"column":10,"nodeType":"342","messageId":"343","endLine":35,"endColumn":22},{"ruleId":"340","severity":1,"message":"346","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":13},{"ruleId":"340","severity":1,"message":"368","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"341","line":2,"column":47,"nodeType":"342","messageId":"343","endLine":2,"endColumn":59},{"ruleId":"340","severity":1,"message":"372","line":51,"column":10,"nodeType":"342","messageId":"343","endLine":51,"endColumn":32},{"ruleId":"340","severity":1,"message":"388","line":65,"column":10,"nodeType":"342","messageId":"343","endLine":65,"endColumn":32},{"ruleId":"349","severity":1,"message":"350","line":28,"column":6,"nodeType":"351","endLine":28,"endColumn":8,"suggestions":"389"},{"ruleId":"390","severity":1,"message":"391","line":52,"column":17,"nodeType":"386","endLine":52,"endColumn":80},{"ruleId":"384","severity":1,"message":"385","line":76,"column":23,"nodeType":"386","endLine":76,"endColumn":57},{"ruleId":"340","severity":1,"message":"392","line":94,"column":11,"nodeType":"342","messageId":"343","endLine":94,"endColumn":17},{"ruleId":"340","severity":1,"message":"345","line":3,"column":22,"nodeType":"342","messageId":"343","endLine":3,"endColumn":30},{"ruleId":"340","severity":1,"message":"393","line":11,"column":8,"nodeType":"342","messageId":"343","endLine":11,"endColumn":23},{"ruleId":"340","severity":1,"message":"394","line":13,"column":8,"nodeType":"342","messageId":"343","endLine":13,"endColumn":31},{"ruleId":"349","severity":1,"message":"350","line":34,"column":6,"nodeType":"351","endLine":34,"endColumn":8,"suggestions":"395"},{"ruleId":"340","severity":1,"message":"396","line":58,"column":9,"nodeType":"342","messageId":"343","endLine":58,"endColumn":32},{"ruleId":"340","severity":1,"message":"368","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"397","line":7,"column":8,"nodeType":"342","messageId":"343","endLine":7,"endColumn":30},{"ruleId":"340","severity":1,"message":"398","line":10,"column":10,"nodeType":"342","messageId":"343","endLine":10,"endColumn":20},{"ruleId":"340","severity":1,"message":"370","line":10,"column":22,"nodeType":"342","messageId":"343","endLine":10,"endColumn":30},{"ruleId":"340","severity":1,"message":"399","line":35,"column":10,"nodeType":"342","messageId":"343","endLine":35,"endColumn":33},{"ruleId":"384","severity":1,"message":"385","line":184,"column":22,"nodeType":"386","endLine":193,"endColumn":68},{"ruleId":"384","severity":1,"message":"385","line":200,"column":27,"nodeType":"386","endLine":202,"endColumn":70},{"ruleId":"384","severity":1,"message":"385","line":224,"column":39,"nodeType":"386","endLine":226,"endColumn":82},{"ruleId":"340","severity":1,"message":"368","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"354","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":17},{"ruleId":"340","severity":1,"message":"400","line":2,"column":49,"nodeType":"342","messageId":"343","endLine":2,"endColumn":59},{"ruleId":"340","severity":1,"message":"346","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":13},{"ruleId":"340","severity":1,"message":"401","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":14},{"ruleId":"340","severity":1,"message":"402","line":10,"column":9,"nodeType":"342","messageId":"343","endLine":10,"endColumn":15},{"ruleId":"340","severity":1,"message":"403","line":89,"column":10,"nodeType":"342","messageId":"343","endLine":89,"endColumn":26},{"ruleId":"384","severity":1,"message":"385","line":46,"column":10,"nodeType":"386","endLine":46,"endColumn":102},{"ruleId":"340","severity":1,"message":"347","line":17,"column":18,"nodeType":"342","messageId":"343","endLine":17,"endColumn":26},{"ruleId":"349","severity":1,"message":"404","line":24,"column":15,"nodeType":"405","endLine":33,"endColumn":5},{"ruleId":"349","severity":1,"message":"350","line":33,"column":7,"nodeType":"351","endLine":33,"endColumn":9,"suggestions":"406"},{"ruleId":"340","severity":1,"message":"407","line":97,"column":10,"nodeType":"342","messageId":"343","endLine":97,"endColumn":28},{"ruleId":"340","severity":1,"message":"392","line":94,"column":11,"nodeType":"342","messageId":"343","endLine":94,"endColumn":17},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-unused-vars","'notification' is defined but never used.","Identifier","unusedVar","'getMyBalances' is assigned a value but never used.","'Skeleton' is defined but never used.","'axios' is defined but never used.","'setState' is assigned a value but never used.","'componentDidMount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["410"],"'getUserAccount' is assigned a value but never used.","'message' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAppointmentsTable'. Either include it or remove the dependency array.",["411"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'Tooltip' is defined but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","'getABNTs' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'compareToFirstPassword' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["412","413"],["414","415"],"'form' is assigned a value but never used.","'roleSelect' is assigned a value but never used.","'Icon' is defined but never used.","'handleUpdate' is assigned a value but never used.","'handleConfirmBlur' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'checkBalance' is assigned a value but never used.","'validateToNextPassword' is assigned a value but never used.",["416"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'config' is assigned a value but never used.","'TreatmentsTable' is defined but never used.","'UpdatePersonalInfoModal' is defined but never used.",["417"],"'getRecordOnAddTreatment' is assigned a value but never used.","'CreateAppointmentModal' is defined but never used.","'createABNT' is defined but never used.","'handleAppointmentCreate' is assigned a value but never used.","'DatePicker' is defined but never used.","'moment' is defined but never used.","'Option' is assigned a value but never used.","'disabledDateTime' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["418"],"'handleSearchErased' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"messageId":"423","fix":"424","desc":"425"},{"messageId":"426","fix":"427","desc":"428"},{"messageId":"423","fix":"429","desc":"425"},{"messageId":"426","fix":"430","desc":"428"},{"desc":"419","fix":"431"},{"desc":"419","fix":"432"},{"desc":"419","fix":"433"},"Update the dependencies array to be: [props]",{"range":"434","text":"435"},"Update the dependencies array to be: [getAppointmentsTable]",{"range":"436","text":"437"},"removeEscape",{"range":"438","text":"439"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"440","text":"441"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"442","text":"439"},{"range":"443","text":"441"},{"range":"444","text":"435"},{"range":"445","text":"435"},{"range":"446","text":"435"},[825,827],"[props]",[688,690],"[getAppointmentsTable]",[592,593],"",[592,592],"\\",[617,618],[617,617],[733,735],[842,844],[780,782]]